<xtml package="true">

<xtml ns="uiaction" deprecated="true">

  <Component id="SetTextSelectionOld" type="uiaction.UsageAction" execution="native">
    <Param name="RunOn" />
    <Param name="SelectionStart" Description="0-based index"/>
    <Param name="SelectionEnd" Description="0-based index" />
  </Component>
  

 <Component id="ElementByID" type="data.Data" execution="native">
  <Param name="StartFrom" type="data.Data"><Default t="uiaction.ControlElementToRunOn"/></Param>
  <Param name="ID" essential="true" />
 </Component>

 <Component id="ElementByClass" type="data.Data" execution="native">
  <Param name="StartFrom" type="data.Data"><Default t="uiaction.ControlElementToRunOn"/></Param>
  <Param name="Cls" essential="true" />
 </Component>

 <Component id="GoUp" type="data.Data" execution="native">
   <Param name="TopClass"/>
   <Param name="TopId"/>
   <Param name="TopHtmlTag"/>
 </Component>

 <Component id="GoUpAndDown" type="data.Data">
   <Param name="UpClass" essential="true"  />
   <Param name="DownClass" essential="true" />
   <xtml t="uiaction.ElementByClass" Cls="%$DownClass%">
    <StartFrom t="uiaction.GoUp" TopClass="%$UpClass%"/>
   </xtml>
 </Component>
 
 <Component id="ElementByInnerFilter" type="data.Data" execution="native">
  <Param name="TopElement" type="data.Data"><Default t="uiaction.ControlElementToRunOn"/></Param>
  <Param name="Filter" type="data.Boolean" script="true"/>
 </Component>

 <Component id="ToggleVisible" type="action.Action" light="false">
   <Param name="Direction" type="enum">
     <value>vertical</value>
     <value>horizontal</value>
     <Default value="vertical" />
   </Param>
   <Param name="AttachExpandClassOn"/>
   <xtml t="action.RunActions">
     <Action t="xml.ChangeXml">
       <Xml t="uiaction.ControlElementToRunOn"/>
       <Change t="ui.ExecJQuery" Expression=".slideToggle('fast')"/>
     </Action>
     <Action t="action.IfThenElse">
       <If t="uiaction.HasClass" RunOn="%$AttachExpandClassOn%" Cls="expanded"/>
       <Then t="action.RunActions">
         <Action t="uiaction.RemoveClass" RunOn="%$AttachExpandClassOn%" Cls="expanded"/>
         <Action t="uiaction.AddClass" RunOn="%$AttachExpandClassOn%" Cls="collapsed"/>
       </Then>
       <Else t="action.RunActions">
         <Action t="uiaction.AddClass" RunOn="%$AttachExpandClassOn%" Cls="expanded"/>
         <Action t="uiaction.RemoveClass" RunOn="%$AttachExpandClassOn%" Cls="collapsed"/>
       </Else>
     </Action>
     <Action t="action.DelayedRun" DelayInMilli="500" UniqueActionID="FixDialog">
       <Action t="dialog.FixTopDialogPosition" />
     </Action>
   </xtml>
 </Component>
 
 <Component id="ReplaceControl" type="action.Action" execution="native" light="false">
  <Param name="NewControl" type="ui.Control" essential="true" />
 </Component>

 <Component id="Hide" type="action.Action" execution="native" light="false"/>
 <Component id="SelectItem" type="action.Action" light="false">
  <Param name="TopElement" type="data.Data"><Default t="uiaction.ControlElementToRunOn"/></Param>
  <Param name="Filter" type="data.Boolean" script="true"/>
  <xtml t="uiaction.Click">
    <RunOn t="uiaction.ElementByInnerFilter" TopElement="%$TopElement%">
      <Filter t="xtml.UseParam" Param="Filter"/>
    </RunOn>
  </xtml>
 </Component>
 
 <Component id="ItemElementByFilter" type="data.Data" execution="native">
  <Param name="FilterOnItem" type="data.Boolean" script="true"/>
 </Component>
 
 <Component id="Select" type="action.Action,uiaction.UsageAction" execution="native" lightTypes="uiaction.UsageAction">
  <Param name="FilterOnItem" type="data.Boolean" script="true"/>
  <Param name="DoAfter" type="action.Action" script="true"/>
  <Param name="MouseMethod" type="enum" Options="mousedown,click"><Default value="mousedown"/></Param>
  <NativeHelper name="Click" t="action.RunActions">
    <Action t="uiaction.FireEvent" Event="%$MouseMethod%" />
    <Action t="xtml.UseParam" Param="DoAfter" />
  </NativeHelper>
 </Component>
 
 <Component id="OpenPopupOfTextbox" type="action.Action" light="false">
   <xtml t="uiaction.Click">
     <RunOn t="ui.ElementOfClass" Cls="aatextpopup_img">
       <Data t="ui.ControlToRunOn"/>
     </RunOn>
   </xtml>
 </Component>
  
</xtml>

<xtml ns="ui" deprecated="true">

  <Type id="ButtonStyle" style="true" image_width="40px"/>
  <Type id="SectionStyle"/>

     <Component id="InnerPage" type="ui.Page" image="%$_Images%/studio/star1616.gif" deprecated="true" hidden="true">
        <Param name="Title" />
        <Param name="Field" type="field.Fields[]" script="true" advanced="true" light="false"/>
        <xtml t="object.Object">
          <Property name="ID" t="text.ToIdText" Data="%$Title%" />
          <Property name="Fields" t="xtml.UseParamArray" Param="Field" />
          <Method name="Control" t="ui.Document" ID="%$_This/ID%" >
            <Fields value="%$_This/Fields%" />
            <Presentation t="uiaspect.Group" />
          </Method>
        </xtml>
     </Component>

 <Component id="RunInControlContext" execution="native" >
  <Param name="Item" />
  <Param name="Mode">
    <Default value="full context"/>
    <value>full context</value>
    <value>copy control variables</value>
  </Param>
 </Component>
 
  <Component id="StandardButton" type="ui.ButtonStyle" Image="%$_Images%/styles/standard_button.png" execution="native" />
  <Component id="DisableTextSelection" type="xml.Change" execution="native"/>
<Component id="HtmlUnderElement" type="data.Data" execution="native"/>

  <Component id="ControlInObject" type="ui.Control" execution="native">
    <Param name="Object"/>
    <Param name="Control"/>
  </Component>
      
 <Component id="ButtonAsImage" type="ui.ButtonStyle" Image="%$_Images%/styles/button_image.png">
  <Param name="PressedImage" />
  <Param name="HoverIndication" type="data.Boolean"><Default value="true"/></Param>
  <Param name="MultiLangImage" type="data.Boolean"><Default value="false"/></Param>
   <xtml t="xml.WithChanges">
     <Var name="Url" t="data.IfThenElse" Else="%$ButtonContext/Image%">
      <If t="yesno.And">
        <Item value="%$MultiLangImage%" />
        <Item t="yesno.NotEmpty" Value="%$Language%" />
      </If>
      <Then value="%$Left%%$Language%/%$Right%" >
        <Var name="Left" t="text.Split" Data="%$ButtonContext/Image%" Part="All but Last" Separator="/"/>
        <Var name="Right" t="text.Split" Data="%$ButtonContext/Image%" Part="Last" Separator="/"/>
      </Then>
     </Var>
     <Xml t="ui.Html" DynamicContent="true">
      <img class="button_image" title="%$ButtonContext/Text%" pressed_src="%$PressedImage%" src="%$Url%" original_src="%$ButtonContext/Image%" onclick="ajaxart_runevent(this,'ButtonContext','OnClick')" />
     </Xml>
     <Change t="ui.DataBind" />
     <Change t="ui.AddMousePressedEffect" />
     <Change t="ui.DisableTextSelection" />
     <Change t="uiaction.AddClass" RunOn="%%" Cls="hover_indication" Condition="%$HoverIndication%"/>
  </xtml>  
 </Component>

 <Component id="ControlData" type="data.Data" execution="native">
  <Param name="Control" Default="%%" />
  <Param name="Type" type="enum">
    <Default value="original_data"/>
    <Value>original_data</Value>
    <Value>data</Value>
    <Value>script</Value>
    <Value>context</Value>
    <Value>all</Value>
  </Param>
 </Component>

<Component id="SetCssText" type="xml.Change" execution="native" >
 <Param name="Style" />
</Component>

<Component id="SetCssProperty" type="xml.Change" execution="native" >
 <Param name="Property" />
 <Param name="Value" />
</Component>
 
 <Component id="UseDataBoundParams" type="xml.Change" execution="native">
   <Param name="Change" type="xml.Change"/>
 </Component>

 <Component id="ExecJQuery" type="xml.Change" execution="native">
  <Param name="Expression" essential="true"/>
 </Component>
 
 <Component id="TextboxValue" type="data.Data" execution="native"/>
 
  <Component id="OnKeyDown" type="action.Action" execution="native" light="false">
   <Param name="Action" type="action.Action" script="true" essential="true"/>
 </Component>

 <Component id="BindEvent" type="xml.Change" execution="native" >
  <Param name="Event" essential="true"/>
  <Param name="Action" type="action.Action" essential="true"/>
  <Param name="KeepOriginalRunOnControl" type="data.Boolean"/>
 </Component>
  
 <Component id="AddMousePressedEffect" type="xml.Change" execution="native" visibility="internal" />
  
	<Component id="SectionsList" type="ui.Control" execution="xtml" databind="true" deprecated="true">
    <Param name="Title" />
		<Param name="Section" type="ui.Sections[]" essential="true"/>
		<Param name="OnlyOneSectionOpen" type="data.Boolean" ><Default value="false" /></Param>
		<Param name="Style" type="ui.SectionsListStyle" script="true" paramVars="SectionsContext"><Default t="ui.DefaultSectionsListStyle" /></Param>
    <Param name="AutoExpand" type="data.Boolean"><Default value="true"/></Param>
    <Param name="CapitalCaseTitles" type="data.Boolean"><Default value="true"/></Param>
    <Param name="Level"><Default value="1"/></Param>
    
    <xtml t="xtml.UseParam" Param="Style">
      <Var name="Input"/>
	    <Var name="SectionsContext" t="xtml.Params">
	      <Param name="Title" t="data.Pipeline">
          <Item t="text.MultiLang" Pattern="%$Title%" Dynamic="true"/>
          <Item t="data.IfThenElse" If="%$CapitalCaseTitles%" Else="%%">
            <Then t="text.Capitalize" Mode="capital each word"/>
          </Item>
        </Param>
        <Param name="AutoExpand" value="%$AutoExpand%"/>
	      <Param name="OnlyOneSectionOpen" value="%$OnlyOneSectionOpen%" />
        <Param name="CapitalCaseTitles" value="%$CapitalCaseTitles%"/>
        <Param name="Level" value="%$Level%"/>
        <Param name="Sections" value="%$Section%"/>
		  </Var>
    </xtml>
	</Component>

  <Component id="DefaultSectionsListStyle" type="ui.SectionsListStyle" execution="xtml" deprecated="true">
    <xtml t="data.Pipeline">
      <Var name="Input"/>
      <Item t="xml.WithChanges">
        <Var name="SectionTitle" t="text.MultiLang" Pattern="%$SectionsContext/Title%" Dynamic="true"/>
        <Xml t="ui.Html" DynamicContent="true">
          <div class="sectionslist">
            <div class="title">%$SectionTitle%</div>
            <table class="sectionslist_table">
              <tbody>
                <tr class="row"/>
              </tbody>
            </table>
          </div>
        </Xml>
        <Change t="xml.Delete">
          <Condition t="yesno.Empty" Data="%$SectionsContext/Title%"/>
          <Data t="ui.ElementOfClass" Cls="title"/>
        </Change>
        <Change t="xml.Duplicate" Items="%$SectionsContext/Sections%">
          <Element t="ui.ElementOfClass" Cls="row"/>
          <ChangeOnElement t="xml.AddChildren" CloneChildren="false">
            <Var name="SectionTitle" t="data.Pipeline">
              <Item value="%$InputForChanges/Title%"/>
              <Item t="text.MultiLang" Pattern="%%" Dynamic="true"/>
              <Item t="data.IfThenElse" If="%$SectionsContext/CapitalCaseTitles%" Else="%%">
                <Then t="text.Capitalize" Mode="capital each word"/>
              </Item>
            </Var>
            <Var name="SectionListContext" t="xtml.Params">
              <ScriptParam name="ToggleCollapse" t="uiaction.ToggleVisible" Direction="vertical">
                <RunOn t="uiaction.ElementByClass" Cls="section_in_list_wrapper">
                  <StartFrom t="uiaction.GoUp" TopClass="section_in_list"/>
                </RunOn>
                <AttachExpandClassOn t="uiaction.ElementByClass" Cls="section_in_list_title">
                  <StartFrom t="uiaction.GoUp" TopClass="section_in_list"/>
                </AttachExpandClassOn>
              </ScriptParam>
            </Var>
            <Children t="xml.WithChanges">
              <Xml t="ui.Html" DynamicContent="true">
                <td class="section_in_list section_in_list_level%$SectionsContext/Level%">
                  <div onclick="ajaxart_runevent(this,'SectionListContext','ToggleCollapse')" class="section_in_list_title expanded">%$SectionTitle%</div>
                  <div class="section_in_list_wrapper"/>
                </td>
              </Xml>
              <Change t="xml.AddChildren" CloneChildren="false">
                <Data t="ui.ElementOfClass" Cls="section_in_list_wrapper"/>
                <Children t="xtml.RunXtml" Xtml="%Control%" Input="%Input%" ForceInputParam="true"/>
              </Change>
              <Change t="ui.DataBind">
                <Data t="ui.ElementOfClass" Cls="section_in_list_title"/>
              </Change>
              <Change t="uiaction.RunUiActions">
                <Condition t="yesno.Not" Of="%$SectionsContext/AutoExpand%"/>
                <Data t="ui.ElementOfClass" Cls="section_in_list_title"/>
                <Action t="uiaction.RemoveClass" Cls="expanded"/>
                <Action t="uiaction.Hide">
                  <RunOn t="uiaction.ElementByClass" Cls="section_in_list_wrapper">
                    <StartFrom t="uiaction.GoUp" TopClass="section_in_list"/>
                  </RunOn>
                </Action>
              </Change>
            </Children>
          </ChangeOnElement>
        </Change>
      </Item>
    </xtml>
  </Component>

</xtml>

<xtml ns="field" deprecated="true">

  <Component id="FilterSection" type="field.Fields" hidden="true">
    <Param name="ID" advanced="always" essential="true"/>
    <Param name="Title" essential="true" autoaspects="false">
      <FieldAspect t="field_aspect.FieldData" FieldData="%!@Title%"/>
      <FieldAspect t="field_dt.TitleField" />
    </Param>
    <Param name="Layout" type="uiaspect.DocumentPresentation" script="true">
      <Default t="uiaspect.Horizontal"/>
    </Param>
    <Param name="Location" type="enum" Options="header,footer"><Default value="header" /></Param>
    <Param name="Field" type="field.Fields[]" light="false" script="true" essential="true"/>
    <Param name="Aspect" type="uiaspect.Aspect[]" script="true" light="false"/>
    <Param name="FieldAspect" type="field.FieldAspect[]" script="true" light="false"/>
    <Param name="HideTitle" type="data.Boolean" boolfeature="true"/>
    <xtml t="field.Group" ID="%$ID%" Title="%$Title%" HideTitle="%$HideTitle%" CalcFieldsInAdvance="false">
      <GroupData t="group.FilterQueryXml" />
      <Layout t="xtml.UseParam" Param="Layout" />
      <Field t="xtml.UseParamArray" Param="Field" />
      <Aspect t="xtml.UseParamArray" Param="Aspect" />
      <FieldAspect t="field_aspect.Writable" />
      <FieldAspect t="field_aspect.HeaderFooterField" Location="%$Location%" RefreshStrategy="none"/>
      <FieldAspect t="xtml.UseParamArray" Param="FieldAspect" />
    </xtml>
  </Component>

  <Component id="XmlField" type="field.Fields" execution="native" deprecated="true">
      <Aspect t="component_aspect.Image" Image="%$_Images%/studio/bullet1616.gif"/>
      <Param name="Title" essential="true" autoaspects="false">
        <FieldAspect t="field_aspect.FieldData" FieldData="%!@Title%"/>
        <FieldAspect t="field_aspect.AutoUpdateMasterItem" />
      </Param>
      <Param name="Path" essential="true" advanced="true">
         <FieldAspect t="field_dt.FieldXPathEditor" />
      </Param>​
      <Param name="ID" advanced="always" essential="true"/>
      <Param name="Type" essential="true" type="field_aspect.FieldType" script="true">
        <Default t="field_aspect.Text"/>
      </Param>
      <Param name="FieldAspect" essential="true" type="field.FieldAspect[]" light="false" script="true"/>
  </Component>

  <Component id="PropertySheet1" type="field.Fields" execution="native" image="%$_Images%/studio/pform.gif">
    <Param name="ID" essential="true" advanced="always"/>
    <Param name="Title" essential="true" autoaspects="false" titleField="true" />
    <Param name="Style" type="propertysheet.Style" script="true">
      <Default t="group.PropertySheet"/>
    </Param>
    <Param name="SectionStyle" type="section.Style" description="Select a section style to make it a section" />
    <Param name="Field" type="field.Fields[]" light="false" script="true" essential="true"/>
    <Param name="Aspect" type="uiaspect.Aspect[]" script="true" light="false"/>
    <Param name="FieldAspect" type="field.FieldAspect[]" script="true" light="false"/>
    <Param name="HideTitle" type="data.Boolean" boolfeature="true"/>
  </Component>

  <Component id="SuggestionsFromData" type="field.FieldAspect" category="filter" description="The filter is a picklist whose values come from the data" promoted="true">
    <Param name="TextPattern" script="true" advanced="true" Description="e.g '\%\% children'">
      <Default value="%%" />
    </Param>
    <Param name="Static" type="data.Boolean" advanced="true" />
    <Param name="IncludeSpace" type="data.Boolean" advanced="true" />
    <Param name="SupportMultiple" type="data.Boolean" advanced="true" Description="Each row may contain multiple values separated by comma"/>
    <xtml t="object.SetProperty" Object="%$_Field%" Property="SuggestionsFromData">
     <Value t="object.Object" Static="%$Static%" IncludeSpace="%$IncludeSpace%" SupportMultiple="%$SupportMultiple%">
      <Method name="TextPattern" t="xtml.UseParam" Param="TextPattern" />
     </Value>
    </xtml>
  </Component>

  <Component id="TextFilterControl" type="ui.Control" hidden="true">
      <Param name="MoreAspects" type="field.FieldAspect[]" light="false" script="true" />
      <xtml t="field.ShowFieldControl" Item="%%" Class="aa_filter_input">
        <Var name="_OriginalField" value="%$_Field%"/>
        <Field t="field.Field1" ID="%$_OriginalField/ID%_filter">
          <FieldAspect t="object.SetBooleanProperty" Object="%$_Field%" Property="IsFilter" Value="true"/>
          <FieldAspect t="field_aspect.SimpleInput"/>
          <FieldAspect t="field_aspect.DescriptionForEmptyText">
            <Description t="text.MultiLang" Pattern="Filter By %$_OriginalField/Title%"/>
          </FieldAspect>
          <FieldAspect t="field_aspect.OnUpdate">
            <Action t="field.RefreshFilteredItems">
              <Var name="_Field" value="%$_OriginalField%"/>
            </Action>
          </FieldAspect>
          <FieldAspect t="picklist.ShowOccurrences"/>
          <FieldAspect t="object.RunMethod" Object="%$_OriginalField/FilterAspects%" Method="GetContent" />
          <FieldAspect t="field_aspect.Picklist" Multiple="true" AllowValueNotInOptions="true">
           <Condition t="yesno.NotEmpty" Data="%$_OriginalField/SuggestionsFromData%"/>
            <Options t="picklist.SuggestionsFromData" Static="%$_OriginalField/SuggestionsFromData/Static%" IncludeSpace="%$_OriginalField/SuggestionsFromData/IncludeSpace%" SupportMultiple="%$_OriginalField/SuggestionsFromData/SupportMultiple%">
              <TextPattern t="object.RunMethod" Method="TextPattern" Object="%$_OriginalField/SuggestionsFromData%" />
            </Options>
           </FieldAspect>
          <FieldAspect t="field_aspect.Resizer"/>
          <FieldAspect t="field.CleanFilterButton" Field="%$_OriginalField%"/>
          <FieldAspect t="xtml.UseParamArray" Param="MoreAspects" /> 
        </Field>
      </xtml>
    </Component>

  <Component id="TextFilter" type="field.FieldAspect" execution="native" category="filter" light="false">
    <NativeHelper name="Control" t="field.TextFilterControl" />
  </Component>

  <Component id="NumberFilter" type="field.FieldAspect" execution="native" category="filter" light="false">
    <NativeHelper name="Control" t="field.TextFilterControl" >
      <MoreAspects t="field_aspect.Aspects">
       <FieldAspect t="picklist.CalcOccurrencesWithFilters" />
       <FieldAspect t="picklist.ShowOccurrences" SortBy="picklist" />
      </MoreAspects>
    </NativeHelper>
  </Component>

   <Component id="ShowFieldControl" type="ui.Control" execution="native">
     <Param name="Item" Default="%%" essential="true" />
     <Param name="Field" type="field.Fields" essential="true"/>
     <Param name="CellTag" ><Default value="div" /> </Param>
   </Component>
  
  <Component id="BooleanFilter" type="field.FieldAspect" execution="native" category="filter" light="false">
    <Param name="TitleForTrue"/>
    <Param name="TitleForFalse"/>
    <NativeHelper name="Control" t="field.ShowFieldControl" Item="%%" Class="aa_filter_input">
      <Var name="_OriginalField" value="%$_Field%"/>
      <Field t="field.Field1" ID="%$_OriginalField/ID%_filter">
        <FieldAspect t="object.SetBooleanProperty" Object="%$_Field%" Property="IsFilter" Value="true"/>
        <FieldAspect t="object.RunMethod" Object="%$_OriginalField/FilterAspects%" Method="GetContent" />
        <FieldAspect t="field_aspect.Picklist" AllowEmptyValue="true">
          <Options t="picklist.RichOptions">
            <Option t="picklist.Option" Option="true">
             <DisplayName t="text.FirstSucceeding">
               <Item value="%$TitleForTrue%" />
               <Item t="text.MultiLang" Pattern="%$_OriginalField/Title%"/>
             </DisplayName>
            </Option>
            <Option t="picklist.Option" Option="false">
             <DisplayName t="text.FirstSucceeding">
               <Item value="%$TitleForFalse%" />
               <Item t="text.MultiLang" Pattern="not %$_OriginalField/Title%"/>
             </DisplayName>
            </Option>
          </Options>
        </FieldAspect>
        <FieldAspect t="field_aspect.DescriptionForEmptyText">
          <Description t="text.MultiLang" Pattern="Filter By %$_OriginalField/Title%"/>
        </FieldAspect>
        <FieldAspect t="field_aspect.OnUpdate">
          <Action t="field.RefreshFilteredItems" >
            <Var name="_Field" value="%$_OriginalField%"/>
          </Action>
        </FieldAspect>
        <FieldAspect t="field.CleanFilterButton" Field="%$_OriginalField%"/>
      </Field>
    </NativeHelper>
  </Component>

</xtml>

<xtml ns="field_aspect" deprecated="true" light="false">

  <Type id="FieldType" />
  <Type id="Multiple" />
  <Type id="ExtraField" />

  <Component id="PopupImage" type="field.FieldAspect" execution="native">
    <Param name="Css"><Default value="#this { vertical-align:top; padding:2px 0 0 14px; margin:3px 0 0 -19px; display: inline-block; height:17px; background: url(%$_Images%/./openpopup_xp_style.gif) no-repeat 0 0; } .right2left #this { margin-right:-18px; margin-left:0px } .aa_hover #this {background-position:0 -19px ;}"/></Param>
  </Component>

  <Component id="HideInTable" type="field.FieldAspect" deprecated="true">
      <xtml t="object.SetBooleanProperty" Object="%$_Field%" Property="HiddenForTable" Value="true"/>
  </Component>

  <Component id="HideByCondition" type="field.FieldAspect" deprecated="true" execution="native" description="Show field on condition">
    <Param name="ShowCondition" type="data.Boolean" script="true" essential="true" />
    <Param name="CheckConditionForEveryItem" type="data.Boolean"/>
  </Component>

  <Component id="Hide" type="field.FieldAspect" deprecated="false">
    <Param name="New" type="data.Boolean"><Default value="true"/></Param>
    <Param name="Edit" type="data.Boolean"><Default value="true"/></Param>
    <Param name="ReadOnly" type="data.Boolean"><Default value="true"/></Param>
    <xtml t="action.RunActions">
      <Action t="object.SetBooleanProperty" Object="%$_Field%" Property="HiddenForNew" Value="%$New%" />
      <Action t="object.SetBooleanProperty" Object="%$_Field%" Property="HiddenForEdit" Value="%$Edit%" />
      <Action t="object.SetBooleanProperty" Object="%$_Field%" Property="HiddenForReadOnly" Value="%$ReadOnly%" />
    </xtml>
  </Component>

  <Component id="MultiLineText" type="field_aspect.FieldType">
    <Param name="Style" type="textarea.Style">
      <Default t="textarea.Default" />
    </Param>
    <Param1 name="NoWrap" type="data.Boolean" boolfeature="true"/>
    <Param1 name="Rows" advanced="true" Default="5"/>
    <Param1 name="Cols" advanced="true"/>
    <Param1 name="AutoHeight" type="data.Boolean" advanced="true"/>
    <xtml t="field_aspect.Aspects">
      <FieldAspect t="object.SetBooleanProperty" Object="%$_Field%" Property="MultiLineText" Value="true"/>
      <FieldAspect t="object.SetProperty" Object="%$_Field%" Property="MultiLineTextStyle" Value="%$Style%" IsSingleProperty="true"/>
      <FieldAspect t="field_aspect.SimpleInput"/>
      <FieldAspect t="field_aspect.Resizer" />
    </xtml>
  </Component>

  <Component id="DisableCharacters" type="field.FieldAspect" execution="native" description="Disable entering characters not matching a pattern or format">
      <Param name="CharacterPattern" description="e.g., [0-9a-zA-Z]"/>
  </Component>

  <Component id="Property" type="field_aspect.BooleanPresentation">
   <xtml t="field_aspect.Aspects"/>
  </Component>
  
  <Component id="ImmediateFiltering" type="field.FieldAspect" category="filter" desctription="Used in filter fields to update the filter on update">
    <xtml t="field_aspect.OnUpdate">
      <Action t="uiaction.FilterContainer" FilterQueryXml="%..%" />
    </xtml>
  </Component>  

  <Component id="CustomDataType" type="field_aspect.FieldType">
      <Param name="Html" codemirror="true" light="false">
        <Default><![CDATA[<div>
  <div/>
  <input/>
</div>]]></Default>
      </Param>
      <Param name="Css" codemirror="true" light="false">
        <Default><![CDATA[#this {}]]></Default>
      </Param>
      <Param name="Javascript" codemirror="true" light="false" >
        <Default><![CDATA[function(datatype,context) {
  if (datatype.readonly) {
    return jQuery(datatype).find(">div").html(datatype.text)[0];
  }
  else {
    var out = jQuery(datatype).find('>input');
    datatype.initInput(out[0]);
    return out[0]; 
  }
}]]></Default>
      </Param>
      <ParamGenerator t="bart_dt.StyleGenerator" />
      <xtml t="ui.CustomStyle" Html="%$Html%" Css="%$Css%" Javascript="%$Javascript%" />
    </Component>

  <Component id="CheckBox" type="field_aspect.BooleanPresentation" execution="native" />

  <Component id="Number" type="field_aspect.FieldType">
    <Param name="Mandatory" type="data.Boolean" boolfeature="true" />
    <Param name="Format" type="text.NumberFormat" script="true" Default="%%"/>
    <xtml t="field_aspect.Aspects">
      <FieldAspect t="field_aspect.Mandatory" Condition="%$Mandatory%" />
      <FieldAspect t="object.SetBooleanProperty" Object="%$_Field%" Property="Multiple" Value="true" Condition="%$Multiple%" />
      <FieldAspect t="object.SetBooleanProperty" Object="%$_Field%" Property="IsNumber" Value="true" />
      <FieldAspect t="field_aspect.SimpleInput" />
      <FieldAspect t="field_aspect.SortMethodOld" Method="numeric" />
      <FieldAspect t="field_aspect.DisableCharacters" CharacterPattern="[^a-zA-Z]" />
      <FieldAspect t="field.NumberFilter" />
      <FieldAspect t="field_aspect.NumberFormat">
        <Format t="xtml.UseParam" Param="Format"/>
      </FieldAspect>
      <FieldAspect t="field_aspect.GroupAggregator">
        <Formula t="data.Sum" />
      </FieldAspect>
      <FieldAspect t="field_feature.Css">
        <Css><![CDATA[#wrapper { text-align:right; }]]></Css>
      </FieldAspect>
    </xtml>
  </Component>


  <Component id="Boolean" type="field_aspect.FieldType" execution="native">
    <Param name="CheckedByDefault" type="data.Boolean" />
    <Param name="Presentation" type="field_aspect.BooleanPresentation">
      <Default t="field_aspect.CheckBox"/>
    </Param>
    <NativeHelper name="FieldAspect" t="field_aspect.Aspects">
      <FieldAspect t="field.BooleanFilter" />
      <FieldAspect t="field_aspect.DefaultValue" Value="%$CheckedByDefault%" />
      <FieldAspect t="field_aspect.BooleanTextSummary" TextForTrue="yes" TextForFalse="no" />
    </NativeHelper>
  </Component>

  <Component id="BooleanTextSummary" type="field.FieldAspect" execution="native" description="Set boolean text according to context. e.g. Enabled/Disabled" deprecated="true">
      <Param name="TextForTrue" description=""/>
    <Param name="TextForFalse" />
  </Component>
  
  <Component id="TabProperties" type="field.FieldAspect" deprecated="true">
    <Param name="Image" type="image.Image" />
    <Param name="ShowOnCondition" type="data.Boolean" Default="true" script="true" />
    <Param name="NumericIndication" script="true" />
    <Param name="OnBeforeSelect" type="action.Action" script="true" />
    <Param name="OnAfterSelect" type="action.Action" script="true" />
    <Param name="RefreshOnReSelect" type="enum" Options="refresh,no refresh" description="'no refresh' re-creates the tab when it is selected again"/>
    <xtml t="action.RunActions">
      <Action t="object.SetProperty" Object="%$_Field%" Property="TabImage" Value="%$Image%" IsSingleProperty="true"/>
      <Action t="object.SetTextProperty" Object="%$_Field%" Property="RefreshTabOnSelect" Value="%$RefreshOnReSelect%" />
      <Action t="object.SetMethod" Object="%$_Field%" Method="ShowTabOnCondition">
        <Xtml t="xtml.UseParam" Param="ShowOnCondition" />
      </Action>
      <Action t="object.SetMethod" Object="%$_Field%" Method="TabNumericIndication">
        <Xtml t="xtml.UseParam" Param="NumericIndication" />
      </Action>
      <Action t="object.SetMethod" Object="%$_Field%" Method="TabOnBeforeSelect">
        <Xtml t="xtml.UseParam" Param="OnBeforeSelect" />
      </Action>
      <Action t="object.SetMethod" Object="%$_Field%" Method="TabOnAfterSelect">
        <Xtml t="xtml.UseParam" Param="OnAfterSelect" />
      </Action>
    </xtml>
  </Component>

  <Component id="SimpleInput" type="field.FieldAspect" execution="native" light="false" />
  <Component id="WritableControl" type="field.FieldAspect" execution="native" category="control" light="false">
    <Param name="Control" type="ui.Control" essential="true" />
  </Component>
  <Component id="Control" type="field.FieldAspect" execution="native" category="control" light="false">
    <Param name="Control" type="ui.Control" essential="true" />
  </Component>
  <Component id="ReadOnlyControl" type="field.FieldAspect" execution="native" category="control" light="false">
    <Param name="Control" type="ui.Control" essential="true" />
  </Component>

  <Component id="Aspects" type="field.FieldAspect" light="false">
    <Param name="FieldAspect" type="field.FieldAspect[]" script="true" essential="true" />
    <xtml t="xtml.UseParamArray" Param="FieldAspect" />
  </Component>

  <Component id="CellPresentation" type="field.FieldAspect" execution="native">
    <Param name="Content" type="enum" essential="true" >
      <Default value="text" />
      <value>text</value>
      <value>expandable text</value>
      <value>control</value>
    </Param>
  </Component>

  <Component id="Css" type="field.FieldAspect" promoted="false" light="false" execution="native" gallery="Css" description="Change the style. E.g., color, background, font, underline, bold, padding, border, gradient, margin, align, rtl direction">
      <Param name="Inline" script="true" essential="true" advanced="false"> 
        <FieldAspect t="field_dt.CodeMirrorFieldEditor" CompId="field_aspect.Css" ParamName="Inline"/>
        <FieldAspect t="field_aspect.HideTitle"/>
      </Param>
      <Param name="OnCondition" script="true" type="data.Boolean" description="e.g. %% &gt; 20" advanced="true"/>
      <Param name="OnElement" type="enum" Options="cell,content,title" advanced="true">
        <Default value="content"/>
      </Param>
      <Param name="Class" script="true" essential="true" advanced="true"/>
  </Component>

  <Component id="GlobalCss" type="field.FieldAspect" execution="native" gallery="GlobalCss" description="Allows non inline css. Element id is given as well" promoted="false">
      <Param name="GlobalCss" css="true">
        <FieldAspect t="field_aspect.HideTitle" />
      </Param>
      <Param name="OnCondition" script="true" type="data.Boolean" description="e.g. %% &gt; 20"/>
  </Component>
  
  <Component id="HoverCssClass" type="field.FieldAspect" execution="native" category="ui" light="false"/>
  <Component id="ImageOld" type="field_aspect.FieldType" gallery="Image" deprecated="true" hidden="true">
    <Param name="Width" slider="true" sliderUnit="px" />
    <Param name="Height" slider="true" sliderUnit="px" />
    <Param name="Src" script="true" advanced="true">
      <Default value="%%" />
      <RunningInput t="field_aspect.RunningInputFieldData" />
    </Param>
    <Param name="HideEmptyImage" type="data.Boolean" advanced="true"><Default value="true" /></Param>
    <Param name="KeepImageProportions" type="data.Boolean" advanced="true"><Default value="true"/></Param>
    <Param name="PreviewHeight" advanced="true">
      <Default value="30px" />
    </Param>
    <Param name="EditDirectly" type="data.Boolean" advanced="true" />
    <Param name="TextForMissingImageInEdit" advanced="true">
      <Default value="edit ..." />
    </Param>
    <Param name="UrlForMissingImage" advanced="true" />
    <Param name="TextForMissingImage" advanced="true" />
    <Param name="TextForEmptyImageEditing" advanced="true">
      <Default value="enter image url" />
    </Param>
    <Param name="OnClick" type="action.Action" script="true" />
    <xtml t="field_aspect.Aspects">
      <FieldAspect t="field_aspect.WritableControl">
        <Control t="field.ShowFieldControl" Item="%%">
          <Field t="field.Field1" ID="Image">
            <FieldAspect t="field_aspect.CellPresentation" Content="expandable text">
              <Condition t="yesno.Not" Of="%$EditDirectly%" />
            </FieldAspect>
            <FieldAspect t="field_aspect.ImageReadOnlyImp" Height="%$Height%"
              Width="%$Width%" UrlForMissingImage="%$UrlForMissingImage%" KeepImageProportions="%$KeepImageProportions%"
              TextForMissingImage="%$TextForMissingImageInEdit%">
              <Src t="xtml.UseParam" Param="Src" />
            </FieldAspect>
            <FieldAspect t="field_aspect.Control">
              <Control t="ui.List" Class="img_ctrl">
                <Control t="field.ShowFieldControl" Item="%%">
                  <Field t="field.Field1" ID="Image">
                    <FieldAspect t="field_aspect.SimpleInput" />
                    <FieldAspect t="field_aspect.DescriptionForEmptyText"
                      Description="%$TextForEmptyImageEditing%" />
                    <FieldAspect t="field_aspect.OnUpdate">
                      <Action t="uiaction.Refresh" RunOn="updown(.img_ctrl,.img)" />
                    </FieldAspect>
                    <FieldAspect t="field_aspect.Resizer" />
                  </Field>
                </Control>
                <Control t="ui.List" Class="img">
                  <Control t="ui.Image" Source="%%" Height="%$PreviewHeight%">
                    <Condition t="yesno.NotEmpty" Value="%%" />
                    <OnClick t="dialog.OpenDialog">
                      <Dialog t="dialog.Dialog" Buttons="Close">
                        <Content t="ui.Image" Source="%%" />
                      </Dialog>
                    </OnClick>
                  </Control>
                </Control>
                <Layout t="ui.Horizontal" VerticalAlign="middle" />
              </Control>
            </FieldAspect>
          </Field>
        </Control>
      </FieldAspect>
      <FieldAspect t="field_aspect.ImageReadOnlyImp" Height="%$Height%" KeepImageProportions="%$KeepImageProportions%"
        Width="%$Width%" UrlForMissingImage="%$UrlForMissingImage%"
        TextForMissingImage="%$TextForMissingImage%" HideEmptyImage="%$HideEmptyImage%">
        <Src t="xtml.UseParam" Param="Src" />
        <OnClick t="xtml.UseParam" Param="OnClick" />
      </FieldAspect>
    </xtml>
  </Component>

  <Component id="ImageReadOnlyImp" type="field.FieldAspect" execution="native" hidden="true">
    <Param name="Width" advanced="true" />
    <Param name="Height" advanced="true" />
    <Param name="KeepImageProportions" type="data.Boolean"/>    
    <Param name="UrlForMissingImage" advanced="true" />
    <Param name="TextForMissingImage" advanced="true" />
    <Param name="Src" />
    <Param name="HideEmptyImage" type="data.Boolean" />
    <Param name="OnClick" type="action.Action" script="true" />
  </Component>
  <Component id="OnUpdate" type="field.FieldAspect" hidden="true" category="advanced" execution="native">
    <Param name="Action" type="action.Action" script="true" essential="true" />
    <Param name="ID" description="If set, will run only once of the same id"  />
    <Param name="Phase" description="Can be used to control the activation order of the event handlers" />
    <Param name="FireOnUpdateWhenLoaded" type="data.Boolean" />
  </Component>
  <Component id="Picklist" type="field.FieldAspect" execution="native" light="false" databind="false">
    <Param name="Options" type="picklist.OptionsDefinition" essential="true"/>
    <Param name="AllowEmptyValue" type="data.Boolean"/>
    <Param name="AllowValueNotInOptions" type="data.Boolean"/>
    <Param name="RecalculateForEachCell" type="data.Boolean"/>
    <Param name="Multiple" type="data.Boolean"/>
    <Param name="DoNotOpenFromInputArea" type="data.Boolean"/>
    <Param name="PickTreePathSeparator" advanced="true" description="Used to distinguish between tree options that have the same name"/>
    <Param name="ControlStyle" type="picklist.ControlStyle">
      <Default t="picklist.JBartPicklist" />
     </Param>
  </Component>
  
  <Component id="Resizer" type="field.FieldAspect" category1="textbox" execution="native" description="Adds or removes a textbox width resizer on its right side">
    <Param name="Disable" type="data.Boolean"/>
    <Param name="RememberLastWidth" type="data.Boolean" Default="true" />
  </Component>
  
</xtml>

<xtml ns="uiaspect" light="false">

  <Type id="OpenIn" />
  <Type id="DetailsToolbar" />

  <Component id="FastFind" type="uiaspect.Aspect" execution="native" category="filters" description="Interactive Search Box">
    <Param name="DescriptionForEmptyText" description="Text inside the box">
        <Default value="Search"/></Param>
    <Param name="DoNotFilterSmallLists" type="data.Boolean"/>
    <Param name="MaxItemsToShow"><Default value="0"/></Param>
    <Param name="HideExposedFilters" type="data.Boolean"/>
    <Param name="DoNotShowPartialStatus" type="data.Boolean"/>
    <Param name="LookIn" script="true"/>
    <Param name="DoNotLookInAllFields" type="data.Boolean"/>
    <NativeHelper name="Control" t="field.ShowFieldControl" Item="%%" Class="aa_filter_input">
      <Var name="_OriginalField" value="%$_Field%"/>
      <Var name="_OriginalCntr" value="%$_Cntr%"/>
      <Field t="field.Field1" ID="%$_OriginalField/ID%_filter">
        <FieldAspect t="field_aspect.SimpleInput"/>
        <FieldAspect t="field_aspect.DescriptionForEmptyText" Description="%$DescriptionForEmptyText%"/>
        <FieldAspect t="field_aspect.OnUpdate">
          <Action t="uiaction.DoFind">
            <Var name="_Cntr" value="%$_OriginalCntr%"/>
          </Action>
        </FieldAspect>
        <FieldAspect  t="field_aspect.SearchPopupImage" ID="options" />
      </Field>
    </NativeHelper>
    <NativeHelper t="uiaspect.ExposedFiltersSection"/>
  </Component>
  
  <Component id="ItemDetails" type="uiaspect.Aspect" execution="native" description="Defines the item details page and the way to open it">
      <Param name="ItemPage" type="ui.SinglePage" script="true" description="What to show for item details"/>
      <Param name="OpenIn" type="uiaspect.OpenIn" script="true" description="How to show item details"/>
      <Param name="Transactional" type="data.Boolean" advanced="true" description="save data to record only after user confirmation">
        <Default value="true"/>
      </Param>
      <Param name="NewItemPage" type="ui.SinglePage" script="true" advanced="true" />
      <Param name="OpenNewIn" type="uiaspect.OpenIn" script="true" advanced="true" />
      <Param name="KeepOpenItemInUrl" type="data.Boolean" advanced="true" description="">
        <Default value="false"/>
      </Param>
      <Param name="ItemIdentifier" type="data.Boolean" script="true" advanced="true" description="">
        <Default value="%@id%"/>
      </Param>
      <Param name="FullLoadItem" type="data.Boolean" advanced="true" description="">
        <Default value="true"/>
      </Param>
      <Param name="PreparePage" type="uiaspect.PreparePage[]" script="true" advanced="true" description=""/>
      <Param name="ChangeItemBeforeOpen" type="action.Action" script="true" advanced="true" description=""/>
      <NativeHelper name="DefaultOpenIn" t="uiaspect.DetailsInDialog"/>
      <NativeHelper name="DefaultItemPage" t="ui.ItemPage" FieldsFromList="">
        <Field t="data.FirstSucceeding">
          <Item value="%$_Cntr/Items/FieldsForItemDetails%"/>
          <Item value="%$_Cntr/Fields%"/>
        </Field>
      </NativeHelper>
    </Component>

  <Component id="BottomLocation" type="uiaspect.Aspect" execution="native" jbart="false">
    <Param name="Css" Default="#this { padding-top: 10px; }" />
  </Component>

  <Component id="RightLocation" type="uiaspect.Aspect" execution="native" jbart="false" light="false">
    <Param name="LeftExpandCollpase" type="data.Boolean" />
    <Param name="Css">
      <Default><![CDATA[
#this>tbody>tr>.aa_left { vertical-align:top; padding-right: 5px; }
#this>tbody>tr>.aa_right { padding-left1:22px; vertical-align:top; }
 
]]></Default>
    </Param>
  </Component>
   
  <Component id="DoOnSelection" type="uiaspect.Aspect" execution="native">
    <Param name="Action" type="action.Action" script="true" />
    <Param name="DoOnNextTimer" type="data.Boolean" advanced="true" />
  </Component>
  
  <Component id="SaveDetailsAndRefersh" type="action_async.Action" execution="native">
    <Param name="Item" />
  </Component>
  
  <Component id="InDialog" type="uiaspect.OpenIn" jbart="true">
      <Param name="Style" type="dialog_style.Style">
        <Default t="dialog_style.DefaultDialog"/>
      </Param>
      <Param name="DialogTitle"/>
      <Param name="Feature" type="dlg.DialogFeature[]" script="true"/>
      <Param name="RunOnOK" type="action.Action" script="true" light="false"/>
      <xtml t="dlg.OpenDialog" Style="%$Style%">
        <Contents value="%$DetailsControl%"/>
        <Title t="text.FirstSucceeding">
          <Item t="text.Translate" Text="%$DialogTitle%" />
          <Item t="text.TranslatePattern" Pattern="New %$_Cntr/Items/ItemTypeName%" Condition="%$IsNewItem%"/>
          <Item t="text.TranslatePattern" Pattern="%$_Cntr/Items/ItemTypeName% details" Condition="%$_Cntr/ReadOnly%"/>
          <Item t="text.TranslatePattern" Pattern="Edit %$_Cntr/Items/ItemTypeName%"/>
        </Title>
        <Feature t="dlg.NoCancel" Condition="%$_Cntr/ReadOnly%"/>
        <Feature t="dlg.RunBeforeOK">
          <Action t="object.RunMethod" Object="%$_ItemDetailsObject%" Method="Save" />
        </Feature>
        <Feature t="dlg.RunOnCancel">
          <Action t="object.RunMethod" Object="%$_ItemDetailsObject%" Method="Cancel"/>
        </Feature>
        <Feature t="xtml.UseParamArray" Param="Feature"/>
        <RunOnOK t="action_async.RunAsync">
          <Action t="xtml.UseParam" Param="RunOnOK" />
        </RunOnOK>
      </xtml>
    </Component>
  
  <Component id="ExpandAllText" type="uiaspect.OpenIn" execution="native">
    <NativeHelper name="Open" t="action_async.RunAsync">
      <Action t="uiaspect.SaveDetailsAndRefersh" />
     </NativeHelper>
    <NativeHelper name="Elem" t="data.IfThenElse" If="%$IsNewItem%" >
      <Then t="data.Pipeline">
        <Item t="uiaspect.ContainerElements" />
        <Aggregator t="data.Last" />
      </Then>
      <Else t="uiaspect.SelectedElement" />
    </NativeHelper>
  </Component>
  
  <Component id="DetailsReplacingAll" type="uiaspect.OpenIn" execution="native">
    <Param name="TitleForBack"><Default value="Back" /></Param>
    <Param name="TitleForCreate"><Default value="Create" /></Param>
    <Param name="TitleForCancel"><Default value="Cancel" /></Param>
    <Param name="ButtonsStyle" type="button.Style" >
      <Default t="button.Hyperlink" />
    </Param>
    <Param name="AutoToolbar" type="data.Boolean"><Default value="true"/></Param>
    <Param name="Transition" type="transition.Transition" />
    <Param name="TransitionBack" type="transition.Transition" />
    <Param name="ToolbarStyle" type="header.Style" advanced="true" script="true">
      <Default t="header.SimpleHeader" />
    </Param>
    <NativeHelper name="TopControl" t="ui.List" Condition="%$AutoToolbar%">
      <Layout t="ui.LineBreak" IncludeSpacing="false" />
      <Control t="ui.Text" Text="%$ItemDetailsTitle%" />
      <Control t="ui.IfThenElse" If="%$IsNewItem%">
        <Else t="field.ShowFieldControl">
          <Field t="field.Group" >
            <Layout t="uiaspect.Group">
            <Style t="xtml.UseParam" Param="ToolbarStyle" />
            </Layout>
            <GroupData t="group.DataFlow" FlowData="%%"/>
                <Field t="field.Button" ID="Save" Title="Save" Condition="%$_ItemDetailsObject/HasSave%" Style="%$ButtonsStyle%">
                  <Action t="object.RunMethod" Object="%$_ItemDetailsObject%" Method="Save">
                    <Condition t="validation.PassingValidations" RunOn="up(.aa_replacingall)" />
                  </Action>
                </Field>
                <Field t="field.Button" ID="Back" Title="%$TitleForBack%" Style="%$ButtonsStyle%">
                  <Action t="object.RunMethod" Object="%$_ItemDetailsObject%" Method="SaveAndClose" />
                </Field>
                <Field t="field.Button" ID="Cancel" Title="%$TitleForCancel%" Condition="%$_ItemDetailsObject/HasSave%" Style="%$ButtonsStyle%">
                  <Action t="object.RunMethod" Object="%$_ItemDetailsObject%" Method="Cancel" />
                </Field>
          </Field>
        </Else>
        <Then t="field.ShowFieldControl">
          <Field t="field.Group" >
            <Layout t="uiaspect.Group">
            <Style t="xtml.UseParam" Param="ToolbarStyle" />
            <Field t="field.Button" ID="Create" Title="%$TitleForCreate%" Style="%$ButtonsStyle%">
              <Action t="object.RunMethod" Object="%$_ItemDetailsObject%" Method="Save" />
              <Condition t="validation.PassingValidations" RunOn="up(.aa_replacingall)" />
            </Field>
            <Field t="field.Button" ID="Cancel" Title="%$TitleForCancel%" Style="%$ButtonsStyle%">
              <Action t="object.RunMethod" Object="%$_ItemDetailsObject%" Method="Cancel" />
            </Field>
            </Layout>
          </Field>
        </Then>
      </Control>
    </NativeHelper>
  </Component>

  <Component id="DetailsInplace" type="uiaspect.OpenIn" execution="native">
    <Param name="InplaceToolbar" type="uiaspect.DetailsToolbar" script="true">
      <Default t="uiaspect.DetailsToolbar" />
    </Param>
    <Param name="ToolbarLocation" type="enum" Options="top,bottom"><Default value="bottom"/></Param>
    <Param name="CssForDetails" cssdesigner="true" />
    <Param name="AutoOpenWhenZooming" type="enum" Options="none,1000,800,600,400,300,200">
     <Default value="none"/>
    </Param>
    <Param name="Buttons" type="ui.Control" advanced="true" decsription="old">
      <Default t="ui.List">
        <Control t="ui.ButtonOld" Text="Close" Image="%$_Images%/studio/save1616.gif" Class="details_inplace_close">
          <Style t="ui.ButtonAsHyperlink"/>
          <OnClick t="object.RunMethod" Object="%$_ItemDetailsObject%" Method="SaveAndClose"/>
        </Control>
        <Control t="ui.ButtonOld" Text="Cancel" Image="%$_Images%/delete1616.gif" Class="details_inplace_cancel">
          <Style t="ui.ButtonAsHyperlink"/>
          <OnClick t="object.RunMethod" Object="%$_ItemDetailsObject%" Method="Cancel"/>
        </Control>
        <Layout t="ui.ButtonsLayout"/>
      </Default>
    </Param>
    <Param name="CloseInplaceSiblings" type="data.Boolean" />
  </Component>
  
  <Component id="DetailsInFixedLocation" type="uiaspect.OpenIn" execution="native">
    <Param name="Location" type="enum">
      <Default value="bottom" />
      <value>bottom</value>
      <value>right</value>
    </Param>
  </Component>
  <Component id="DetailsInExternalLocation" type="uiaspect.OpenIn" execution="native">
    <Param name="FieldID" />
  </Component>
  <Component id="DetailsAtRight" type="uiaspect.OpenIn" execution="native">
    <Param name="IncludeSplitter" type="data.Boolean" />
  </Component>

  <Component id="ShowItemInItemList" type="ui.Control" execution="native" Comment="should become an aspect">
    <Param name="ItemList" type="ui.Control" />
    <Param name="ShowOnlyItem" type="data.Boolean" />
    <Param name="InnerItems" type="data_items.Items" />
  </Component>

  <Component id="OpenPageFromDetails" type="action.Action" execution="native">
    <Param name="Page" type="ui.MultiplePage" script="true" />
    <Param name="OpenIn" type="uiaspect.OpenIn" script="true" />
    <Param name="PageParams" script="true" description="gets the item as input" />
  </Component>

  <Component id="DetailsToolbar" type="uiaspect.DetailsToolbar">
    <Param name="Operation" type="operation.Operations[]" />
    <Param name="ButtonStyle" type="ui.ButtonStyle" script="true">
      <Default t="ui.ButtonAsHyperlink" />
    </Param>
    <xtml t="ui.DynamicList" Items="%$Operation%">
      <Control t="ui.ButtonOld" Class="aa_operation %Id%">
        <Image t="object.RunMethod" Method="Icon" Input="%$_ItemsOfOperation%" />
        <Text t="object.RunMethod" Method="Title" Input="%$_ItemsOfOperation%" />
        <OnClick t="object.RunMethod" Method="Action" Input="%$_ItemsOfOperation%" />
        <Style t="xtml.UseParam" Param="ButtonStyle" />
      </Control>
      <Layout t="ui.ButtonsLayout" />
    </xtml>
  </Component>
  
</xtml>

<xtml ns="aaeditor" deprecated="true">

 <Component id="ComponentsOfType" type="data.Data" execution="native">
      <Param name="Type" essential="true"/>
      <Param name="TextFilter"/>
      <Param name="IncludeAdvancedComponents" type="data.Boolean"/>
    </Component>

</xtml>

<xtml ns="tree" light="false">

<Component id="Tree" type="ui.Control" execution="xtml" databind="true">
  <Param name="RootItems" script="true" Default="%%" />
  <Param name="NextLevel" script="true" />
  <Param name="HasNextLevel" type="data.Boolean" script="true" Description="Determine if a (+) button will show. if empty the tree will use NextLevel for that"/>
  <Param name="ItemText" type="data.Data" script="true" />
  <Param name="ItemImage" type="data.Data" script="true" />
  <Param name="OnSelect" type="action.Action" script="true"/>
  <Param name="OnDoubleClick" type="action.Action" script="true" Description="double click and ENTER key"/>
  <Param name="OnDelete" type="action.Action" script="true" Description="DEL key"/>
  <Param name="Height" type="data.Data"/>
  <Param name="ItemControl" type="ui.Control" script="true" />
  <Param name="OnKeyPressed" type="action.Action" script="true"/>
  <Param name="ContextMenu" type="menu.ContextMenu" script="true"/>
  <Param name="AutoExpandOnSelect" type="data.Boolean"><Default value="true"/></Param>
  <Param name="Borderless" type="data.Boolean"><Default value="false"/></Param>
  <Param name="AutoExpandFirstLevel" type="data.Boolean"><Default value="true"/></Param>
  <Param name="OpenAllNodes" type="data.Boolean"><Default value="false"/></Param>
    
  <xtml t="xml.WithChanges">
    <Var name="TreeContext" t="xtml.Params">
      <Param name="Text" value="%$Text%" />
      <Param name="Image" value="%$Image%" />
      <Param name="AutoExpandOnSelect" value="%$AutoExpandOnSelect%" />
      <Param name="HasNextLevelEmpty" t="yesno.Empty" Data="%$HasNextLevel%"/>
      <Param name="HasItemControl" t="yesno.NotEmpty" Data="%$ItemControl%"/>
      <ScriptParam name="RootItems" t="xtml.UseParam" Param="RootItems"/>
      <ScriptParam name="NextLevel" t="xtml.UseParam" Param="NextLevel"/>
      <ScriptParam name="HasNextLevel" t="xtml.UseParam" Param="HasNextLevel"/>
      <ScriptParam name="ItemText" t="xtml.UseParam" Param="ItemText"/>
      <ScriptParam name="ItemImage" t="xtml.UseParam" Param="ItemImage"/>
      <ScriptParam name="ItemColoring" t="xtml.UseParam" Param="ItemColoring"/>
      <ScriptParam name="ItemControl" t="xtml.UseParam" Param="ItemControl"/>
      <ScriptParam name="ContextMenu" t="xtml.UseParam" Param="ContextMenu"/>
      <ScriptParam name="OnSelect" t="action.RunActions">
        <Action t="xtml.UseParam" Param="OnSelect" />
        <Action t="tree.Expand" Condition="%$AutoExpandOnSelect% == 'true'">
      <Data t="uiaction.GoUp" TopClass="treeitem" />
    </Action>
      </ScriptParam>
      <ScriptParam name="OnDoubleClick" t="xtml.UseParam" Param="OnDoubleClick"/>
      <ScriptParam name="OnKeyPressed" t="xtml.UseParam" Param="OnKeyPressed"/>
      <ScriptParam name="OnDelete" t="xtml.UseParam" Param="OnDelete"/>
      <ScriptParam name="LazyExpand" t="tree.AddNodes"/>
    </Var>  
    <Xml t="ui.Html" DynamicContent="true">
      <div class="tree_top">
        <span id="tree_key_sink" tabindex="1" onkeyup="ajaxart_tree_event(event);return false;" ></span>
        <div class="tree_wrapper" style="font-family: times; font-size:12px; border1:1px solid blue; overflow:auto; white-space: nowrap; min-height:200px; min-width:200px;height:%$Height%" tabindex="1" onkeydown="ajaxart_tree_keydown(event);" onkeyup="ajaxart_tree_event(event);return false;"
          onclick="ajaxart_tree_event(event);" ondblclick="ajaxart_tree_event(event)" >
          <ul class="treeview"/>
        </div>
      </div>
    </Xml>
    <Change t="uiaction.RunUiActions">
      <Data t="uiaction.ElementByID" ID="tree_key_sink" StartFrom="%%" />
      <Condition t="ui.IsChrome" />
      <Action t="uiaction.Hide" />
    </Change>
    <Change t="uiaction.AddClass" RunOn="%%" Cls="noborder" Condition="%$Borderless%"/> 
    <Change t="ui.DataBind">
      <Data t="ui.ElementOfClass" Cls="treeview"/>
    </Change>
    <Change t="ui.ExecJQuery" Expression=".treeview({toggle: function() { ajaxart_tree_toggle(this,'TreeContext','LazyExpand');}})">
      <Data t="ui.ElementOfClass" Cls="treeview"/>
    </Change>
    <Change t="tree.AddNodes" IsRootLevel="true" AutoExpand="true">
      <Data t="ui.ElementOfClass" Cls="treeview"/>
    </Change>
    <Change t="ui.ExecJQuery" Expression=".find('.hitarea').click()" Name="auto expand first level" Condition="%$AutoExpandFirstLevel%"/>
    <Change t="tree.OpenAllNodes" RunOn="%$%" Condition="%$OpenAllNodes%"/>
    <Change t="tree.SelectFirst"/>
  </xtml>
</Component>

<Component id="SelectFirst" type="xml.Change" execution="native" hidden="true" />

<Component id="NewNodeItem" type="data.Data">
  <xtml t="xml.WithChanges" >
          <Xml t="ui.Html">
            <li class="treeitem treeitem closed">
              <image class="treeitem_image" src="" align="top" height="16px"/>
              <span class="treeitem_text" style="position:relative;">
                <span class="treeitem_text_content" style="z-index:2; white-space: normal;"/>
                <input class="treeitem_dummy4focus" readonly="true" style="position:absolute; left:-4px; top:0px; width:1px; padding:0; border:none; z-index:1; background:transparent;"></input>
              </span>
            </li>
          </Xml>
          <Change t="xml.SetAttribute">
            <Data t="ui.ElementOfClass" Cls="treeitem_image"/>
            <AttributeName value="src"/>
            <Value t="xtml.RunXtml" Xtml="%$TreeContext/ItemImage%"/>
          </Change>
         <Change t="ui.DataBind" >
           <Data t="ui.ElementOfClass" Cls="treeitem_text"/>
         </Change>
         <Change t="data.IfThenElse">
           <If value="%$TreeContext/HasItemControl%"/>
           <Else t="xml.PerformChanges">
          <Data t="ui.ElementOfClass" Cls="treeitem_text_content"/>
            <Change t="xml.UpdateInnerText">
               <NewValue t="xtml.RunXtml" Xtml="%$TreeContext/ItemText%"/>
             </Change>
          <Change1 t="xml.SetAttribute" AttributeName="title">
            <Value t="xtml.RunXtml" Xtml="%$TreeContext/ItemText%"/>
          </Change1>
          <Change t="uiaction.AddClass" Cls="text_item" RunOn="%%"/>
           </Else>
           <Then t="xml.PerformChanges">
            <Change t="xml.AddChildren" CloneChildren="false">
             <Data t="ui.ElementOfClass" Cls="treeitem_text"/>
             <Children t="xtml.RunXtml" Xtml="%$TreeContext/ItemControl%"/>
             </Change>
           </Then>
         </Change>
         <Change t="xml.AddChildren"  CloneChildren="false" Name="add expand button">
           <Condition t="data.IfThenElse" If="%$TreeContext/HasNextLevelEmpty%">
             <Then t="yesno.NotEmpty">
               <Data t="xtml.RunXtml" Input="%$InputForChanges%" Xtml="%$TreeContext/NextLevel%"/>
             </Then>
             <Else t="xtml.RunXtml" Input="%$InputForChanges%" Xtml="%$TreeContext/HasNextLevel%"/>
           </Condition>
           <Children t="ui.Html">
             <ul class="treeul"/>
           </Children>
         </Change>
         <Change t="menu.SetContextMenu">
           <Var name="_CurrentFocus" t="ui.ElementOfClass" Cls="treeitem_dummy4focus" /> 
           <Menu t="xtml.RunXtml" Xtml="%$TreeContext/ContextMenu%"/>
         </Change>
         <Change t="ui.DisableTextSelection"/>
  </xtml>
</Component>

<Component id="AddNodes" type="xml.Change" execution="xtml" hidden="true">
  <Param name="IsRootLevel" type="data.Boolean"><Default value="false"/></Param>
  <xtml t="xml.MultiChange">
    <Change t="tree.AddChildren" TreeViewCls="treeview">
      <Children t="data.Pipeline">
        <Item t="data.IfThenElse" If="%$IsRootLevel%">
          <Then t="xtml.RunXtml" Xtml="%$TreeContext/RootItems%"/>
          <Else t="xtml.RunXtml" Xtml="%$TreeContext/NextLevel%"/>
        </Item>
        <Item t="tree.NewNodeItem"/>
      </Children>
    </Change>
  </xtml>
</Component> 

<Component id="AddChildren" type="xml.Change" hidden="true" execution="native">
  <Param name="TreeViewCls" />
  <Param name="Children" />
</Component>

<Component id="RefreshSelected" type="action.Action" execution="xtml">
  <Param name="RefreshParentChildren" type="data.Boolean"/>
  <Param name="RefreshChildren" type="data.Boolean"/>
  <Param name="IdentifierForSelected" script="true"/>
  <Param name="IdentifierForCurrent" script="true"/>
  <xtml t="xml.ChangeXml">
    <Xml t="data.Pipeline">
      <Item t="uiaction.ControlElementToRunOn"/>
      <Item t="ui.ElementOfClass" Cls="selected"/>
    </Xml>
    <Change t="xml.MultiChange">
      <Data t="ui.ElementOfClass" Cls="treeitem" Direction="up"/>
      <Condition t="yesno.And">
        <Item value="%$RefreshChildren%"/>
        <Item1 t="tree.IsExpanded"/>
      </Condition>
      <Change t="tree.CollapseAndUnlazyChildren" RunOn="%%"/>
      <Change t="tree.Expand"/>
    </Change>
    <Change t="data.IfThenElse" If="%$RefreshParentChildren%">
      <Then t="xml.MultiChange">
        <Var name="CurrentNodeID" t="data.FirstSucceeding">
          <Item t="xtml.UseParam" Param="IdentifierForCurrent">
            <Input t="ui.ControlData"/>
          </Item>
          <Item t="xtml.UseParam" Param="IdentifierForSelected">
            <Input t="ui.ControlData"/>
          </Item>
        </Var>
        <PerformChangesOn t="data.Pipeline">
          <Item t="ui.ElementOfClass" Cls="treeitem" Direction="up"/>
          <Item t="ui.ElementOfClass" Cls="treeitem" Direction="up"/>
        </PerformChangesOn>
        <Change t="tree.CollapseAndUnlazyChildren" RunOn="%%"/>
        <Change t="tree.Expand"/>
        <Change t="uiaction.Click">
        <RunOn t="uiaction.ElementByInnerFilter" TopElement="%%">
        <Filter t="yesno.EqualsTo" To="%$CurrentNodeID%">
          <Data t="xtml.UseParam" Param="IdentifierForSelected"/>
        </Filter>
        </RunOn>
      </Change>
      </Then>
      <Else t="ui.UseDataBoundParams" >
       <Change t="action.RunActions">
        <Action t="action.IfThenElse" If="%$TreeContext/HasItemControl%">
          <Else t="action.RunActions">
             <Action t="xml.UpdateInnerText">
              <Data t="ui.ElementOfClass" Cls="treeitem_text_content"/>
          <NewValue t="xtml.RunXtml" Xtml="%$TreeContext/ItemText%"/>
             </Action>
             <Action t="xml.SetAttribute" AttributeName="title">
              <Data t="ui.ElementOfClass" Cls="treeitem_text_content"/>
               <Value t="xtml.RunXtml" Xtml="%$TreeContext/ItemText%"/>
             </Action>
          </Else>
          <Then t="xml.ReplaceChildren">
            <Children t="xtml.RunXtml" Xtml="%$TreeContext/ItemControl%"/>
          </Then>
        </Action>
        <Action t="xml.SetAttribute" >
          <Data RunOn="%%" t="uiaction.GoUpAndDown" UpClass="treeitem" DownClass="treeitem_image" />
          <AttributeName value="src"/>
          <Value t="xtml.RunXtml" Xtml="%$TreeContext/ItemImage%"/>
        </Action>
       </Change>
      </Else>
    </Change>    
  </xtml> 
</Component>

<Component id="CollapseAndUnlazyChildren" type="xml.Change">
  <xtml t="xml.MultiChange" PerformChangesOn="%%">
    <Change t="uiaction.Click">
      <Condition t="ui.HasClass" Cls="collapsable"/>
      <RunOn t="ui.ElementOfClass" Cls="hitarea"/>
    </Change>
    <Change t="xml.Delete">
      <Data t="ui.ElementOfClass" Cls="treeul"/>
    </Change>
    <Change t="xml.MultiChange">
      <Condition t="ui.RunInControlContext" RunOn="%%">
        <Item t="data.IfThenElse" If="%$TreeContext/HasNextLevelEmpty%">
          <Then t="yesno.NotEmpty">
            <Data t="xtml.RunXtml" Input="%$InputForChanges%" Xtml="%$TreeContext/NextLevel%"/>
          </Then>
          <Else t="xtml.RunXtml" Input="%$InputForChanges%" Xtml="%$TreeContext/HasNextLevel%"/>
        </Item>
      </Condition>
      <Change t="xml.AddChildren" CloneChildren="false" Name="add expand button">
        <Children t="ui.Html">
          <ul class="treeul"/>
        </Children>
      </Change>
      <Change t="tree.InternalAfterAddingItem" Item="%%"/>
    </Change>
  </xtml>
</Component>

<Component id="InternalAfterAddingItem" type="action.Action" execution="native">
  <Param name="Item"/>
</Component>

<Component id="Expand" type="xml.Change">
  <xtml t="uiaction.Click">
     <Condition t="ui.HasClass" Cls="expandable"/>
     <RunOn t="ui.ElementOfClass" Cls="hitarea" OnlyFirst="true"/>
  </xtml>
</Component>

<Component id="ExpandParent" type="xml.Change">
  <xtml t="uiaction.Click">
     <RunOn t="data.Pipeline">
          <Item t="ui.ControlToRunOn" />
          <Item t="ui.ElementOfClass" Cls="selected"/>
          <Item t="xml.Parent"/>
     </RunOn>
  </xtml>
</Component>

<Component id="PickTreeDisplayLabel" type="data.Data">
  <Param name="OptionLabel" script="true"/>
  <xtml t="data.Switch" Value="%%">
    <Case If="_all">
      <Then t="text.MultiLang" Pattern="all"/>
    </Case>
    <Default t="data.Pipeline">
      <Item t="text.Split" Separator=","/>
      <Item t="xtml.UseParam" Param="OptionLabel"/>
      <Item t="data.IfThenElse" Else="%%">
       <If t="yesno.EqualsTo" To="_blank"/>
       <Then t="text.MultiLang" Pattern="empty (no value)"/>
      </Item>
      <Aggregator t="text.Concat" Separator=","/>
    </Default>
  </xtml>
</Component>

<Component id="IsLeaf" type="data.Boolean">
  <xtml t="yesno.Empty">
    <Data t="uiaction.GoUpAndDown" UpClass="treeitem" DownClass="treeitem"/>
  </xtml>
</Component>

<Component id="IsExpanded" type="data.Boolean">
  <xtml t="ui.HasClass" Cls="collapsable"/>
</Component>

<Component id="DoubleClickOnSelected" type="action.Action">
  <xtml t="uiaction.RunEvent" VarName="TreeContext" Action="OnDoubleClick">
    <RunOn t="data.Pipeline" >
     <Item t="uiaction.ControlElementToRunOn"/>
     <Item t="ui.ElementOfClass" Cls="selected"/>
    </RunOn>
  </xtml>
</Component>

<Component id="RefreshAfterAddingItem" type="action.Action">
 <Param name="ParentNode" />
 <Param name="AlsoSelect" type="data.Boolean">
  <Default value="false" />
 </Param>
 <Param name="ExpandBefore" type="data.Boolean">
  <Default value="true" />
 </Param>
 <xtml t="action.RunActions">
  <Var name="AboveUL" t="data.Switch">
      <Case>
        <IfCondition t="yesno.Empty" Data="%$ParentNode%" /> 
        <Then t="data.Pipeline">
          <Item t="ui.ControlToRunOn" />
          <Item t="ui.ElementOfClass" Cls="selected"/>
          <Item t="xml.Parent"/>
        </Then>
      </Case>
      <Case>
        <IfCondition t="ui.HasClass" Data="%$ParentNode%" Cls="tree_top"/> 
        <Then t="ui.ElementOfClass" Cls="tree_wrapper" Data="%$ParentNode%"/>
      </Case>
      <Default value="%$ParentNode%"/>
  </Var>
  <Var name="NewItems" t="data.IfThenElse">
    <If t="ui.HasClass" Data="%$ParentNode%" Cls="tree_top"/> 
    <Then t="ui.RunInControlContext">
      <RunOn t="data.Pipeline">
        <Item value="%$AboveUL%"/>
        <Item t="uiaction.JQueryFind" RunOnData="true" Expression=">ul"/> 
      </RunOn>
      <Item t="xtml.RunXtml" Xtml="%$TreeContext/RootItems%"/>
    </Then>    
    <Else t="ui.RunInControlContext" RunOn="%$AboveUL%">
      <Item t="xtml.RunXtml" Xtml="%$TreeContext/NextLevel%"/>
    </Else>    
  </Var>
  
  <Action t="tree.InternalRefreshAddingItem" AboveUL="%$AboveUL%" NewItems="%$NewItems%">
    <NewNodeItem t="tree.NewNodeItem"/>
    <OnNewItem t="uiaction.Click" RunOn="%%" Condition="%$AlsoSelect%"/> 
  </Action>
 </xtml>
</Component>

<Component id="InternalRefreshAddingItem" type="action.Action" execution="native" hidden="true">
  <Param name="AboveUL"/>
  <Param name="NewItems"/>
  <Param name="NewNodeItem" script="true"/>
  <Param name="OnNewItem" type="action.Action" script="true"/>
</Component>

<Component id="ExpandAndSelectItem" type="action.Action">
  <Param name="TreePath"/>
  <xtml t="action.RunActions">
    <Var name="State" t="xtml.Params">
      <Param name="Current" t="ui.ElementOfClass" Cls="tree_wrapper">
        <Data t="ui.ControlToRunOn"/>
      </Param>
    </Var>
    <Action t="action.RunActionOnItems">
      <Items t="text.Split" Separator="/" Data="%$TreePath%"/>
      <Action t="action.RunActions">
       <Action t="object.SetProperty" Object="%$State%" Property="Current">
         <Var name="PathElem"/>
         <Value t="data.Pipeline">
           <Item value="%$State/Current%"/>
           <Item t="uiaction.JQueryFind" RunOnData="true" Expression=">ul>li" All="true"/>
           <Item t="yesno.PassesFilter">
             <Filter t="yesno.ItemsEqual" Item1="%$PathElem%">
               <Item2 t="data.Pipeline">
                <Item t="uiaction.JQueryFind" RunOnData="true" Expression=">span"/>
                <Item t="uiaction.JQueryFind" RunOnData="true" Expression=".treeitem_text_content"/>
                <Item t="xml.InnerTextValue"/>
               </Item2>
             </Filter>
           </Item>
           <Aggregator t="data.First"/>
         </Value>
       </Action>
       <Action t="tree.Expand" Data="%$State/Current%">
         <Condition t="yesno.NotEmpty" Value="%$State/Current%"/>
       </Action>
      </Action>
    </Action>
    <Action t="tree.SelectItem" Item="%$State/Current%"/>
  </xtml>
</Component>

<Component id="TreeNodeByPath" type="ui.Control" execution="native">
  <Param name="TreePath"/>
</Component>

<Component id="ExpandAndSelectItemForItemControl" type="action.Action">
  <Param name="TreePath"/>
  <Param name="ItemText" script="true"/>
  <xtml t="action.RunActions">
    <Var name="State" t="xtml.Params">
      <Param name="Current" t="ui.ElementOfClass" Cls="tree_wrapper">
        <Data t="ui.ControlToRunOn"/>
      </Param>
    </Var>
    <Action t="action.RunActionOnItems">
      <Items t="text.Split" Separator="/" Data="%$TreePath%"/>
      <Action t="action.RunActions">
       <Action t="object.SetProperty" Object="%$State%" Property="Current">
         <Var name="PathElem"/>
         <Value t="data.Pipeline">
           <Item value="%$State/Current%"/>
           <Item t="uiaction.JQueryFind" RunOnData="true" Expression=">ul>li" All="true"/>
           <Item t="yesno.PassesFilter">
             <Filter t="yesno.ItemsEqual" Item1="%$PathElem%">
               <Item2 t="data.Pipeline">
                <Item t="uiaction.JQueryFind" RunOnData="true" Expression=">span"/>
                <Item t="ui.ControlData" Type="data" />
                <Item t="xtml.UseParam" Param="ItemText"/>
               </Item2>
             </Filter>
           </Item>
           <Aggregator t="data.First"/>
         </Value>
       </Action>
       <Action1 t="tree.Expand" Data="%$State/Current%">
         <Condition t="yesno.NotEmpty" Value="%$State/Current%"/>
       </Action1>
      </Action>
    </Action>
    <Action t="tree.SelectItem" Item="%$State/Current%"/>
  </xtml>
</Component>

<Component id="ParentItem" type="data.Data">
        <xtml t="data.Pipeline">
          <Item t="uiaction.ElementByClass" Cls="selected" />
          <Item t="ui.ElementOfClass" Cls="treeitem" Direction="up" />
          <Item t="ui.ElementOfClass" Cls="treeitem" Direction="up" />
        </xtml>
</Component>

<Component id="DeleteSelected" type="action.Action" execution="native"/>

<Component id="MoveSelected" type="action.Action">
  <Param name="To" type="enum">
    <Default value="next"/>
    <value>next</value>
    <value>previous</value>
    <value>first</value>
    <value>last</value>
  </Param>

  <xtml t="xml.ChangeXml">
    <Xml t="uiaction.ElementByClass" Cls="selected"/>
    <Change t="xml.MoveElement" To="%$To%" Data="%..%"/>
  </xtml>
</Component>

<Component id="SelectItem" type="action.Action" execution="native">
  <Param name="Item" type="ui.Control">
    <Default t="ui.ControlToRunOn"/>
  </Param>
</Component>

<Component id="PathOfSelectedItem" type="data.Data" execution="native"/>

<Component id="OpenAllNodes" type="action.Action" execution="native">
<Param name="MaxDepth"><Default value="10"/></Param>
</Component>

<Component id="PickTreeRoots" type="data.Data" execution="native"/>

<Component id="SelectTreeNodeByPath" type="action.Action" execution="native">
  <Param name="PathItems" />
</Component>

</xtml>

<xtml ns="action_async">

<Type id="Action" icon="%$_Images%/studio/run.gif">
  <ComponentAspect t="component_aspect.Image" Image="%$_Images%/studio/run.gif" />
    <MoreComponents>
      <component id="action_async.RunActions" itemsParam="Action" />
    </MoreComponents>
</Type>

<Type id="PostSuccess"/>

<Component id="RunAsync" type="action.Action" execution="native">
  <Param name="Action" type="action_async.Action" script="true" essential="true"/>
  <Param name="OnSuccess" type="action.Action" script="true" />
  <Param name="OnFailure" type="action.Action" script="true" />
</Component>

<Component id="RunAsyncActions" type="action.Action" execution="native" light="false" hidden="true">
  <Param name="Action" type="action_async.Action[]" script="true" essential="true"/>
</Component>

<Component id="RunActionOnItems" type="action_async.Action" execution="native">
  <Param name="Items" essential="true"/>
  <Param name="Action" type="action_async.Action" script="true" essential="true">
      <RunningInput t="xtml.RunXtml" Xtml="%$_Xtml%" Field="Items"/>
  </Param>
</Component>

<Component id="AsyncActionOnAsyncData" type="action_async.Action" execution="native">
  <Param name="Query" type="data_async.Data" script="true" essential="true"/>
  <Param name="Action" type="action_async.Action" script="true" essential="true"/>
</Component>

<Component id="ActionOnAsyncData" type="action_async.Action" execution="native">
  <Param name="Query" type="data_async.Data" script="true" essential="true"/>
  <Param name="Action" type="action.Action" script="true" essential="true"/>
</Component>

<Component id="SyncAction" type="action_async.Action" execution="native">
  <Param name="Action" type="action.Action[]" script="true" essential="true"/>
</Component>

<Component id="Rest" type="action_async.Data,action_async.Action" execution="native">
  <Param name="SampleResult" />
  <Param name="Url" essential="true" />
  <Param name="PostData" />
  <Param name="Method" type="enum" Options="GET,POST" essential="true">
    <Default value="GET" />
  </Param>
  <Param name="ConvertResult" essential="true">
    <Default value="%%" />
  </Param>
  <Param name="DetectError" />
  <Param name="ID" description="aborts all previous calls with this id" />
  <Param name="ContentType" Default="application/xml; charset=UTF-8"/>
  <Param name="TunnelRequest" type="data.Boolean" />
  <Param name="ActionOnResult" type="action.Action" script="true" description="Fix the data" />
  <Param name="OnSuccess" type="action.Action" script="true" />
  <Param name="OnError" type="action.Action" script="true" />
</Component>

<Component id="UrlGet" type="action_async.Action" execution="native">
  <Param name="Url" essential="true"/>
  <Param name="OnSuccess" type="action.Action" script="true"/>
  <Param name="OnFailure" type="action.Action" script="true"/>
  <Param name="ID"/>
  <Param name="ResultType" type="enum" Options="xml,html,text"/>
  <NativeHelper t="data_async.UrlGet"/>
</Component>

<Component id="JBartJsonP" type="action_async.Action" description="If you to wish to implement the service, return a javascript that calls aa_jsonp_callback(data,id,url)">
      <Param name="Url" essential="true"/>
      <Param name="OnSuccess" type="action.Action" script="true"/>
      <Param name="OnFailure" type="action.Action" script="true"/>
      <Param name="ResultType" type="enum" Options="xml,html,text,json,json to xml"/>
      <xtml t="data_async.JBartJsonP" Url="%$Url%" ResultType="%$ResultType%">
        <OnSuccess t="xtml.UseParam" Param="OnSuccess"/>
        <OnFailure t="xtml.UseParam" Param="OnFailure"/>
      </xtml>
</Component>

<Component id="UrlPost" type="action_async.Action" execution="native">
  <Param name="Url" essential="true"/>
  <Param name="PostData" type="server.PostData[]"/>
  <Param name="OnSuccess" type="action.Action" script="true"/>
  <Param name="OnFailure" type="action.Action" script="true"/>
  <Param name="ID"/>
  <Param name="SuccessCondition" type="action_async.PostSuccess" advanced="true"/>
  <Param name="ContentType" Default="application/x-www-form-urlencoded; charset=UTF-8"/>
  <Param name="ResultType" type="enum" Options="xml,html,text"/>
  <Param name="TunnelRequest" type="data.Boolean"/>
  <NativeHelper t="data_async.UrlPost"/>
  <NativeHelper name="TunnelRequest" t="action_async.UrlPost" Url="get.php" ResultType="%$ResultType%">
      <PostData t="server.PostData" Name="contents" Value="%$Url%"/>
      <PostData t="server.PostData" Name="headers" Value="%$Headers%"/>
      <PostData t="server.PostData" Name="__METHOD" Value="POST"/>
      <PostData t="server.PostData" Name="__POSTDATA" Value="%$PostData%"/>
      <OnSuccess t="xtml.UseParam" Param="OnSuccess"/>
  </NativeHelper>
  
</Component>

<Component id="SuccessByHttpCode" type="action_async.PostSuccess" execution="native">
  <Param name="Code"/>
</Component>

<Component id="Code200" type="action_async.PostSuccess" >
  <xtml t="action_async.SuccessByHttpCode" Code="200"/>
</Component>

<Component id="SuccessByContent" type="action_async.PostSuccess" >
  <Param name="Contains"/>
</Component>
 
<Component id="LoadJsFiles" type="action_async.Action" execution="native">
  <Param name="JsFiles" essential="true"/>
</Component>

<Component id="LoadCssFiles" type="action_async.Action" execution="native">
  <Param name="CssFiles" essential="true" description="comma separated. Ensure 'real' commas are encoded as %2C"/>
</Component>

<Component id="LoadXtmlPackage" type="action_async.Action" execution="native">
  <Param name="Package" essential="true"/>
</Component>

<Component id="FillResourceFromAPI" type="action_async.Action.jBart">
      <Param name="APICall" type="data_async.ApiCall" script="true" essential="true"/>
      <Param name="PreviewForDT">
        <Field t="bart_dt.PreviewForFillResourceFromAPI"/>
      </Param>
      <Param name="Target" Description="Put the target for the api data"/>
      <Param name="ProcessAPIResults" Description="transform, clean, enrich, encode API results" Default="%%" script="true"/>
      <Param name="EmptyTargetBeforeCopying" type="data.Boolean" Default="true"/>
      <Param name="OverrideTarget" type="data.Boolean"/>
      <Param name="CallAPIOnlyIfTargetIsEmpty" type="data.Boolean" Default="true" Description="Calls the API only once"/>
      <xtml t="action_async.ActionOnAsyncData">
        <Condition t="yesno.OR">
          <Item t="yesno.Not" Of="%$CallAPIOnlyIfTargetIsEmpty%"/>
          <Item t="yesno.IsEmpty" Value="%$Target/*%"/>
        </Condition>
        <Query t="xtml.UseParam" Param="APICall"/>
        <Action t="action.IfThenElse" If="%$OverrideTarget%">
          <Then t="action.RunActions">
            <Action t="xml.Delete" To="%$Target%"/>
            <Action t="action.WriteValue" To="%$Target%">
              <Value t="xtml.UseParam" Param="ProcessAPIResults"/>
            </Action>
          </Then>
          <Else t="action.RunActions">
            <Action t="xml.DeleteChildren" ParentElement="%$Target%" Condition="%$EmptyTargetBeforeCopying%"/>
            <Action t="xml.AddXmlChildren" Parent="%$Target%">
              <Children t="xtml.UseParam" Param="ProcessAPIResults"/>
            </Action>
          </Else>
        </Action>
      </xtml>
    </Component>

<Component id="CustomActionByXtml" type="action_async.Action.jBart">
  <Param name="Action" type="action_async.Action" script="true"/>
  <xtml t="xtml.UseParam" Param="Action" />
</Component>

</xtml>

<xtml ns="jbart">

<Type id="ApiCall" />
<Type id="ApiCallCommunicationType" />

<Component id="ApiCall" type="jbart.ApiCall" execution="native">
  <Param name="Url" />
  <Param name="DefaultTarget" description="The result will be copied under this location" Default="%$Data%" />
  <Param name="CommunicationType" type="jbart.ApiCallCommunicationType">
    <Default t="jbart.RestWithJBartDBProxy" />
  </Param>
  <Param name="ResultType" type="enum" Options=",xml,json,json to xml" Default="" />
  <Param name="SkipCallIfDataPresent" type="data.Boolean" Default="true"/>
</Component>

<Component id="MultipleApiCalls" type="jbart.ApiCall" execution="native" decorator="Call">
  <Param name="Call" type="jbart.ApiCall[]" script="true" />
</Component>

<Component id="RestWithJBartDBProxy" type="jbart.ApiCallCommunicationType" description="Tunnels the rest request using the jbartdb proxy" execution="native" />

<Component id="JSONP" type="jbart.ApiCallCommunicationType" description="Uses JSONP" execution="native" autoexpand="true">
  <Param name="UrlParameterForCallback" Default="callback" />
  <Param name="Timeout" Default="7000" />
</Component>


<Component id="RunApiCommand" type="action.Action">
  <Param name="Api" type="jbart.ApiCall" script="true" />
  <Param name="OnSuccess" type="action.Action" script="true" />
  <Param name="OnError" type="action.Action" script="true" />
  <xtml t="action_async.RunAsync">
    <Action t="xtml.UseParam" Param="ApiCall" />
    <OnSuccess t="xtml.UseParam" Param="OnSuccess" />
    <OnFailure t="xtml.UseParam" Param="OnError" />
  </xtml>
</Component>

</xtml>

<xtml ns="bart">
  <Component id="Css" type="bart.ApplicationFeature" >
    <Param name="Css" codemirror="true" />
    <xtml t="object.SetProperty" Object="%$_AppContext%" Property="Css" Value="%$Css%" /> 
  </Component>  
</xtml>

<xtml ns="bart">

<Component id="LoadAllUnits" type="action_async.Action">
  <Param name="MainUnit" />
  <xtml t="action_async.AsyncActionOnAsyncData">
    <Query t="bart_server.LoadNode" ContentType="bart_unit" ID="%$MainUnit%" />
    <Action t="action.IfThenElse" If="%@reason% != 'os user cannot access the application'">
      <Then t="action_async.RunActions">
        <Action t="action_async.RunActionOnItems">
          <Items t="text.SplitByCommas" Text="%@using_units%" />
          <Action t="action_async.ActionOnAsyncData">
            <Query t="bart_server.LoadNode" ContentType="bart_unit" ID="%%" />
            <Action t="bart.LoadUnit" />
          </Action>
        </Action>
        <Action t="action_async.SyncAction">
          <Action t="bart.LoadUnit" />
          <Action t="object.SetProperty" Object="%$_AppContext%" Property="AppXtml">
            <Value t="xtml.ComponentDefinition" ID="%$MainUnit%.App" ToXtml="true" />
          </Action>
          <Action t="xtml.RunXtmlByComponentId" ComponentID="%$MainUnit%.App" />
        </Action>
      </Then>
      <Else t="uiaction.GoToUrl" Url="nopremissions.html" />
    </Action>
  </xtml>
</Component>

<Component id="LoadUnit" type="action.Action">
  <xtml t="action.RunActions">
    <Action t="xtml.LoadComponents" Components="%Component%" Namespace="%@id%" ClearNSBefore="%@id% != 'bartgallery'"/>
    <Action t="object.AddToProperty" Object="%$_AppContext%" Property="Units" Value="%%" />
    <Action t="action.RunActionOnItems" Items="%units/bart_unit%">
      <Action t="bart.LoadUnit" />
    </Action>
  </xtml>
</Component>

</xtml>

<xtml ns="bart">

  <Type id="Pages" FirstParamsForNew="bart.SinglePage.ID" DefaultPT="bart.SinglePage"/>
  <Type id="DataItemsProvider" />
  
  <Component id="Pages" type="bart.Pages" dtsupport="false" light="false">
    <Param name="Page" type="bart.Pages[]" fastfind="true" />
    <xtml value="%$Page%" />
  </Component>

  <Component id="SinglePage_Preview" type="ui.Control">
    <xtml t="bart_dt.PagePreview" Page="%$Preview/Output%" />
  </Component>
  <Component id="MultiplePage_Preview" type="ui.Control">
    <xtml t="bart_dt.PagePreview" Page="%$Preview/Output%" />
  </Component>

</xtml>
<xtml ns="bart_resource">

  <Type id="Resources" />
  <Type id="Feature" />
  
  <Component id="Resources" type="bart_resource.Resources" light="false">
    <Param name="Resource" type="bart_resource.Resources[]"/>
    <xtml value="%$Resource%"/>
  </Component>
  
  <Component id="Node" type="bart_resource.Resources" execution="native">
    <Param name="ResourceID">
      <FieldAspect t="field_aspect.Mandatory" />
    </Param>
    <Param name="ContentType" script="true" type="dynamic_enum" Options="%$_AppContext/ContentTypes/ID%">
      <FieldAspect t="field_aspect.Mandatory" />
    </Param>
    <Param name="ID" script="true" description="node key">
      <FieldAspect t="field_aspect.Mandatory" />
    </Param>
    <Param name="AutoCreate" type="data.Boolean" />
    <Param name="RequiresLogin" type="data.Boolean" />
    <Param name="AutoSave" type="data.Boolean" />
    <Param name="DependsOn" type_hint="dynamic_enum_multi" Options="%$_AppContext/Resources/ID%" />
    <Param name="Feature" type="bart_resource.Feature[]" advanced="true" script="true" />
  </Component>

  <Component id="ResourceAspect" type="data_items.Aspect" execution="native">
    <Param name="ID"/>
    <Param name="DependsOn"/>
    <Param name="Summary"/>
    <Param name="ContentType"/>
    <Param name="Type"/>
  </Component>
  
  <Component id="UrlAttribute" type="bart_resource.Resources">
    <Param name="ResourceID"/>
    <Param name="Attribute"/>
    <xtml t="data_items.Items">
      <Items t="bart_url.UrlAttribute" Attribute="%$Attribute%" />
      <Aspect t="bart_resource.ResourceAspect" ID="%$ResourceID%" Summary="%$Attribute% url attribute"/>
      <Aspect t="object.SetMethod" Object="%$_Items%" Method="Update">
        <Xtml t="action.RunActions">
          <Action t="object.SetProperty" Object="%$_This%" Property="Items" Value="%$Value%"/>
          <Action t="bart_url.UpdateUrl" ValuePairs="?%$Attribute%=%$Value%;"/>
        </Xtml>
      </Aspect>
    </xtml>
  </Component>
  
  <!--  Specific resources -->
  
  <Component id="CurrentPage" type="bart_resource.Resources" light="false">
    <xtml t="data_items.Items">
      <Items t="bart_url.UrlAttribute" Attribute="page" />
      <Aspect t="bart_resource.ResourceAspect" ID="CurrentPage" />
      <Aspect t="object.SetProperty" Object="%$_Items%" Property="Image" Value="%$_Images%/studio/page1616.gif" />
    </xtml>
  </Component>

  <Component id="CurrentNodeID" type="bart_resource.Resources" light="false">
    <xtml t="bart_resource.UrlAttribute" ResourceID="CurrentNodeID" Attribute="node" />
  </Component>
      
</xtml>

<xtml ns="bart_screen">

  <Component id="ShowScreen" type="data.Data" execution="native">
    <Param name="PageID" />
    <NativeHelper name="ByPage" t="object.RunMethod" Method="Control">
      <Var name="_PageParams" t="data.Empty" />
      <Object t="data.FirstSucceeding">
        <Var name="UrlMainPage" t="bart_url.UrlAttribute" Attribute="mainpage" />
        <Item t="xtml.RunXtmlByComponentId" ComponentID="%$ComponentID%" >
          <Var name="ComponentID" value="%$_AppContext/AppXtml/../../@id%.%$UrlMainPage%" />
          <Condition t="yesno.And">
            <Item t="yesno.NotEmpty" Value="%$UrlMainPage%" />
            <Item t="xtml.ComponentExists" ComponentID="%$ComponentID%" />
          </Condition>
        </Item>
        <Item t="object.RunMethod" Object="%$_AppContext%" Method="MainPage" Condition="%$PageID% == ''" />
        <Item t="bart.PageByID">
          <PageID t="text.FirstSucceeding">
            <Item value="%$PageID%" />
            <Item value="%$UrlMainPage%" />
            <Item value="%$_AppContext/MainPageID%" />
            <Item value="main" />
          </PageID>
        </Item>
      </Object>
    </NativeHelper>
    <NativeHelper name="RunAppFeatures" t="bart.RunApplicationFeatures" Phase="AfterShow" />
  </Component>

</xtml>

<xtml ns="bart_server">

  <Type id="ServerAdapter" />


  <Component id="LoadNode" type="data_async.Data" execution="native">
      <Param name="ID" essential="true"/>
      <Param name="ContentType" type="dynamic_enum" Options="%$_AppContext/ContentTypes/ID%" essential="true"/>
    </Component>


  <Component id="ServerAdapter">
    <Param name="Name" />
    <Param name="InMemory" type="data.Boolean" />
    <Param name="DB" />
    <Param name="LoadNode" type="data_async.Data" script="true" paramVars="ID,ContentType"/>

    <xtml t="xtml.CopyAllParams"/>
  </Component>

  
  <Component id="MemoryXmlDb" type="bart_server.ServerAdapter">
    <Param name="DB"/>
    <Param name="Counters"/>
    <Param name="OnDBChange" type="action.Action" script="true" />
    <xtml t="bart_server.ServerAdapter" Name="memory xml db" InMemory="true" DB="%$DB%">
     <LoadNode t="data_async.SyncData">
       <Query t="data.Pipeline">
          <Item value="%$DB%"/>
          <Item t="xml.XPath" XPath="%$ContentType%/*[@id='%$ID%']" />
          <Item t="data.IfThenElse" If="%$_BartReadOnlyTest%" Then="%%">
            <Else t="data.Duplicate" />
          </Item>     
       </Query>
     </LoadNode>
    </xtml>
  </Component>

</xtml>

<xtml ns="bart_usage">

  <Component id="JBartUsage" type="usage.Usage" jbart="true">
    <Param name="Name"/>
    <Param name="Page" />
    <Param name="RunOnControl" type="uiaction.UsageAction" script="true"/>
    <Param name="ExpectedResult" type="usage.PassesUsage" script="true" />
    <Param name="UiPref">
      <Field t="bart_dt.EditUIPref" />
    </Param>
    <Param name="CleanAfter" type="action.Action" script="true"/>
    <Param name="RunInAllTests" type="data.Boolean"/>
    <Param name="AssignedTo" />
    <xtml t="ui.ControlUsage">
      <Var name="_TestObject" t="object.Object" />
      <Var name="_AsyncCallback" t="data.Empty" />
      <Control t="ui.ControlWithAction">
        <Var name="_TestUnit" value="%$_WidgetXml/bart_dev/db/bart_unit/bart_unit%"/>
        <RunBeforeControl t="xtml.LoadComponents" Components="%$_TestUnit/Component%" Namespace="%$_TestUnit/@id%" ClearNSBefore="true" />
        <Control t="jbart_api.ShowWidget" WidgetXml="%$_WidgetXml%" Page="%$Page%" RunAfterControlWithTimer="false">
          <RunAfter t="object.SetProperty" Object="%$_TestObject%" Property="BartContext" Value="%$_AppContext%" />
        </Control>
      </Control>
      <RunOnControl t="xtml.UseParam" Param="RunOnControl" />
      <ExpectedResult t="xtml.UseParam" Param="ExpectedResult">
        <Var name="_AppContext" value="%$_TestObject/BartContext%" />
        <Var name="_GlobalVars" t="bart.GlobalVars" />
        <Var name="Action" t="bart_resource.ResourcesToGlobalVars" />
      </ExpectedResult>
      <CleanAfter t="xtml.UseParam" Param="CleanAfter" />
    </xtml>
  </Component>
  
  <Component id="BartDataUsage" type="usage.Usage" deprecated="true" light="false">
    <Param name="Name"/>
    <Param name="Result" type="data.Data" script="true"/>
    <Param name="ExpectedResult" type="usage.PassesUsage" script="true" />
    <Param name="RunInAllTests" type="data.Boolean"/>
    <Param name="AssignedTo" />
    <Param name="UserAgent" type="enum" Options="firefox,iphone,ipad,android,chrome,msie 7,msie 8,msie 9"/>
    <xtml t="usage.DataUsage" UserAgent="%$UserAgent%">
      <Var name="_ServerAdapter" t="bart_server.MemoryXmlDb" DB="%$_TestDB%" />
      <Var name="_AppContext" t="bart.Context"/>
      <Var name="_GlobalVars" t="bart.GlobalVars"/>
      <Var name="MainUnit" value="%$_TestDB/bart_unit/bart_unit[1]/@id%" />
      <RunBefore t="action_async.RunAsync">
        <Action t="bart.LoadAllUnits" MainUnit="%$MainUnit%"/>
      </RunBefore>
      <Result t="xtml.UseParam" Param="Result">
        <Var name="BartAppXtml" value="%$_AppContext/AppXtml%" />
      </Result>
      <ExpectedResult t="xtml.UseParam" Param="ExpectedResult" />
    </xtml>
  </Component>

  <Component id="GalleryItemToUsageControl" type="ui.Control">
    <Param name="GalleryItem" />
    <Param name="Test" />
    <xtml t="ui.IfThenElse" If="%$Test/@type%=='design time'">
      <Var name="BaseUrl" t="text.FirstSucceeding">
          <Item value="%$Test/@url%" />
          <Item value="%$GalleryItem/url/@url%" />
      </Var>
      <Var name="User" t="text.FirstSucceeding">
          <Item value="%$Test/@user%" />
          <Item value="%$GalleryItem/user/@user%" />
      </Var>
      <Else t="bart_usage.Main" DefaultUrl="%$BaseUrl%" User="%$User%">
        <DB t="data.IfThenElse" Then="%$GalleryItem/bart_dev/db%">
          <If t="yesno.IsEmpty">
            <Value t="xml.XmlToText" Data="%$Test/UIPref%" />
          </If>
          <Else t="xml.WithChanges" Xml="%$GalleryItem/bart_dev/db%">
            <Change t="xml.ReplaceElement" Element="%!bart_unit/bart_unit[1]/UIPref%">
              <NewElement t="data.Duplicate" Data="%$Test/UIPref%" />
            </Change>
          </Else>
        </DB>
      </Else>
    </xtml>
  </Component>
  
  <Component id="AppDevToUsageControl" type="ui.Control">
    <Param name="TestIndex" />
      <xtml t="bart_usage.Main">
        <Var name="_AppDev" value="%$_BartDevDtContext/DevUnits%" /> 
        <Var name="TestXml" value="%$_AppDev/AutoTests/Test[{$TestIndex}]%" />
        <DB value="%$_AppDev/db%" />
        <DefaultUrl value="%$TestXml/@url%" />
        <User value="%$TestXml/@user%" />
      </xtml>
  </Component>
  
  <Component id="Main" type="ui.Control">
    <Param name="DB" />
    <Param name="DefaultUrl" />
    <Param name="User" />
    <xtml t="ui_async.Control">
      <Var name="_ServerAdapter" t="bart_server.MemoryXmlDb" DB="%$DB%" />
      <Var name="_SimDB" value="%$DB%" />
      <Var name="_AppContext" t="bart.Context">
        <Url t="bart_url.InMemoryUrl" DefaultUrl="%$DefaultUrl%" />
      </Var>
      <Var name="_GlobalVars" t="bart.GlobalVars"/>
      <Var name="_UIPref" t="bart.UIPreferences" AlsoInCookie="false"/>
      <Var name="BaseUrl" t="ui.BaseUrl"/>
      <AsyncAction t="action_async.RunActions">
        <Action t="bart.LoadAllUnits" MainUnit="%$DB/bart_unit/bart_unit[1]/@id%"/>
      </AsyncAction>
      <Control t="ui.ControlInObject" Object="%$_AppContext%">
        <Control t="bart_screen.ShowScreen" />
      </Control>
      <ControlForLoading t="ui_async.LoadingControl" />
    </xtml>
  </Component>


</xtml>

<xtml ns="data_async">

<Type id="Data" />
<Type id="MergeInput" />
<Type id="ApiCall" />

<Component id="Rest" type="data_async.Data,data_async.ApiCall" execution="native">
      <Param name="SampleResult" light="false"/>
      <Param name="Url" essential="true"/>
      <Param name="PostData"/>
      <Param name="Method" type="enum" Options="GET,POST" essential="true">
        <Default value="GET"/>
      </Param>
      <Param name="ResultType" type="enum" Options=",xml,json,json to xml" Default="" />
      <Param name="ConvertResult" essential="true">
        <Default value="%%"/>
      </Param>
      <Param name="DetectError"/>
      <Param name="ContentType" Default="application/xml; charset=UTF-8"/>
      <Param name="ID" description="aborts all previous calls with this id"/>
      <Param name="TunnelRequest" type="data.Boolean"/>
      <Param name="ActionOnResult" type="action.Action" script="true" description="Fix the data"/>
    </Component>

<Component id="CurrentGeoLocation" type="data_async.Data" execution="native" description="Returns the current geo location using GPS">
</Component>

<Component id="JBartJsonP" type="data_async.Data" execution="native" description="If you to wish to implement the service, return a javascript that calls aa_jsonp_callback(data,id,url)">
      <Param name="SampleResult"/>
      <Param name="Url" essential="true"/>
      <Param name="OnFailure" type="action.Action" script="true"/>
      <Param name="ResultType" type="enum" Options="xml,html,text,json,json to xml"/>
      <Param name="OnSuccess" type="action.Action" script="true" hidden="true"/>
 </Component>

<Component id="SyncData" type="data_async.Data" execution="native" hidden="true">
  <Param name="Query" essential="true" />
</Component>

<Component id="SyncDataOnNextTimer" type="data_async.Data" execution="native" hidden="true">
  <Param name="Query" essential="true" />
</Component>

<Component id="AsyncDataOnNextTimer" type="data_async.Data" execution="native" hidden="true">
  <Param name="Query" type="data_async.Data" essential="true" />
</Component>

<Component id="Calculate" type="data_async.Data" execution="native">
  <Param name="Query" essential="true"/>
</Component>

<Component id="UrlGet" type="data_async.Data" execution="native">
  <Param name="Url" essential="true" />
  <Param name="ResultType" type="enum" Options="xml,html,text" essential="true" />
  <Param name="TunnelRequest" type="data.Boolean"/>
  <Param name="TunnelCookies" />
  <Param name="OnFailure" type="action.Action" script="true"/>
  <Param name="OnSuccess" type="action.Action" script="true"/>
  <Param name="CacheResult" type="data.Boolean"/>
  <Param name="Headers" description="Http format. E.g: Accept: application/xml\n Content-Type: application/xml\n }"/>
  
  <NativeHelper name="TunnelRequest" t="data_async.UrlPost" Url="get.php" ResultType="%$ResultType%">
      <PostData t="server.PostData" Name="contents" Value="%$Url%"/>
      <PostData t="server.PostData" Name="cookies" Value="%$TunnelCookies%"/>
      <PostData t="server.PostData" Name="headers" Value="%$Headers%"/>
      <OnSuccess t="xtml.UseParam" Param="OnSuccess"/>
  </NativeHelper>
</Component>

<Component id="UrlPost" type="data_async.Data" execution="native">
  <Param name="Url" essential="true" />
  <Param name="PostData" type="server.PostData[]" essential="true" />
  <Param name="ResultType" type="enum" Options="xml,html,text"/>
  <Param name="OnSuccess" type="action.Action" script="true"/>
  <Param name="ContentType" Default="application/x-www-form-urlencoded; charset=UTF-8"/>
</Component>

<Component id="Parallel" type="data_async.Data" execution="native">
  <Param name="Input" type="data_async.MergeInput[]" />
  <Param name="Result" />
</Component>

<Component id="MergeInput" type="data_async.MergeInput" execution="native">
  <Param name="Name" />
  <Param name="Query" type="data_async.Data" />
</Component>

<Component id="CurrentGeoLocation" type="data_async.Data" execution="native" />

</xtml>

<xtml ns="data_items">

 <Type id="Items"/>
 <Type id="Aspect"/>

 <Component id="Writable" type="data_items.Aspect" execution="native">
   <Param name="CanAcceptExternal" type="data.Boolean" script="true"/>
   <Param name="DeleteItem" type="action.Action" script="true"/>
   <Param name="SubsetForNewItem" type="data.Data" script="true"/>
   <Param name="NewValueFromDetached" type="data.Data" script="true"/>
 </Component>

 <Component id="Filter" type="data_items.Aspect" execution="native">
   <Param name="Filter" type="data.Boolean" script="true" essential="true" />
 </Component>
 
 <Component id="EasyWritable" type="data_items.Aspect">
   <Param name="DeleteItem" type="action.Action" script="true"/>
   <Param name="NewDetachedItem" type="data.Data" script="true"/>
   <Param name="SaveNewItem" type="action_async.Action" script="true"/>
   <Param name="NewValueFromDetached" type="data.Data" script="true" Default="%%"/>
   <xtml t="data_items.Writable">
     <DeleteItem t="xtml.UseParam" Param="DeleteItem"/>
     <SubsetForNewItem t="object.Object">
       <Property name="Items" t="xtml.UseParam" Param="NewDetachedItem"/>
       <Property name="ParentItems" value="%$_This%"/>
       <Method name="Save" t="action_async.RunActions">
         <Action t="xtml.UseParam" Param="SaveNewItem" Input="%$_This/Items%">
           <Var name="ParentItems" value="%$_This/ParentItems%" />
         </Action>
         <Action t="object.AddToProperty" Object="%$_This/ParentItems%" Property="Items">
           <Value t="xtml.UseParam" Param="NewValueFromDetached" Input="%$_This/Items%" />
         </Action>
       </Method>
     </SubsetForNewItem>
     <NewValueFromDetached t="xtml.UseParam" Param="NewValueFromDetached" />
   </xtml>
 </Component>
 
 <Component id="NextLevel" type="data_items.Aspect" execution="native">
   <Param name="NextLevel" type="data_items.Items" script="true" essential="true" />
 </Component>
 <Component id="RecursiveNextLevel" type="data_items.Aspect" execution="native">
   <Param name="NextLevel" type="data_items.Items" script="true" essential="true" />
 </Component>
 
  <Component id="OverrideItems" type="data_items.Items" execution="native">
    <Param name="Items" type="data_items.Items" essential="true" />
    <Param name="Aspect" type="data.ItemsAspect[]" script="true" essential="true" /> 
  </Component>

  <Component id="Aspects" type="data_items.Aspect" execution="native">
    <Param name="Aspect" type="data_items.Aspect[]" script="true" essential="true" />
  </Component>
  
  <Component id="AfterSave" type="data_items.Aspect">
    <Param name="AfterSavingItem" type="action.Action" paramVars="OriginalData" script="true" />
    <Param name="AfterSavingNewItem" type="action.Action" paramVars="OriginalData" script="true" />
    <xtml t="action.RunActions">
      <Action t="object.SetMethod" Object="%$_Items%" Method="AfterSavingItem">
        <Xtml t="xtml.UseParam" Param="AfterSavingItem" />
      </Action>
      <Action t="object.SetMethod" Object="%$_Items%" Method="AfterSavingNewItem">
        <Xtml t="xtml.UseParam" Param="AfterSavingNewItem" />
      </Action>
    </xtml>
  </Component>
  
  <Component id="DoSave" type="action_async.Action" execution="native">
    <Param name="DataItems" type="data_items.Items" essential="true" />
    <Param name="Fields" type="field.Fields" essential="true"  />
    <Param name="OnSuccess" type="action.Action" script="true" />
  </Component>
  
  <Component id="LoadFullItem" type="action_async.Action" execution="native">
    <Param name="Item" essential="true" />
    <Param name="DataItems" description="advanced. needed only if the node cannot load itself"/>
  </Component>
  
  <Type id="DataItemsNewItem" />
  
  <Component id="AddXmlItem" type="data_items.DataItemsNewItem" execution="native">
    <Param name="Parent" Default="%%"/>
    <Param name="NewItem" codemirror="true" codemirrorType="xml" Default="&lt;xml /&gt;"/>
  </Component>
  
</xtml>
<xtml ns="dataview">

<Type id="DataHolder"/>
<Type id="DataView"/>
<Type id="Filter"/>
<Type id="GroupBy"/>
<Type id="Ranges"/>
<Type id="Presentation"/>

  <Component id="Filter" type="dataview.Filter">
   <Param name="FieldID" type="dynamic_enum" recalc_options="true">
     <Options t="dataview.FieldIDs" />
   </Param>
   <Param name="Expression" description="1-10,21-73"/>
   <Param name="Operator" enum="=,Like,&gt;,&lt;"><Default value="="/></Param>
   <xtml value="%$FieldId% %$Operator% '%$Expression%'"/>
  </Component>

<!-- Preview -->
 
  <Component id="FieldIDs" type="data.Data">
    <xtml t="data.FirstSucceeding">
      <Item value="%$DataHolderCntr/DataHolder/Fields/Id%">
        <Var name="Preview" t="dataview.DataViewPreview"/>
        <Var name="DataHolderCntr" t="xtml.VariableValueFromContext" Variable="DataHolderCntr" ScriptAndContext="%$Preview%" />
        <Var name="Cntr" t="xtml.VariableValueFromContext" Variable="_Cntr" ScriptAndContext="%$Preview%" />
      </Item>
    </xtml>
  </Component>

  <Component id="DataViewPreview" type="data.Data">
    <xtml t="aaeditor.CalcLocalPreviewData">
        <Var name="ProbeAt" value="%$_Xtml%"/>
        <MainCircuitRunner t="bart_api.ShowPage" Page="%$PageXtml/@ID%"/>
        <State t="aaeditor.State" TreeXtml="%$PageXtml%">
          <SelectedInTree t="aaeditor.TreeItemData" Xtml="%$ProbeAt%"/>
        </State>
    </xtml>
  </Component>

 </xtml>

<xtml ns="dialog" deprecated="true">

 <Type id="Dialog" Icon="%$_Images%/studio/dialog1616.gif"/>
 <Type id="DialogStyle" />
 <Type id="DialogButton" />

 <Component id="OpenDialog" type="action.Action" execution="xtml" light="false">
  <Param name="Dialog" type="dialog.Dialog" script="true" essential="true">
   <Default t="dialog.Dialog" />
  </Param>
  <xtml t="xtml.UseParam" Param="Dialog">
   <Var name="OpenDialog" value="true" />
  </xtml>
 </Component>

 <Component id="Dialog" type="dialog.Dialog" execution="xtml">
  <Param name="Title" essential="true"/>
  <Param name="DialogData" script="true">
   <Default value="%%" />
  </Param>
  <Param name="Content" essential="true" type="ui.Control" script="true" />
  <Param name="AutoFocus" script="true" />
  <Param name="RunOnOK" essential="true" type="action.Action" script="true" />
  <Param name="RunOnClose" type="action.Action" script="true" />
  <Param name="RunOnDelete" type="action.Action" script="true" />
  <Param name="CloseOnEnter" type="data.Boolean"><Default value="true" /></Param>
  <Param name="CloseOnEsc" type="data.Boolean"><Default value="true" /></Param>
  <Param name="Style" type="dialog.DialogStyle" script="true" paramVars="DialogContext"><Default t="dialog.JQueryDialog" /></Param>
  <Param name="Buttons" type="enum">
   <Default value="OK,Cancel" />
   <value>OK,Cancel</value>
   <value>Close</value>
   <value>OK,Cancel,Delete</value>
   <value>OK,Cancel,Apply</value>
   <value>None</value>
  </Param>
  <Param name="Height" />
  <Param name="Width" />
  <Param name="OKLabel"><Default value="OK" /></Param>
  <Param name="CancelLabel"><Default value="Cancel" /></Param>
  <Param name="Direction" Default="Left to Right" />
  <Param name="FullScreen" type="data.Boolean" />
  <Param name="LimitHeightToScreenSize" type="data.Boolean"><Default value="true"/></Param>
  <Param name="NoTransaction" type="data.Boolean"><Default value="true"/></Param>
  <Param name="AlwaysLTR" type="data.Boolean" />
  <Param name="RunOnCancel" type="action.Action" script="true" />
  <Param name="Validations" type="ui.Validation" script="true" />
  <Param name="BeforeClose" type="action.Action" script="true" />
  <Param name="DialogButton" type="dialog.DialogButton[]" />
  <Param name="ScreenOpacity" description="greyness of the cover behind the dialog"><Default value="0.8"/></Param>  
  <xtml t="xtml.UseParam" Param="Style" >
   <Var name="DialogOriginalData" />
   <Var name="DialogTransactionData" t="xtml.UseParam" Param="DialogData" />
   <Var name="DialogWorkingData" t="data.IfThenElse" If="%$NoTransaction%">
    <Then value="%$DialogTransactionData%" />
    <Else t="data.Duplicate" Data="%$DialogTransactionData%" />
   </Var>
   <Var name="OriginalControlElement" value="%$ControlElement%" />
   <Var name="DialogContext" t="xtml.Params">
    <Param name="Height" value="%$Height%" />
    <Param name="Width" value="%$Width%" />
    <Param name="Title" t="text.MultiLang" Pattern="%$Title%" Dynamic="true" />
    <Param name="Buttons" value="%$Buttons%" />
    <Param name="OpenDialog" value="%$OpenDialog%" />
    <Param name="OKLabel" t="text.MultiLang" Dyanmic="true" Pattern="%$OKLabel%" />
    <Param name="CancelLabel" t="text.MultiLang" Dyanmic="true" Pattern="%$CancelLabel%" />
    <Param name="CloseOnEnter" value="%$CloseOnEnter%" />
    <Param name="CloseOnEsc" value="%$CloseOnEsc%" />
    <Param name="Direction" value="%$Direction%" />
    <Param name="FullScreen" value="%$FullScreen%" />
    <Param name="AlwaysLTR" value="%$AlwaysLTR%" />
    <Param name="Content" t="xtml.UseParam" Param="Content" Input="%$DialogWorkingData%">
     <Var name="AAControlMode" value="readwrite" />
     <Var name="_InDialog" value="true" />
    </Param>
    <Param name="ScreenOpacity" value="%$ScreenOpacity%" />
    <Param name="LimitHeightToScreenSize" value="%$LimitHeightToScreenSize%" />
    <Param name="DialogButtons" value="%$DialogButton%" />
    <ScriptParam name="OnOK" t="action.RunActions">
     <Var name="ControlElement" value="%$OriginalControlElement%" />
     <Action t="action.WriteValue" To="%$DialogTransactionData%" Value="%$DialogWorkingData%">
      <Condition t="yesno.Not" Of="%$NoTransaction%" />
     </Action>
     <Action t="xtml.UseParam" Param="RunOnOK" Data="%$DialogWorkingData%">
       <Var name="OriginalInput" value="%$DialogOriginalData%" />
       <Var name="_DialogContent" value="%$DialogContext/Content%" />
       <Var1 name="DialogContext" t="data.Empty" />
     </Action>
     <Action t="xtml.UseParam" Param="RunOnClose" Data="%$DialogOriginalData%" />
    </ScriptParam>
    <ScriptParam name="OnCancel" t="action.RunActions">
      <Var name="ControlElement" value="%$OriginalControlElement%" />
      <Action t="xtml.UseParam" Param="RunOnClose" Data="%$DialogOriginalData%"/>
      <Action t="xtml.UseParam" Param="RunOnCancel" Data="%$DialogOriginalData%" />
    </ScriptParam>
    <ScriptParam name="OnDelete" t="xtml.UseParam" Param="RunOnDelete" Input="%$DialogOriginalData%">
     <Var name="ControlElement" value="%$OriginalControlElement%" />
    </ScriptParam>
    <ScriptParam name="AutoFocus" t="xtml.UseParam" Param="AutoFocus" />
    <ScriptParam name="Validations" t="xtml.UseParam" Param="Validations" Input="%$DialogWorkingData%" />
    <ScriptParam name="BeforeClose" t="xtml.UseParam" Param="BeforeClose" Input="%$DialogWorkingData%" />
    <ScriptParam name="DisableClose" t="yesno.Not">
      <Of t="validation.PassingValidations" />
    </ScriptParam>
   </Var>
  </xtml>
 </Component>

 <Component id="DialogContent" type="ui.Control">
  <Param name="Dialog" type="dialog.Dialog" script="true" />
  <Param name="Draggable" type="data.Boolean">
   <Default value="true" />
  </Param>
  <xtml t="xml.WithChanges">
   <Xml t="xtml.UseParam" Param="Dialog">
    <Var name="OpenDialog" value="false" />
   </Xml>
   <Change t="ui.ExecJQuery" Expression=".draggable({ cancel: '.dialog_body'});" Condition="%$Draggable%" />
  </xtml>
 </Component>

 <Component id="JQueryDialog" type="dialog.DialogStyle" execution="xtml" databind="true">
   <xtml t="ui.ControlWithAction" >
    <Control value="%$Dialog%" />
    <RunBeforeControl Condition="%$DialogContext/OpenDialog%" t="dialog.PopUpDialog" Dialog="%$Dialog%" ScreenColor="gray" ScreenOpacity="%$DialogContext/ScreenOpacity%">
      <RunAfterPopup t="uiaction.Focus">
       <RunOn t="data.FirstSucceeding">
        <Item t="xtml.RunXtml" Xtml="%$DialogContext/AutoFocus%" />
        <Item t="uiaction.FindFirstInput" />
       </RunOn>
      </RunAfterPopup>
     </RunBeforeControl>
   <Var name="FocusCls" t="ui.AttachGlobalCss" Css="#this *:focus { outline: none; }" Name="focus_no_outline" />
   <Var name="Dialog" t="xml.WithChanges" >
    <Xml t="ui.Html" DynamicContent="true">
     <table class="dialog_box ajaxart dialog_content_table %$FocusCls%" style="border: none" cellspacing="0" cellpadding="0">
        <tr class="dialog_right_shadow_tr"  ><th class="dialog_shadow_extra_th"/>
        <th rowspan="6" class="dialog_right_shadow_th"  >
        <div class="dialog_right_shadow" />
        </th>
        </tr>
      <tr>
       <td class="dialog_title" style="background: url(%$_Images%/css/dialog_caption.png);">
        <div class="dialog_title_close" />
        <div class="dialog_title_text">Title</div>
       </td>
      </tr>
      <tr class="dialog_body">
       <td>
        <div class="dialog_inner_body">
         <div class="dialog_content" />
         <div class="message_bar_placeholder" />
        </div>
       </td>
      </tr>
      <tr>
       <td class="dialog_footer">
        <table cellspacing="0" cellpading="0" ><tr class="aa_dialog_buttons_top">
          <td><span class="okbutton_placeholder" /></td>
          <td><span class="buttons_seperator"/> </td>
          <td><span class="cancelbutton_placeholder" /></td>
          <td><span class="buttons_seperator"/> </td>
          <td><span class="delbutton_placeholder" /></td>
          <td><span class="applybutton_placeholder" /></td>
        </tr></table>
       </td>
      </tr>

<tr class="dialog_bottom_shadow" ><td >
<span class="dialog_bottom_outer" >
  <span class="dialog_bottom_inner" ></span>
</span>
</td></tr>

     </table>
    </Xml>
    <Var name="OKButton" t="ui.OKButton" Text="%$DialogContext/OKLabel%" Name="dialog_ok_button" Class="dialog_button ok_button"  >
      <Style t="dialog.DialogButtonStyle" />
      <ExtraValidations t="xtml.RunXtml" Xtml="%$DialogContext/Validations%"  />
     <OnClick t="action_async.RunAsync">
      <Condition t="yesno.Not">
        <Of t="object.RunMethod" Object="%$DialogContext%" Method="DisableClose" /> 
        <RunOn t="dialog.TopDialogContent" />
      </Condition>
      <Action t="xtml.RunXtml" Xtml="%$DialogContext/BeforeClose%">
        <RunOn1 t="dialog.TopDialogContent" />
      </Action>
      <OnSuccess t="dialog.CloseDialog" CloseType="OK" IgnoreAAEditor="false" />
     </OnClick>
    </Var>
    <Change t="xml.AddChildren" CloneChildren="false">
     <Data t="ui.ElementOfClass" Cls="message_bar_placeholder" />
     <Children t="ui.MessageBar" Type="validation" />
    </Change>
    <Change t="xml.AddChildren">
     <Data t="ui.ElementOfClass" Cls="aa_dialog_buttons_top" />
     <Children t="data.Pipeline">
       <Item value="%$DialogContext/DialogButtons%" />
       <Item t="xml.WithChanges">
         <Xml t="ui.Html">
           <td/>
         </Xml>
         <Change t="xml.AddChildren">
           <Children t="object.RunMethod" Method="Control" />
         </Change>
       </Item>
     </Children>
    </Change>
    <Change t="xml.AddChildren" CloneChildren="false" Children="%$OKButton%">
     <Condition t="yesno.Contains" Data="%$DialogContext/Buttons%">
       <Text value="OK"/>
     </Condition>
     <Data t="ui.ElementOfClass" Cls="okbutton_placeholder" />
    </Change>
    <Change t="xml.AddChildren" CloneChildren="false">
     <Condition t="yesno.Contains" Data="%$DialogContext/Buttons%">
       <Text value="Cancel"/>
     </Condition>
     <Data t="ui.ElementOfClass" Cls="cancelbutton_placeholder" />
     <Children t="ui.ButtonOld" Text="%$DialogContext/CancelLabel%" Class="CloseButton dialog_button ">
      <OnClick t="dialog.CloseDialog" CloseType="Cancel" IgnoreAAEditor="false"/>
      <Style t="dialog.DialogButtonStyle" />
     </Children>
    </Change>
    <Change t="xml.AddChildren" CloneChildren="false">
     <Condition t="yesno.Contains" Data="%$DialogContext/Buttons%">
       <Text value="Close"/>
     </Condition>
     <Data t="ui.ElementOfClass" Cls="cancelbutton_placeholder" />
     <Children t="ui.ButtonOld" Text="Close" Class="dialog_button CloseButton">
      <Style t="dialog.DialogButtonStyle" />
      <OnClick t="action.RunActions">
        <Condition t="yesno.Not">
          <Of t="object.RunMethod" Object="%$DialogContext%" Method="DisableClose" />
          <RunOn t="dialog.TopDialogContent" />
        </Condition>
        <Action t="xtml.RunXtml" Xtml="%$DialogContext/BeforeClose%">
          <RunOn t="dialog.TopDialogContent" />
        </Action>
        <Action t="dialog.CloseDialog" CloseType="OK" IgnoreAAEditor="false"/>
      </OnClick>
     </Children>
    </Change>
    <Change t="xml.AddChildren" CloneChildren="false">
     <Condition t="yesno.Contains" AllText="%$DialogContext/Buttons%">
      <Text value="Delete"/>
     </Condition>
     <Data t="ui.ElementOfClass" Cls="delbutton_placeholder" />
     <Children t="ui.ButtonOld" Text="Delete" Class="dialog_button">
      <Style t="dialog.DialogButtonStyle" />
      <OnClick t="action.RunActions">
       <Action t="dialog.CloseDialog" CloseType="Delete" IgnoreAAEditor="false"/>
      </OnClick>
     </Children>
    </Change>
    <Change t="xml.AddChildren" CloneChildren="false">
     <Condition t="yesno.Contains" AllText="%$DialogContext/Buttons%">
      <Text value="Apply"/>
     </Condition>
     <Data t="ui.ElementOfClass" Cls="applybutton_placeholder" />
     <Children t="ui.ButtonOld" Text="Apply" Class="dialog_button">
      <Style t="dialog.DialogButtonStyle" />
      <OnClick t="action.RunActions">
       <Action t="xtml.RunXtml" Xtml="%$DialogContext/OnOK%" />
      </OnClick>
     </Children>
    </Change>
    <Change t="ui.SetCssProperty" Property="height">
     <Data t="ui.ElementOfClass" Cls="dialog_box" />
     <Value t="data.IfThenElse" If="%$DialogContext/FullScreen%" Else="%$DialogContext/Height%" Then="95%" />
    </Change>
    <Change t="ui.SetCssProperty" Property="width">
     <Data t="ui.ElementOfClass" Cls="dialog_box" />
     <Value t="data.IfThenElse" If="%$DialogContext/FullScreen%" Else="%$DialogContext/Width%" Then="95%" />
    </Change>
    <Change t="ui.SetCssProperty" Property="max-height" Condition="%$DialogContext/LimitHeightToScreenSize%">
     <Data t="ui.ElementOfClass" Cls="dialog_inner_body" />
     <Value t="ui.ScreenSize" Axis="height" Margin="120" AsHtmlString="true" />
    </Change>
    <Change t="ui.SetCssProperty" Property="max-width">
     <Data t="ui.ElementOfClass" Cls="dialog_inner_body" />
     <Value t="ui.ScreenSize" Axis="width" Margin="50" AsHtmlString="true" />
    </Change>
    <Change t="xml.UpdateInnerText" NewValue="%$DialogContext/Title%">
     <Data t="ui.ElementOfClass" Cls="dialog_title_text" />
    </Change>
    <Change t="xml.AddChildren" CloneChildren="false" Children="%$DialogContext/Content%">
     <Data t="ui.ElementOfClass" Cls="dialog_content" />
    </Change>
    <Change t="uiaction.AddClass" RunOn="%%" Cls="right2left">
     <Condition t="yesno.EqualsTo" Data="%$DialogContext/Direction%" To="Right to Left" />
    </Change>
    <Change t="ui.OnKeyDown" RunOn="%%">
     <Condition t="yesno.EqualsTo" Data="%$DialogContext/CloseOnEnter%" To="true" />
      <Action t="uiaction.ButtonClick">
        <RunOn value="%$OKButton%" />
        <Condition t="yesno.And">
          <Item t="yesno.EqualsTo" Data="%$KeyPressed%" To="enter" />
          <Item t="yesno.Not" Of="%$EventTargetIsTextArea%" />
        </Condition>
     </Action>
    </Change>
    <Change t="xml.AddChildren" CloneChildren="false">
     <Data t="ui.ElementOfClass" Cls="dialog_title_close" />
     <Children t="ui.ButtonOld" Image="%$_Images%/close.png" Class="dialog_close_image" >
      <OnClick t="dialog.CloseDialog" CloseType="Cancel" IgnoreAAEditor="false"/>
      <Style t="ui.ButtonAsHyperlink" />
     </Children>
    </Change>
    <Change1 t="ui.ExecJQuery"
     Expression=".keydown(function(event){
        if(event.keyCode == 13) {
          var ok_button = jQuery(this).find('#dialog_ok_button');
          if (ok_button.length > 0)
            ajaxart_runevent(ok_button[0],'ButtonContext','OnClick')
        } 
      });">
     <Condition t="yesno.EqualsTo" Data="%$DialogContext/CloseOnEnter%" To="true" />
    </Change1>
    <Change t="ui.ExecJQuery"
     Expression=".keydown(function(event){
        if(event.keyCode == 27) {
         ajaxart_runevent(this,'DialogContext','OnCancel');
         aa_remove(ajaxart.dialog.closeDialog(this),true);
        } 
      });" >
       <Condition t="yesno.EqualsTo" Data="%$DialogContext/CloseOnEsc%" To="true" />
      </Change>
   </Var>
  </xtml>
 </Component>

 <Component id="PopUpDialog" type="action.Action" execution="native" hidden="true" light="false">
  <Param name="Dialog" />
  <Param name="ScreenColor" />
  <Param name="ScreenOpacity" />
  <Param name="RunAfterPopup" type="action.Action" script="true" />
  <Param name="AlwaysLTR" type="data.Boolean">
   <Default value="%$DialogContext/AlwaysLTR%" />
  </Param>
 </Component>

 <Component id="CloseDialog" type="action.Action" execution="native">
  <Param name="CloseType" type="enum">
   <Default value="Cancel" />
   <value>OK</value>
   <value>Cancel</value>
   <value>Delete</value>
  </Param>
  <Param name="IgnoreAAEditor" type="data.Boolean"><Default value="true"/></Param>
 </Component>

 <Component id="TopDialogContent" type="data.Data" execution="native">
  <Param name="Part" type="enum" Default="Content" Options="Content,Title,Data,All"/>
 </Component>

 <Component id="ContentsOfOpenPopup" type="ui.Control" execution="native" />

 <Component id="SingleQuestionDialog" type="dialog.Dialog">
  <Param name="Title" />
  <Param name="InitialValue" />
  <Param name="Question" />
  <Param name="RunOnOK" type="action.Action" script="true" />
  <xtml t="dialog.Dialog" Title="%$Title%">
   <RunOnOK t="xtml.UseParam" Param="RunOnOK" Input="%$DialogWorkingData%" />
   <DialogData t="data.WritableText" DefaultValue="%$InitialValue%" />
   <Content t="ui.List">
    <Control t="ui.Text">
      <Text t="text.MultiLang" Pattern="%$Question%" Dynamic="true"/>
    </Control>
    <Control t="ui.TextControl" Width="100%" />
   </Content>
  </xtml>
 </Component>

 <Component id="AskForConfirmation" type="action.Action">
      <Param name="Title"/>
      <Param name="Question"/>
      <Param name="RunOnOK" type="action.Action" script="true"/>
      <Param name="SkipConfirmation" type="data.Boolean" script="true"/>
      <Param name="YesLabel">
        <Default t="text.MultiLang" Pattern="Yes"/>
      </Param>
      <Param name="NoLabel">
        <Default t="text.MultiLang" Pattern="No"/>
      </Param>
      <Param name="Mode" type="enum">
        <Default value="other"/>
        <value>confirm delete</value>
        <value>other</value>
      </Param>
      <Param name="RunOnClose" type="action.Action" script="true"/>
      <Param name="RunOnCancel" type="action.Action" script="true"/>
      <Param name="QuestionAsHtml" type="data.Boolean"/>
      <Param name="DialogStyle" type="dialog_style.Style" script="true">
        <Default t="dialog_style.DefaultDialog" />
      </Param>
      <Param name="DialogFeature" type="dlg.DialogFeature[]" script="true" />
      <xtml t="action.IfThenElse">
        <If t="xtml.UseParam" Param="SkipConfirmation"/>
        <Then t="action.RunActions">
          <Action t="xtml.UseParam" Param="RunOnOK"/>
          <Action t="xtml.UseParam" Param="RunOnClose"/>
        </Then>
        <Else t="action.RunActions">
          <Var name="OriginalInput" />
          <Action t="dlg.OpenDialog">
            <Title value="%$Title%"/>
            <Contents Class="confirmation_question" t="ui.Text" HtmlContents="%$QuestionAsHtml%" style="display:block;font-size:13px;margin:6px 16px;">
              <Text t="text.Translate" Text="%$Question%"/>
            </Contents>
            <RunOnOK t="xtml.UseParam" Param="RunOnOK" Input="%$OriginalInput%"/>
            <Style t="xtml.UseParam" Param="DialogStyle" />
            <Feature t="dlg.HandleEvents">
              <OnClose t="xtml.UseParam" Param="RunOnClose"/>
              <OnCancel t="xtml.UseParam" Param="RunOnCancel"/>
            </Feature>
            <Feature t="dlg.OKOnEnter"/>
            <Feature t="dlg.CloseOnEsc"/>
            <Feature t="dlg.Buttons">
              <Buttons t="dlg.OkCancel">
                <OkLabel value="%$YesLabel%"/>
                <CancelLabel value="%$NoLabel%"/>
              </Buttons>
            </Feature>
            <Feature t="dlg.DialogClass">
              <CssClass value="confirm_delete">
                <Condition t="yesno.ItemsEqual" Item1="%$Mode%" Item2="confirm delete"/>
              </CssClass>
            </Feature>
            <Feature t="xtml.UseParamArray" Param="DialogFeature" />
          </Action>
        </Else>
      </xtml>
    </Component>
 
 <Component id="FixTopDialogPosition" type="action.Action" execution="native" light="false" />

  <Component id="CurrentPopupContains" type="data.Boolean">
      <Param name="Text" type="data.Data[]" script="true"/>
      <Param name="IgnoreCase" type="data.Boolean"><Default value="false"/></Param>
      <Param name="IgnoreOrder" type="data.Boolean"><Default value="false"/></Param>
      <xtml t="yesno.Contains" IgnoreCase="%$IgnoreCase%" IgnoreOrder="%$IgnoreOrder%" >
        <Data t="dialog.ContentsOfOpenPopup"/>
        <Text t="xtml.UseParamArray" Param="Text" />
      </xtml>
  </Component>
  <Component id="CurrentDialogContains" type="data.Boolean">
      <Param name="Text" type="data.Data[]" script="true"/>
      <Param name="IgnoreCase" type="data.Boolean"><Default value="false"/></Param>
      <Param name="IgnoreOrder" type="data.Boolean"><Default value="false"/></Param>
      <xtml t="yesno.Contains" IgnoreCase="%$IgnoreCase%" IgnoreOrder="%$IgnoreOrder%" >
        <Data t="dialog.TopDialogContent"/>
        <Text t="xtml.UseParamArray" Param="Text" />
      </xtml>
  </Component>

  <Component id="IsRuntimeDialog" type="data.Boolean" hidden="true" execution="native" />
  
  <Component id="DialogButtonStyle" type="ui.ButtonStyle" light="false">
      <xtml t="ui.StandardButton"/>
  </Component>

</xtml>
 
<xtml ns="picklist" jbart="true">

  <Type id="PopupStyle" />
  <Type id="ControlStyle" style="true" customPT="picklist.CustomStyle" />  
  
  <Type id="OptionsDefinition" />
  <Type id="Option" />
  <Type id="OptionCategory" />
  <Type id="OptionsProvider" />
  <Type id="Pattern" />
  <Type id="Picklist" />

  <Component id="Picklist" type="field_aspect.FieldType,picklist.Picklist">
    <Param name="Options" type="picklist.OptionsProvider" script="true" essential="true">
      <Default t="picklist.OptionsInplace" />
    </Param>
    <Param name="AllowEmptyValue" type="data.Boolean" boolfeature="true" Default="true"/>
    <Param name="AllowValueNotInOptions" type="data.Boolean" boolfeature="true" />
    <Param name="Multiple" type="data.Boolean" boolfeature="true" />
    <Param name="DoNotOpenFromInputArea" type="data.Boolean"/>
    <Param name="Mandatory" type="data.Boolean" boolfeature="true" />
    <Param name="RecalculateForEachCell" type="data.Boolean" boolfeature="true"/>
    <Param name="ControlStyle" type="picklist.ControlStyle" advanced="true" script="true">
      <Default t="picklist.JBartPicklist" />
    </Param>
    <Param name="PickTreePathSeparator" advanced="true" description="Used to distinguish between tree options that have the same name"/>
    <Param name="PopupFeature" type="uiaspect.Aspect[]" script="true" light="false" />
    
    <xtml t="field_aspect.Aspects">
      <FieldAspect t="field_aspect.Mandatory" Condition="%$Mandatory%" />
      <FieldAspect t="field_aspect.Picklist" Multiple="%$Multiple%" DoNotOpenFromInputArea="%$DoNotOpenFromInputArea%" AllowEmptyValue="%$AllowEmptyValue%" AllowValueNotInOptions="%$AllowValueNotInOptions%"
        RecalculateForEachCell="%$RecalculateForEachCell%" PickTreePathSeparator="%$PickTreePathSeparator%">
        <Options t="xtml.UseParam" Param="Options" />
        <ControlStyle t="xtml.UseParam" Param="ControlStyle"/>
      </FieldAspect>
    </xtml>
  </Component>

  <Component id="OptionsInplace" type="picklist.OptionsProvider">
    <Param name="Options" type="picklist.OptionsDefinition" script="true" essential="true" />
    <xtml t="xtml.UseParam" Param="Options" />
  </Component>

  <Component id="PopupItems" type="data.Data" hidden="true" execution="native" />

  <Component id="CustomPopup" type="picklist.PopupStyle">
      <Param name="Contents" type="ui.Page"/>
      <Param name="Style" type="dialog_style.Style">
        <Default t="dialog_style.DefaultPopup" />
      </Param>
      <Param name="Feature" type="dlg.DialogFeature[]" script="true"/>
      <Param name="DoNotLookInAllFields" type="data.Boolean"/>
      <Param name="LookIn" script="true"/>
      <Param name="KeyboardOpensPopup" type="data.Boolean" />
      <xtml t="field_aspect.Aspects">
        <FieldAspect t="field_aspect.SimpleInput"/>
        <FieldAspect t="field_aspect.PopupImage" ID="options">
          <Condition t="yesno.IsEmpty" Value="%$_Field/PupupImageCss%"/>
        </FieldAspect>
        <FieldAspect t="field_aspect.HoverCssClass"/>
        <FieldAspect t="field.OptionsFilter"/>
        <FieldAspect t="object.SetBooleanProperty" Object="%$_Field%" Property="KeyboardNotOpensPopup" >
          <Value t="yesno.Not" Of="%$KeyboardOpensPopup%" />
        </FieldAspect>
        <FieldAspect t="object.SetMethod" Object="%$_Field%" Method="OpenPopup">
           <Xtml t="dlg.OpenDialog" Title="" Style="%$Style%" LauncherElement="%$_Input%">
              <Contents t="ui.ShowPage" Page="%$Contents%">
                <PageParams t="ui.PageParams" ReadOnly="true">
                  <DataItems t="data_items.Items">
                    <Items t="data.Pipeline">
                      <Item t="picklist.PopupItems" />
                      <Item value="%source%"/>
                    </Items>
                  </DataItems>
                  <Aspect t="uiaspect.FastFind" HideExposedFilters="true"
                    DoNotShowPartialStatus="true" DoNotLookInAllFields="%$DoNotLookInAllFields%"
                    MaxItemsToShow="12">
                    <LookIn t="xtml.UseParam" Param="LookIn" />
                  </Aspect>
                  <Aspect t="uiaspect.ItemClickable">
                    <ClickAction t="object.RunMethod" Object="%$_Input%" Method="UpdateFromPopupAndClose" />
                  </Aspect>
                  <Aspect1 t="uiaspect.HighlightSelectionOnHover"/>
                  <Aspect t="picklist.SoftPickOnHover" />
                  <Aspect t="uiaspect.ItemSelection" AutoSelectFirstItem="true" IncludeSubContainers="false"/>
                </PageParams>
              </Contents>
              <Feature t="xtml.UseParamArray" Param="Feature"/>
          </Xtml>
        </FieldAspect>
      </xtml>
    </Component>
  
  <Component id="JBartPicklist" type="picklist.ControlStyle" Triplett="false">
    <Param name="PopupStyle" type="picklist.PopupStyle">
      <Default t="picklist.SystemPopup" FilterTreshold="30"/>
    </Param>
  
    <xtml t="field_aspect.Aspects">
      <FieldAspect t="xtml.UseParam" Param="PopupStyle" />
      <FieldAspect t="field_aspect.SimpleInput" />
      <FieldAspect t="field_aspect.PopupImage" ID="options">
        <Condition t="yesno.IsEmpty" Value="%$_Field/PupupImageCss%"/>
      </FieldAspect>
      <FieldAspect t="field_aspect.Resizer" />
      <FieldAspect t="field_aspect.HoverCssClass" />
    </xtml>
  </Component>

  <Component id="SystemPopup" type="picklist.PopupStyle">
    <Param name="FilterTreshold" Default="30" />
    <Param name="Operation" type="operation.Operations[]" script="true" />
    <Param name="FooterOperation" type="operation.Operations[]" script="true" advanced="true"/>
    <Param name="PopupStyle" type="dialog_style.Style" advanced="true">
      <Default t="dialog_style.DefaultPicklist" />
    </Param>
    <Param name="DialogFeature" type="dlg.DialogFeature[]" script="true" advanced="true"/>
    <Param name="PopupFeature" type="uiaspect.Aspect[]" script="true" advanced="true" />
    <Param name="Css" css="true" Default=".aa_no_items_found { opacity: .4; filter: alpha(opacity=40); display:inline-block; padding-top:8px;}" />
    <xtml t="field_aspect.Aspects">
      <FieldAspect t="field.OptionsFilter" />
      <FieldAspect t="field_aspect.Popup" Style="%$PopupStyle%" PopupCssClass="suggestions popup_fld_%$_Field/Id% popup_from_%$_Cntr/ID%" Picklist="true">
          <DialogFeature t="xtml.UseParamArray" Param="DialogFeature" />
          <PopupContents t="ui.ItemList">
            <Aspect t="xtml.UseParamArray" Param="PopupFeature" />
            <Class t="text.Concat" Separator=" ">
              <Item value="aa_pick" />
              <item t="data.IfThenElse" If="%$OptionsObj/IsTree%" Then="aa_pick_tree" Else="aa_pick_flat"/>
              <Item t="ui.AttachGlobalCss" Css="%$Css%" Name="system_pick_popup" />
            </Class>
            <Items t="data_items.Items">
              <Items t="picklist.PopupItems" />
              <Aspect t="data_items.RecursiveNextLevel" Condition="%$OptionsObj/IsTree%">
                <NextLevel t="data_items.Items" Condition="%IsCategory%">
                  <Items t="data.List">
                    <Item value="%Categories%" />
                    <Item value="%Options%" />
                  </Items>
                </NextLevel>
              </Aspect>
            </Items>
            <Operations t="operation.Operations">
              <Operation t="picklist.Operations"/>
              <Operation t="xtml.UseParamArray" Param="Operation" />
            </Operations>
            <Aspect t="uiaspect.Toolbar"/>
            <Aspect t="uiaspect.HeaderFooter" Identifier="footer_toolbar" Location="footer">
              <Control t="ui.List">
                <Var name="Menu" t="operation.Menu">
                   <Operations t="operation.Operations">
                    <Operation t="picklist.FooterOperations"/>
                    <Operation t="xtml.UseParamArray" Param="FooterOperation" />
                   </Operations>
                </Var>
                <Control value="%$Menu/Ctrl%"/>
              </Control>
            </Aspect>
            <Aspect t="picklist.CheckBox" Condition="%$_Field/Multiple%" />
            <Aspect t="uiaspect.ItemImage" Condition="%$OptionsObj/HasImages%">
              <ItemImage t="object.RunMethod" Object="%$OptionsObj%" Method="OptionImage" />
            </Aspect>
            <Aspect t="picklist.ItemTextForPicklist"/>
            <Aspect t="uiaspect.NextLevelsLight" Condition="%$OptionsObj/IsTree%" />
            <Aspect t="uiaspect.ExpandCollapse" Condition="%$OptionsObj/IsTree%" />
            <Aspect t="uiaspect.Indent" Condition="%$OptionsObj/IsTree%" />
            <Aspect t="data.IfThenElse">
              <If t="yesno.OR">
                <Item value="%$OptionsObj/IsTree%" />
                <Item value="%$_Field/Multiple%" />
              </If>
              <Then t="uiaspect.FastFindInHtmlTree" FilterTreshold="%$FilterTreshold%" HideExposedFilters="true" DoNotFilterSmallLists="true" />
              <Else t="uiaspect.FastFind" HideExposedFilters="true" MaxItemsToShow="12"/>
            </Aspect>
            <Aspect t="uiaspect.ItemSelection" AutoSelectFirstItem="false">
              <OnSelect t="action.RunActions">
                <Condition t="yesno.Not" Of="%UnSelectable%" />
                <Action t="object.RunMethod" Object="%$_Input%" Method="UpdateFromPopupAndClose" Condition="%$_SelectionMethod% == 'mouse'" />
              </OnSelect>
            </Aspect>
            <Aspect t="uiaspect.HighlightSelectionOnHover" />
            <Aspect t="uiaspect.HeaderFooter" Location="header" RefreshStrategy="container change" Phase="1">
              <Control t="ui.List">
                <Control t="ui.Text" Class="aa_no_items_found" MultiLang="true" Condition="%$FilteredItemsCount% == 0" Text="No Matching Items Found" />
              </Control>
            </Aspect>
          </PopupContents>
      </FieldAspect>
    </xtml>
  </Component>
  
  <Type id="OptionsPage" />
  
<Component id="NativeCombo" type="picklist.ControlStyle">
  <xtml t="picklist.CustomStyle">
      <Html>
<![CDATA[<select>
  <option  />
</select>]]>
      </Html>
      
      <Javascript>
<![CDATA[function(picklist) {
  var op = jQuery(picklist).find('option')[0];
  picklist.addOptions(op,function(option) {
    option.setInnerHTML('',option.Text);
    if (option.isSelected())
      picklist.value = option.Text;
  });
  picklist.onchange = function(e)
  {
    picklist.options[picklist.selectedIndex].select();
  }
}]]>
      </Javascript>
<![CDATA[]]>
    </xtml>
</Component>
  
  <Component id="Radio" type="picklist.ControlStyle">
  <xtml t="picklist.CustomStyle">
    <Html>
<![CDATA[<div>
  <div class="aa_option">
    <input type="radio"/>
    <span class="label"/>
  </div>
</div>]]>
    </Html>
    <Css>
<![CDATA[.aa_option { float:left; }
.aa_option:not(:last-child) { padding: 0 16px 0 0px; }
.aa_option.selected { }
.aa_option:hover { }
.label { padding: 2px 0 0 0; vertical-align:top; display: inline-block; }
#this { }]]>
    </Css>
    <Javascript>
<![CDATA[function(picklist) {
  function setSelectedOnClick(option,selectedClass) {
      if ( option.isSelected() ) jQuery(option).addClass(selectedClass);
      jQuery(option).find('input,.label').click(function() {
         jQuery(option).find('input').attr('checked','checked');
         var wasSelected = option.isSelected();
         if (!picklist.Multiple && wasSelected) return;
          
         option.toggleSelection();
                  
         if (picklist.Multiple) {
           jQuery(option).toggleClass(selectedClass);
         } else {
           jQuery(picklist.optionElems).removeClass(selectedClass);
           if (!wasSelected)
             jQuery(option).addClass(selectedClass);
         }
      });
  }
  window.aa_radio_counter = window.aa_radio_counter || 0;
  window.aa_radio_counter++;
  
  picklist.addOptions('.aa_option',function(option) {
    jQuery(option).find('.label').text(option.Text);
    jQuery(option).find('input').attr('name',window.aa_radio_counter);
    if (option.isSelected()) jQuery(option).find('input')[0].checked = true;
    setSelectedOnClick(option,'selected');
  });
  
  if ( 'false' == 'true' ) {
    var clearBtn = jQuery(picklist.createClearButton('selected','None')).addClass('aa_option');
    jQuery(picklist).prepend( clearBtn );
  }
}]]>
    </Javascript>
  </xtml>
</Component>​

  <Component id="OptionsAsButtons" type="picklist.ControlStyle">
      <Param name="TextForEmpty" Default="None"/>
      <Param name="ButtonForEmpty" type="data.Boolean" Default="true"/>
      <xtml t="picklist.CustomStyle">
        <Html>
<![CDATA[<div>
  <div class="aa_option" />
</div>]]>
        </Html>
        <Css>
<![CDATA[.aa_option { float: left; -webkit-border-radius: 0; border-radius: 0; display: inline-block; 
padding: 4px 10px 4px; font-size: 13px; line-height: 18px; text-align: center; 
text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75); 
background-image: -webkit-linear-gradient(#ffffff, #ffffff 25\%, #e6e6e6);
background-image: -moz-linear-gradient(top, #ffffff, #ffffff 25\%, #e6e6e6);
background-image: -ms-linear-gradient(#ffffff, #ffffff 25\%, #e6e6e6);
background-image: -o-linear-gradient(#ffffff, #ffffff 25\%, #e6e6e6);
background-image: linear-gradient(#ffffff, #ffffff 25\%, #e6e6e6);
background-repeat: no-repeat;
border: 1px solid #CCC;
border-bottom-color: #BBB;
-webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);
-moz-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);
box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);
cursor: pointer;
}
.aa_option.selected { color: #999; }
.aa_option.selected , .aa_option:hover {
text-decoration: none;
background-color: #E6E6E6;
background-position: 0 -15px;
-webkit-transition: background-position 0.1s linear;
-moz-transition: background-position 0.1s linear;
-ms-transition: background-position 0.1s linear;
-o-transition: background-position 0.1s linear;
transition: background-position 0.1s linear;
}
.aa_option:active {
  background-image: none;
  -webkit-box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15), 0 1px 2px rgba(0, 0, 0, 0.05);
  -moz-box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15), 0 1px 2px rgba(0, 0, 0, 0.05);
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15), 0 1px 2px rgba(0, 0, 0, 0.05);
  background-color: #e6e6e6;
  background-color: #d9d9d9 \9;
  color: rgba(0, 0, 0, 0.5);
  outline: 0;
}
.aa_option:first-child { 
border-top-left-radius: 4px;border-bottom-left-radius: 4px;
}
.aa_option:last-child { 
border-top-right-radius: 4px;border-bottom-right-radius: 4px;}     
      ]]>
        </Css>
        <Javascript>
<![CDATA[function(picklist) {
  picklist.addOptions('.aa_option',function(option) {
    option.setInnerHTML('',option.Text);
    option.setSelectedOnClick('selected');
  });
  
  if ( '%$ButtonForEmpty%' == 'true' ) {
    var clearBtn = jQuery(picklist.createClearButton('selected','%$TextForEmpty%')).addClass('aa_option');
    jQuery(picklist).prepend( clearBtn );
  }
}]]>
        </Javascript>
      </xtml>
    </Component>

  <Component id="CustomStyle" type="picklist.ControlStyle" customPT="true">
    <Param name="Html" codemirror="true" light="false"/> 
    <Param name="Css" codemirror="true" light="false"/>
    <Param name="Javascript" codemirror="true" light="false"/>
    <ParamGenerator t="bart_dt.StyleGenerator" />
    <xtml t="object.Object">
      <BooleanProperty name="Triplet" value="true" />
      <TextProperty name="Html" value="%$Html%" />
      <TextProperty name="Css" value="%$Css%" />
      <TextProperty name="Javascript" value="%$Javascript%" />
    </xtml> 
  </Component>
    
  <Component id="FooterOperations" type="operation.Operations" light="false">
    <xtml t="operation.Operations">
      <Var name="Multi" t="yesno.And">
        <Item value="%$_Field/Multiple%"/>
        <Item t="yesno.Not" Of="%$_Field/PicklistMultipleButtons/Hide%"/>
      </Var>
      <Operation t="operation.Operation" ID="Clear" Target="items" CssClass="aa_clear">
        <Condition t="yesno.And">
            <Item t="yesno.NotEmpty" Data="%$_FieldData%"/>
            <Item value="!%$Multi%"/>
            <Item value="%$_Field/AllowEmptyValue% == 'true'"/>
         </Condition> 
        <Title t="text.FirstSucceeding">
          <Item value="%$_Field/ClearText%"/>
          <Item value="all" Condition="%$_Field/IsFilter%"/>
          <Item value="clear"/>
        </Title>
        <Action t="action.RunActions">
          <Action t="object.RunMethod" Object="%$_Input%" Method="Clear" />
          <Action t="dialog.ClosePopup" />
        </Action>
      </Operation>
      <Operation t="object.RunMethod" Object="%$_Field/OptionsObject%" Method="Operations" />
    </xtml>
  </Component>

  <Component id="Operations" type="operation.Operations" light="false">
    <xtml t="operation.Operations">
      <Var name="Multi" t="yesno.And">
        <Item value="%$_Field/Multiple%"/>
        <Item t="yesno.Not" Of="%$_Field/PicklistMultipleButtons/Hide%"/>
      </Var>
      <Operation t="operation.Operation" ID="SelectAll" Target="items" CssClass="select_all" Condition="%$Multi%">
        <Title t="text.FirstSucceeding">
          <Item value="%$_Field/PicklistMultipleButtons/SelectAllText%"/>
          <Item value="Select All"/>
        </Title>
        <Action t="object.RunMethod" Object="%$_Cntr%" Method="SelectAll" />
      </Operation>
      <Operation t="operation.Operation" ID="ClearAll" Target="items" CssClass="clear_all" Condition="%$Multi%">
        <Title t="text.FirstSucceeding">
          <Item value="%$_Field/PicklistMultipleButtons/ClearAllText%"/>
          <Item value="Clear All"/>
        </Title>
        <Action t="object.RunMethod" Object="%$_Cntr%" Method="ClearAll"/>
      </Operation>
      <Operation t="operation.Operation" ID="Close" Target="items" CssClass="close" Title="Close" Condition="%$Multi%">
        <Action t="dialog.ClosePopup"/>
      </Operation>
    </xtml>
  </Component>

  <Component id="SimpleOptions" type="picklist.OptionsDefinition" execution="native">
    <Param name="Options" Description="comma separated" essential="true" />
    <Param name="DefaultImage" />
  </Component>

  <Component id="RichOptions" type="picklist.OptionsDefinition" execution="native">
    <Param name="Option" type="picklist.Option[]" essential="true" />
  </Component>

  <Component id="OptionsTree" type="picklist.OptionsDefinition" execution="native">
    <Param name="Category" type="picklist.OptionCategory[]" essential="true" />
  </Component>

  <Component id="OptionCategory" type="picklist.OptionCategory" execution="native">
    <Param name="Code" essential="true" />
    <Param name="Name" essential="true" />
    <Param name="Image" />
    <Param name="Selectable" type="data.Boolean" />
    <Param name="Category" type="picklist.OptionCategory[]" />
    <Param name="Option" type="picklist.Option[]" />
    <NativeHelper t="picklist.RichOptions" />
  </Component>

  <Component id="DynamicTree" type="picklist.OptionsDefinition,picklist.OptionsProvider" execution="native">
    <Param name="FirstLevel" />
    <Param name="NextLevel" script="true" />
    <Param name="Recursive" type="data.Boolean"/>
    <Param name="MiddleNodeSelectable" type="data.Boolean" />
    <Param name="OptionLabel" script="true" Default="%%"/>
    <Param name="OptionCode" script="true" Default="%%"/>
    <Param name="OptionImage" script="true" />
  </Component>
  
  <Component id="DynamicTreeByCategories" type="picklist.OptionsDefinition,picklist.OptionsProvider" execution="native">
    <Param name="Categories" essential="true" />
    <Param name="CategoryCode" script="true">
      <Default value="%%" />
    </Param>
    <Param name="CategoryName" script="true">
      <Default value="%%" />
    </Param>
    <Param name="CategoryImage" script="true" />
    <Param name="CategorySelectable" type="data.Boolean" script="true" />
    <Param name="SubTree" type="picklist.OptionsDefinition" script="true" />
    <Param name="Options" />
    <Param name="OptionName" script="true" />
    <Param name="OptionImage" script="true" />
  </Component>

  <Component id="Option" type="picklist.Option" execution="native">
    <Param name="Option" essential="true" />
    <Param name="DisplayName" />
    <Param name="Image" />
    <Param name="OptionPage" type="ui.SinglePage" />
  </Component>

  <Component id="OptionsWithOperations" type="picklist.OptionsDefinition" light="false" execution="native">
    <Param name="Options" type="picklist.OptionsDefinition" script="true" />
    <Param name="Operation" type="operation.Operations[]" script="true" />
  </Component>
  
  <Component id="DynamicOptions" type="picklist.OptionsDefinition,picklist.OptionsProvider" execution="native">
    <Param name="Options" essential="true" />
    <Param name="OptionLabel" script="true" />
    <Param name="OptionCode" script="true" advanced="true" description="Option label as default"/>
    <Param name="OptionImage" script="true" advanced="true" />
    <Param name="OptionPage" type="ui.Page" script="true" advanced="true" />
    <Param name="OptionCodeByIndex" type="data.Boolean" advanced="true" />
  </Component>

  <Component id="SuggestionsFromData" type="picklist.OptionsDefinition" category="filters,picklist" execution="native" promoted="true" >
    <Param name="SupportMultiple" type="data.Boolean" advanced="true" />
    <Param name="TextPattern" script="true" advanced="true" Description="e.g '\%\% children'" />
    <Param name="Static" type="data.Boolean" advanced="true" />
    <Param name="IncludeSpace" type="data.Boolean" advanced="true" />
  </Component>

  <Component id="ShowOccurrences" type="field.FieldAspect" category="filters" execution="native">
    <Param name="Show" type="enum" Options="filtered occurrences,original occurrences,filtered and original,do not show occurrences">
      <Default value="filtered and original"/>
    </Param>
    <Param name="SortBy" type="enum" Options="filtered occurrences,original occurrences,ascending,descending,none">
      <Default value="filtered occurrences"/>
    </Param>
  </Component>
  
  <Component id="CalcOccurrencesWithFilters" type="field.FieldAspect" category="filters" execution="native" light="false" />

  <!-- design time -->

  <Component id="EditSimpleOptions" type="ui.Control">
    <xtml t="ui.Document">
      <Fields t="field.XmlField" Path="@Options" Title="Options">
        <FieldAspect t="field_aspect.DefaultValue">
          <Value t="data.Pipeline" Remark="ugly temp code">
            <Var name="XPath" value="%$FieldXtml/@Path%" />
            <Item value="%$PageSampleItems%" />
            <Item t="xml.XPath" XPath="%$XPath%" />
            <Item t="text.SplitByCommas" />
            <Item t="text.Trim" />
            <Aggregator t="data.MakeUnique" />
            <Aggregator t="text.Concat" Separator="," />
          </Value>
        </FieldAspect>
        <FieldAspect t="field_aspect.Description" Description="comma separated e.g. created,handled,finished" />
      </Fields>
    </xtml>
  </Component>

  <Component id="EditRichOptions" type="ui.Control">
    <xtml t="ui.ItemList">
      <Items t="xml.XmlItems" Tag="Option">
        <DoOnNewItem t="xml.SetAttribute" AttributeName="t" Value="picklist.Option" />
      </Items>
      <Fields t="field.Fields">
        <Field t="field.XmlField" Path="@Option" />
        <Field t="field.XmlField" Path="@DisplayName" />
        <Field t="field.XmlField" Path="@Image">
          <Type t="field_aspect.ImageOld" />
        </Field>
      </Fields>
      <Operations t="operation.StdOperations" />
      <Aspect t="uiaspect.DefaultFeatures" />
      <Presentation t="uiaspect.RichTable" />
      <Aspect t="uiaspect.CellPresentation" Content="expandable text" />
    </xtml>
  </Component>

  <Component id="CheckBox" type="uiaspect.Aspect" execution="native" category="selection" jbart="false" />
  
  <Component id="SoftPickOnHover" type="uiaspect.Aspect" execution="native" category="picklist">
    <Param name="TimeBeteenPicks" Default="500" />
    <NativeHelper name="RequiresAspects" t="uiaspect.HighlightSelectionOnHover"/>
  </Component>
  <Component id="OptionTextAndImage" type="uiaspect.Aspect" execution="native" category="selection" jbart="false"/>

  <Component id="OpenPopup" type="action.Action" light="false">
    <Param name="FieldID" essential="true" />
    <xtml t="uiaction.FireEvent" Event="mousedown" RunOn=".fld_%$FieldID%" />
  </Component>
  <Component id="SetPicklistValue" type="action.Action" description="Called from popup to set the picklist input value" light="false">
    <Param name="Value" essential="true"/>
    <Param name="ForPreviewOnly" type="data.Boolean" description="Value will be restored on cancel. Used for hovering preview"/>
    <Param name="ClosePopup" type="data.Boolean"/>
    <xtml t="action.RunActions">
      <Var name="ForPreviewOnly" value="%$ForPreviewOnly%"/>
      <Action t="object.RunMethod" Method="SetPicklistValue" Object="%$_PicklistInput%" Input="%$Value%"/>
      <Action t="dlg.CloseDialog" CloseType="OK" Condition="%$ClosePopup%"/>
    </xtml>
  </Component>
  
  <Component id="RecalcPicklistOptions" type="action.Action" light="false">
    <Param name="PicklistInput" Default="%$_PicklistInput%" advanced="true"/>
    <xtml t="object.RunMethod" Method="RecalcOptions" Object="%$PicklistInput%" />
  </Component>

  <Component id="OpenPicklistPopup" type="action.Action" light="false">
    <Param name="FieldID" essential="true" />
    <xtml t="uiaction.FireEvent" Event="mousedown" RunOn=".fld_%$FieldID%" />
  </Component>

  <Component id="ItemTextForPicklist" type="uiaspect.Aspect" category="options" hidden="true" execution="native">
    <Param name="ItemCss" Default="#this { cursor:default;} " css="true" />
    <Param name="OccurrencesCss" Default="#this { font-size: 11px; color:#575757; }" css="true" />
  </Component>

  <Component id="Pick" type="action.Action,uiaction.UsageAction" light="false">
    <Param name="FieldID" essential="true" />
    <Param name="OptionIndex">
      <Default value="1" />
    </Param>
    <xtml t="action.RunActions">
      <Action t="uiaction.FireEvent" Event="mousedown" RunOn=".fld_%$FieldID%" />
      <Action t="uiaction.FireEvent" Event="mousedown">
        <RunOn t="data.Pipeline">
          <Item t="uiaction.ElementByClass" Cls="aa_item">
            <StartFrom t="dialog.ContentsOfOpenPopup" />
          </Item>
          <Aggregator t="data.Subset" From="%$OptionIndex%" Count="1" />
        </RunOn>
      </Action>
      <Action1 t="action.RunOnNextTimer">
        <Action t="dialog.ClosePopup" />
      </Action1>
    </xtml>
  </Component>

  <Component id="OptionsOfFilteredField" type="picklist.OptionsProvider" execution="native" description="The picklist options of the field to filter" />

  <Component id="DataOfFilteredField" type="picklist.OptionsProvider" execution="native" description="Options from grouping the real data" />

</xtml>
 
 <xtml ns="field_aspect" deprecated="true">

    <Component id="Popup" type="field.field_aspect">
    <Param name="PopupContents" type="ui.Control" script="true" essential="true" />
    <Param name="Style" type="dialog_style.Style">
      <Default t="dialog_style.DefaultPicklist" />
    </Param>
    <Param name="DialogFeature" type="dlg.DialogFeature[]" script="true"/>
    <Param1 name="PopupCssClass" script="true" />
    <Param1 name="Picklist" type="data.Boolean" />
    <Param1 name="ShowCloseButton" type="data.Boolean" />
    <Param name="OpenInPreview" type="data.Boolean" />
    <xtml t="field_aspect.Aspects">
      <FieldAspect t="object.SetMethod" Object="%$_Field%" Method="PopupContents">
        <Xtml t="xtml.UseParam" Param="PopupContents">
          <Var name="_PopupField" value="%$_Field%" />
        </Xtml>
      </FieldAspect>
      <FieldAspect t="object.SetMethod" Object="%$_Field%" Method="OpenPopup">
        <Xtml t="dlg.OpenDialog" Title="" Style="%$Style%" LauncherElement="%$_Input%">
          <Contents t="xtml.UseParam" Param="PopupContents">
            <Var name="_PopupField" value="%$_Field%" />
          </Contents>
          <Feature t="xtml.UseParamArray" Param="DialogFeature"/>
        </Xtml>
      
        <Xtml1 t="dialog.TogglePopup" ShowCloseButton="%$ShowCloseButton%" OnElement="%$_Input%" Picklist="%$Picklist%" WidthOption="%$_Field/PopupWidthOption%" Style="%$_Field/PopupStyle%">
          <Var name="_PopupField" value="%$_Field%" />
          <PopupCssClass t="xtml.UseParam" Param="PopupCssClass" />
          <Contents t="xtml.UseParam" Param="PopupContents" />
        </Xtml1>
      </FieldAspect>
      <FieldAspect t="field_aspect.Css" Class="aa_withpopup" Condition="%$OpenInPreview%" OnElement="content" />
    </xtml>
  </Component>


  <Component id="Section" type="field.FieldAspect" deprecated="true" description="Adds a visual section style to the group (e.g. collapse section, box, header title)">
    <Param name="Image" type="image.Image" />
    <Param name="Style" type="section.Style">
      <Default t="section.Default" />
    </Param>
    <Param name="HideTitle" type="data.Boolean" light="false"/>
    <Param name="CollapsedByDefault" type="data.Boolean" />
    <xtml t="action.RunActions">
      <Action t="object.SetBooleanProperty" Object="%$_Field%" Property="AsSection" Value="true" />
      <Action t="object.SetProperty" Object="%$_Field%" Property="SectionImage" Value="%$Image%" IsSingleProperty="true"/>
      <Action t="object.SetBooleanProperty" Object="%$_Field%" Property="SectionCollapsedByDefault" Value="%$CollapsedByDefault%" />
      <Action t="object.SetProperty" Object="%$_Field%" Property="SectionStyle" Value="%$Style%" IsSingleProperty="true"/>
      <Action t="object.SetBooleanProperty" Object="%$_Field%" Property="HideTitle" Value="true" Condition="%$HideTitle%" />
    </xtml>
  </Component>

  <Component id="Text" type="field_aspect.FieldType" light="false">
    <Param name="Mandatory" type="data.Boolean" boolfeature="true" />
    <Param name="HideTitle" type="data.Boolean" boolfeature="true" />
    <Param name="ReadOnly" type="data.Boolean" boolfeature="true" />
    <xtml t="field_aspect.Aspects">
      <FieldAspect t="field_aspect.Mandatory" Condition="%$Mandatory%" />
      <FieldAspect t="field_aspect.HideTitle" Condition="%$HideTitle%" />
      <FieldAspect t="field_aspect.ReadOnly" Condition="%$ReadOnly%" />
      <FieldAspect t="field_aspect.SimpleInput" />
      <FieldAspect t="field.TextFilter" />
      <FieldAspect t="field_aspect.Resizer" />
    </xtml>
  </Component>

  <Component id="SearchPopupImage" type="field.FieldAspect" category="picklist,ui">
    <Param name="Css"><Default value="#this { padding:0 0 0 14px; margin-left:-18px; display: inline-block; line-height:17px; height:17px;  background: url(%$_Images%/./search1616.png) no-repeat 0 0; } .right2left #this { margin-right:-18px; margin-left:0; }"/></Param>
    <xtml t="field_aspect.PopupImage" Css="%$Css%" />
  </Component>

   <Component id="Multiple" type="field_aspect.Multiple" execution="native" light="false">
    <Param name="MultipleTitle" />
    <Param name="Aspect" type="uiaspect.Aspect[]" script="true" />
    <Param name="Operations" type="operation.Operations" script="true" />
    <Param name="Fields" type="field.Fields" />
    <Param name="Items" type="data_items.Items" script="true" />

    <NativeHelper name="Control" t="ui.ItemList">
      <Items t="object.RunMethod" Object="%$_Field%" Method="MultipleItems" />
      <Fields t="xtml.UseParam" Param="Fields" />
      <Operations t="xtml.UseParam" Param="Operations" />
      <Aspect t="uiaspect.ItemDetails">
        <ItemPage t="ui.ItemPage">
          <Field t="field.CustomControl">
            <Control t="xtml.RunXtml" Xtml="%$_Field/ItemDetailsControl%" />
            <FieldAspect t="field_aspect.HideTitle"/>
          </Field>
        </ItemPage>
      </Aspect>
      <Aspect t="xtml.UseParamArray" Param="Aspect" />
    </NativeHelper>
  </Component>

  <Component id="ColumnWidth" type="field.FieldAspect" execution="native" category="table" light="false">
    <Aspect t="component_aspect.Image" Image="%$_Images%/resizer.gif" />
    <Param name="Width" essential="true" >
      <FieldAspect t="field_aspect.HideTitle" />
      <FieldAspect t="field_aspect.Description" Description="e.g. 80px,20%" />
    </Param>
  </Component>
  
<!--  Custom Suggestion Box -->
  
  <Component id="CustomSuggestionBox" todo="move to aaeditor" type="field.FieldAspect" execution="native" databind="true" light="false"> 
      <Param name="OnChangeAtEndOfText" type="action.Action" script="true" />
      <Param name="OnUpdate" type="action.Action" script="true"/>
      <Param name="OnAfterTextAdded" type="action.Action" script="true" />
      <Param name="OnCtrlSpace" type="action.Action" script="true" />
  </Component>
  
  <Component id="AddTextToSuggestionBox" type="action.Action" execution="native" light="false">
    <Param name="Text" ><Default value="%%" /></Param>
    <Param name="TriggerPopup" type="data.Boolean"><Default value="true" /></Param>
    <Param name="TriggerOnAfterTextAdded" type="data.Boolean"><Default value="true" /></Param>
  </Component>
  
  <Component id="OpenSuggestionBoxPopup" type="action.Action" execution="native" light="false">
    <Param name="Control" type="ui.Control" essential="true" />
  </Component>
  
  <Component id="OpenSuggestionBoxList" type="action.Action" execution="native" light="false">
    <Param name="Options" essential="true" />
    <Param name="OptionLabel" script="true" />
    <Param name="OptionDescription" script="true" />
    <Param name="OptionImage" script="true" />
    <Param name="HalfWrittenPart" />
    <Param name="OnSelect" type="action.Action" script="true" />
    <Param name="HalfWrittenAlwaysOnStart" type="data.Boolean" ><Default value="true" /></Param>
    <Param name="FilterItemsDifferantThanHalfWrittern" type="data.Boolean" ><Default value="true" /></Param>
  </Component>
  
  <Component id="TriggerSuggestionBoxPopup" type="action.Action" execution="native" light="false">
    <Param name="TextToSimulate" essential="true" />
    <Param name="TextPatternToAdd" ><Default value="%%" /></Param>
  </Component>
  
  <Component id="CloseSuggestionBox" type="action.Action" execution="native" light="false"/> 

  <Component id="DoNotSelectAllOnFocus" type="field.FieldAspect">
    <xtml t="object.SetBooleanProperty" Object="%$_Field%" Property="DoNotSelectAllOnFocus" Value="true"/>
  </Component>
  
  <Component id="JavaScript" type="field.FieldAspect" execution="native" light="false" hidden="true" deprecated="true">
    <Param name="RunWhen" type="enum" Options="control,control attached,init" essential="true" Default="control" />
    <Param name="Code" essential="true">
      <Default value="function(data,html_elem,field,context) {&#xa;  &#xa;}" />
      <FieldAspect t="field_dt.CodeMirrorPopupFieldEditor" Type="js" MarginLeft="" />
    </Param>
  </Component>

  <Component id="HandleEvent" type="field.FieldAspect" deprecated="true" execution="native" description="Handles events such as update,keyup,enter pressed,control attached,focus,mouse hover" light="false">
    <Param name="Event" type="enum" multiple="true" Options="update,blur,keydown,keyup,enter pressed,control attached,load,focus,mouse over,ctrl enter pressed,mouse click" essential="true" />
    <Param name="Action" type="action.Action" script="true"/>
    <NativeHelper name="OnLoad" t="field_aspect.AsynchAction">
      <Action t="xtml.UseParam" Param="Action" />
    </NativeHelper> 
  </Component>
  
  <Component id="AsynchAction" type="field.FieldAspect" execution="native" description="Runs an async action before the field" deprecated="true">
      <Param name="Action" type="action_async.Action.jBart" script="true"/>
      <Param name="LoadingText" Default="Loading..." essential="true"/>
      <Param name="LoadingStyle" type="loading_style.Style">
        <Default t="loading_style.Default"/>
      </Param>
    </Component>
  
  <Component id="TextAreaProperties" type="field.FieldAspect" execution="native" description="Sets html properties of a text area">
    <Param name="ReadOnly" type="enum" options="readonly,writable,no change" Default="no change" />
    <Param name="Disabled" type="enum" options="disabled,enabled,no change" Default="no change" />
  </Component>   
  
 </xtml>

<xtml ns="data_items">
 <Component id="Items" type="data_items.Items" execution="native">
   <Param name="Items" essential="true" />
   <Param name="ItemTypeName"/>
   <Param name="Aspect" type="data_items.Aspect[]" script="true" /> 
 </Component>
</xtml>


<xtml ns="validation" light="false">

  <Component id="PassingValidations" type="data.Boolean" execution="native">
    <Param name="TopControl"><Default value="%$ControlElement%"/></Param>
  </Component>
  
  <Component id="ShowValidationError" type="action.Action" execution="native" light="false">
    <Param name="TopControl"><Default value="%$ControlElement%"/></Param>
    <Param name="Error" />
  </Component>  

</xtml>

<xtml package="true">

  <xtml ns="image" jbart="true">
  
    <Type id="Image" />
    <Type id="ImageProportions" />

    <Component id="Image" type="image.Image" execution="native">
      <Param name="Url" script="true" image="true" />
      <Param name="Width" Default="" slider="true" sliderUnit="px" />
      <Param name="Height" Default="" slider="true" sliderUnit="px" />
      <Param name="ImageProportions" type="image.ImageProportions" description="Relevant only when width and height are entered">
        <Default t="image.KeepProportions" />
      </Param>        
    </Component>
    
    <Component id="KeepProportions" type="image.ImageProportions" execution="native">
      <Param name="FillImage" type="data.Boolean" Default="true" Description="When false, white spaces will be seen" />
      <Param name="CenterImage" type="data.Boolean" Default="true" />
    </Component>

    <Component id="ZoomAndOffet" type="image.ImageProportions" execution="native">
      <Param name="Zoom" Default="100" slider="true" sliderUnit="%" sliderMin="0" />
      <Param name="OffsetY" Default="0" slider="true" sliderUnit="%" sliderMin="0"/>
      <Param name="OffsetX" Default="0" slider="true" sliderUnit="%" sliderMin="0"/>
   </Component>

    <Component id="StretchImage" type="image.ImageProportions">
      <xtml t="action.RunActions" Remark="Do nothing" />
    </Component>

    <Component id="ImageOld" type="image.Image" execution="native" autoexpand="true" deprecated="true">
      <Param name="Url" script="true" image="true" />
      <Param name="SecondUrl" description="used when Url is empty" advanced="true" />
      <Param name="Size" description="width,height" advanced="true" light="false" />
      <Param name="KeepImageProportions" type="data.Boolean" description="relevant only when width and height are entered" advanced="true"><Default value="true"/></Param>
      <Param name="AsDivBackground" type="data.Boolean" advanced="true" description="Use div with background image" />
    </Component>
    
    <Component id="ImageInSprite" type="image.Image" execution="native">
      <Param name="Url" script="true" image="true" />
      <Param name="Size" Default="16,16" />
      <Param name="PositionInSprite" Default="0,0"/>
      <Param name="PositionForHover" advanced="true"/>
      <Param name="PositionForClick" advanced="true"/>
    </Component>
    
    <Component id="ImageInCss" type="image.Image" execution="native">
      <Param name="CssClass" />
    </Component>
    
    <Component id="ShowImage" type="ui.Control" execution="native">
      <Param name="Image" />
      <Param name="Size" />
    </Component>
    
    <Type id="Style" style="true" customPt="ui.CustomStyle" />

    <Component id="PlainImage" type="image.Style">
      <xtml t="ui.CustomStyle">
        <Html><![CDATA[<div/>]]></Html>
        <Css><![CDATA[#this {}]]></Css>
        <Javascript><![CDATA[function(image) {
  aa_setImage(image.el,image.image);
}]]></Javascript>
      </xtml>
    </Component>

    <Component id="Bootsrap" type="image.Style">
      <xtml t="ui.CustomStyle">
        <Html><![CDATA[<div/>]]></Html>
        <Css><![CDATA[{ 
padding: 4px;
line-height: 1;
border: 1px solid #DDD;
-webkit-border-radius: 4px;
-moz-border-radius: 4px;
border-radius: 4px;
-webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075);
-moz-box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075);
box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075);
}
#this:hover {
  border-color: #0088cc;
  -webkit-box-shadow: 0 1px 4px rgba(0, 105, 214, 0.25);
  -moz-box-shadow: 0 1px 4px rgba(0, 105, 214, 0.25);
  box-shadow: 0 1px 4px rgba(0, 105, 214, 0.25);
}
]]></Css>
        <Javascript><![CDATA[function(image) {
  aa_setImage(image.el,image.image);        
}]]></Javascript>
      </xtml>
    </Component>

      <Component id="WhiteFrame" type="image.Style">
  <xtml t="ui.CustomStyle" Javascript="function(image) {&#xa;  aa_setImage(image.el,image.image);        &#xa;}">
    <Html>
<![CDATA[<div>]]>
    </Html>
    <Css>
<![CDATA[
#this {  padding: 3px;
  border: 1px solid rgb(208,208,208);
  background:white;
}]]>
    </Css>
  </xtml>
  </Component>
  
  </xtml>
  
  <xtml ns="field_type">
  
    <Component id="Image" type="field_aspect.FieldType" execution="native" >
      <Param name="Image" type="image.Image">
        <Default t="image.Image" Url="%%" />
      </Param>
      <Param name="Style" type="image.Style">
        <Default t="image.PlainImage" />
      </Param>
    </Component>
        
  </xtml>
  
  <xtml ns="editableimage">
  
    <Type id="Style" customPT="ui.CustomStyle" style="true"/>

    <Component id="TextboxWithImagePreview" type="editableimage.Style">
      <xtml t="ui.CustomStyleByField">
        <Field t="field.Layout">
          <Layout t="layout.HorizontalHtmlTable" Spacing="10px" />
          <Field t="fld.Field" FieldData="%%">
            <FieldType t="fld_type.EditableText" />
            <FieldAspect t="field_aspect.RefreshDependentFields" FieldsIds="textboxandpreview_image" RefreshScope="sibling" />
            <FieldAspect t="field_aspect.OnUpdate">
              <Action t="object.RunMethod" Object="%$ApiObject%" Method="CalcImageSize" Input="%%" /> 
            </FieldAspect>
          </Field>
          <Field t="field.Image" ID="textboxandpreview_image" FieldData="%%">
            <Image t="image.ImageOld" Url="%%" Size="0,25" />
          </Field>
        </Field>
      </xtml>
    </Component>

    <Component id="TextAndImage" type="editableimage.Style">
       <xtml t="ui.CustomStyle">
        <Html><![CDATA[<div>
  <input/>
  <div class="aa_image_preview"/>
<div>]]></Html>
        <Css><![CDATA[
#this>* { display: inline-block;}          
#this input {
border: 1px solid #BDC7D8;
font-size: 11px;
padding: 3px;
height: 16px;
width: 150px;
background: url(%$_Images%/css/shadow2.png) repeat-x scroll 0 0 transparent;
}
#this input:focus {
border-color: rgba(82, 168, 236, 0.8);
outline: 0;
outline: thin dotted 9;
box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(82, 168, 236, 0.6);
}
#this input.placeholder {
  color: #8B8B8B;
}
.aa_image_preview { vertical-align: middle; padding-left:5px;}
]]></Css>
        <Javascript><![CDATA[function render(editableImage) {
  aa_jbart_textbox(editableImage,{ inputElement: editableImage.$el.find('input')[0] });
  aa_setImage(editableImage.$el.find('.aa_image_preview'),editableImage.image);
  var imagePreview = editableImage.$el.find('.aa_image_preview')[0];
  aa_bind(editableImage,'change',function() {
    aa_setImage(imagePreview,editableImage.image);
  });
}]]></Javascript>
       </xtml>
     </Component>

  </xtml>
  
</xtml>

<xtml ns="field_control" deprecated="true" light="false">

  <Component id="CustomXtmlControl" type="field.Fields" execution="native" deprecated="true">
    <Param name="ID" advanced="always" />
    <Param name="Title" fieldTitle="true" />
    <Param name="FieldAspect" type="field.FieldAspect[]" script="true" light="false"/>
    <Param name="Control" type="ui.Control" script="true" />
  </Component>
</xtml>


<xtml ns="menu" light="false">

 <Type id="MenuItem" >
    <MoreComponents>
      <component id="menu.MenuItems" itemsParam="MenuItem" />
    </MoreComponents>
 </Type>
 <Type id="ContextMenu" />
 <Type id="Menu" />

 <Component id="MenuItem" type="menu.MenuItem">
      <Param name="Text" essential="true"/>
      <Param name="Action" type="action.Action" script="true" essential="true"/>
      <Param name="Image">
        <Default value="%$_Images%/studio/bullet1616.gif"/>
      </Param>
      <Param name="Selectable" type="data.Boolean"/>
      <Param name="IsSelected" type="data.Boolean" script="true"/>
      <Param name="SubItem" type="menu.TreeMenuItem[]"/>
      <Param name="ExtraData"/>
      <Param name="ID"/>
      <xtml t="xtml.Params">
        <Param name="Text" t="text.MultiLang" Pattern="%$Text%" Dynamic="true"/>
        <Param name="Image" value="%$Image%"/>
        <Param name="ExtraData" value="%$ExtraData%"/>
        <Param name="Selectable" value="%$Selectable%"/>
        <Param name="SubItems" value="%$SubItem%"/>
        <Param name="Input" value="%%"/>
        <ScriptParam name="IsSelected" t="xtml.UseParam" Param="IsSelected"/>
        <ScriptParam name="Action" t="xtml.UseParam" Param="Action">
          <Var name="MenuItemExtraData" value="%$ExtraData%"/>
        </ScriptParam>
        <Param value="%$ID%" name="ID"/>
      </xtml>
    </Component>

  <Component id="DynamicMenuItems" type="menu.MenuItem">
    <Param name="Items"/>
    <Param name="Text" script="true"/>
    <Param name="Action" type="action.Action" script="true"/>
    <Param name="Image" script="true"/>
    <Param name="ExtraData" script="true" Default="%%"/>
    <Param name="Selectable" type="data.Boolean" script="true"/>
    <Param name="IsSelected" type="data.Boolean" script="true"/>
    <Param name="SubItems" value="%$SubItem%" />
    <Param name="ItemClass" script="true"/>

  <xtml t="data.Pipeline">
    <Item value="%$Items%"/>
    <Item t="xtml.Params">
      <Param name="Text" t="xtml.UseParam" Param="Text" Input="%%"/>
      <Param name="Image" t="xtml.UseParam" Param="Image" Input="%%"/>
      <Param name="ExtraData" t="xtml.UseParam" Param="ExtraData" Input="%%"/>
      <Param name="Selectable" t="xtml.UseParam" Param="Selectable" Input="%%"/>
      <Param name="SubItems" value="%$SubItems%" />
      <Param name="Input" value="%%" />
      <ScriptParam name="IsSelected" t="xtml.UseParam" Param="IsSelected"/>
      <ScriptParam name="Action" t="xtml.UseParam" Param="Action" Input="%$MenuItemInfo/Input%">
        <Var name="MenuItemExtraData" value="%$MenuItemInfo/ExtraData%"/>
      </ScriptParam>
      <Param name="ItemClass" t="xtml.UseParam" Param="ItemClass" Input="%%"/>
    </Item>
  </xtml>
  </Component>

 <Component id="Menu" type="menu.Menu" databind="true">
  <Param name="Item" type="menu.MenuItem[]" />
  <Param name="FilterForSelectedItem" type="data.Boolean" script="true" />
  <Param name="Style" type="menu.MenuStyle" script="true" paramVars="_MenuContext">
   <Default t="menu.SimpleVerticalMenu" />
  </Param>
  <Param name="AlwaysOneSelected" type="data.Boolean" />
  <xtml t="xtml.UseParam" Param="Style">
   <Var name="_MenuContext" t="xtml.Params">
    <Param name="Input" value="%%" />
    <Param name="Items" value="%$Item%" />
    <Param name="AlwaysOneSelected" value="%$AlwaysOneSelected%" />
    <ScriptParam name="FilterForSelectedItem" t="xtml.UseParam" Param="FilterForSelectedItem" />
    <ScriptParam name="MenuItemClass" value="menuitem %$Selected%">
     <Var name="Selected" value="selected">
      <Condition t="xtml.RunXtml" Xtml="%$_MenuContext/FilterForSelectedItem%" />
     </Var>
    </ScriptParam>
   </Var>
  </xtml>
 </Component>

 <Component id="SimpleVerticalMenu" type="menu.MenuStyle">
  <xtml t="ui.DynamicList">
   <Items value="%$_MenuContext/Items%"/>
   <Control t="ui.ButtonOld" >
    <Text t="text.MultiLang" Dynamic="true" Pattern="%Text%" />
    <Class t="xtml.RunXtml" Xtml="%$_MenuContext/MenuItemClass%"/>
    <Style t="ui.ButtonAsHyperlink" />
    <OnClick t="xtml.RunXtml" Xtml="%Action%" Input="%$_MenuContext/Input%" ForceInputParam="true">
      <Var name="MenuItemInfo" value="%%"/>
    </OnClick>
   </Control>
  </xtml>
 </Component>
 
 <Component id="ContextMenu" type="menu.ContextMenu" execution="native">
      <Param name="Item" type="menu.MenuItem[]" essential="true"/>
      <Param name="FooterMessage"/>
      <Param name="HeaderMessage"/>
      <Param name="Css" Default=".menu_item {font-size:14px; } .contextmenu_span { display: inline-block; vertical-align: top; color: #333; padding: 5px 3px 0 3px; } .contextmenu_li.selected span { color: #FFF; } .contextmenu { position: absolute; min-width: 120px; z-index:9999; } #this .contextmenu_ul { border: solid 1px #CCC;  background: #EEE;  padding:4px 2px;  margin: 0px; z-index: 99999;} li { cursor:pointer; list-style: none; margin: 0px; padding: 1px 8px;} li:hover { background-color: #3399FF; } li:hover span { color: #FFF; } li.selected { background-color: #3399FF; } .context_menu_footer_message { background:#E4E4E4;color:gray;font-size:12px;padding:4px 8px; } .context_menu_header_message { background:#E4E4E4;color:black; font-weight:bold; font-size:14px;padding:4px 8px; } .contextmenu_image { padding-right:6px; padding-top:4px; }" />
    </Component>

 <Component id="OpenContextMenu" type="action.Action">
      <Param name="Menu" type="menu.ContextMenu" script="true" essential="true"/>
      <Param name="FromMenu" type="enum">
        <value>vmenu</value>
        <value>hmenu</value>
      </Param>
      <xtml t="xtml.UseParam" Param="Menu">
        <Var name="ContextMenuInput" t="data.FirstSucceeding">
          <Item value="%$ContextMenuInput%"/>
          <Item value="%%"/>
        </Var>
        <Var name="_ContextMenuContext" t="xtml.Params">
          <Param name="FromMenu" value="%$FromMenu%"/>
          <Param name="Input" value="%$ContextMenuInput%"/>
        </Var>
      </xtml>
    </Component>
 
 <Component id="MenuItems" type="menu.MenuItem">
  <Param name="MenuItem" type="menu.MenuItem[]" />
  <xtml value="%$MenuItem%" />
 </Component>

 <Component id="RegisterContextMenuToControl" type="action.Action" light="false">
  <Param name="Control" type="ui.Control" />
  <Param name="Menu" type="menu.ContextMenu" script="true" />
  <xtml t="ui.BindEvent" Event="mouserightclick">
   <Var name="ContextMenuInput" />
   <Data value="%$Control%" />
   <Action t="menu.OpenContextMenu">
    <Menu t="xtml.UseParam" Param="Menu" />
   </Action>
  </xtml>
 </Component>

 <Component id="SetContextMenu" type="xml.Change">
  <Param name="Menu" type="menu.ContextMenu" script="true" />
  <xtml t="ui.BindEvent" Event="mouserightclick">
   <Var name="ContextMenuInput" value="%$InputForChanges%" />
   <Action t="menu.OpenContextMenu">
    <Menu t="xtml.UseParam" Param="Menu" />
   </Action>
  </xtml>
 </Component>

 <Component id="RunContextMenuItem" type="action.Action" light="false">
  <Param name="Control" />
  <Param name="MenuItemText" />
  <xtml t="action.RunActions">
   <Action t="uiaction.MouseRightClick" RunOn="%$Control%" />
   <Action t="action.IfThenElse">
    <Var name="ItemToClick" t="data.Pipeline">
     <Item t="menu.ContextMenuContents" />
     <Item t="ui.ElementOfClass" Cls="contextmenu_span" OnlyFirst="false" />
     <Item t="yesno.PassesFilter">
      <Filter t="yesno.ItemsEqual" Item1="%$MenuItemText%">
       <Item2 t="xml.InnerTextValue" />
      </Filter>
     </Item>
    </Var>
    <If t="yesno.Empty" Data="%$ItemToClick%" />
    <Then t="menu.CloseContextMenu" />
    <Else t="uiaction.Click" RunOn="%$ItemToClick%" />
   </Action>
  </xtml>
 </Component>

 <Component id="ContextMenuContents" type="ui.Control" execution="native" />
 <Component id="CloseContextMenu" type="action.Action" execution="native" light="false"/>

</xtml>

<xtml ns="field">
  <Type id="MultipleGroupData" />

    <Component id="InnerItems" type="field.MultipleGroupData">
    <Param name="Path" />
    <xtml t="data.IfThenElse" If="%$Path% == ''">
      <Then t="field.KeepParentItems" />
      <Else t="object.Object">
      <Method name="ContainerData" t="xml.XPath" From="%%" CreateIfDoesNotExist="true">
        <XPath t="text.RemoveSuffix" Data="%$Path%" Separator="/" EmptyIfNoSeparator="true" />
      </Method>  
      <Method name="Items" t="xml.XmlItems" ItemTypeName="%$TitleForSingle%" >
        <Tag t="text.FirstSucceeding">
          <Item t="text.Split" Part="Last" Text="%$Path%" Separator="/" />
          <Item value="%$Path%" />
        </Tag>
      </Method>
      </Else>
    </xtml>
  </Component>

  <Component id="KeepParentItems" type="field.MultipleGroupData">
    <xtml t="object.Object">
      <Method name="ContainerData" value="%%" />
      <Method name="Items" t="data.FirstSucceeding">
        <Item value="%$DataHolderCntr/Items%" />
        <Item value="%$HeaderFooterCntr/Items%" />
      </Method>
    </xtml>
  </Component>
  
  <Component id="CleanFilterButton" type="field.FieldAspect" hidden="true">
    <Param name="ShowCondition" type="data.Boolean" script="true">
      <Default t="yesno.NotEmpty" Value="%%" /> 
    </Param>
    <Param name="CleanFilterAction" type="action.Action" script="true">
      <Default t="action.RunActions">
        <Action t="action.WriteValue" To="%$FilterData%" Value=""/>
        <Action t="uiaction.SetText" Text="" DoNotFireEvents="true">
          <Var name="ControlElement" value="%$_Input%"/>
        </Action>
        <Action t="object.RunMethod" Object="%$_Input%" Method="Refresh"/>
        <Action t="field.FireOnUpdate"/>
      </Default>
    </Param>
    <Param name="Field" type="field.Fields"/>
    <xtml t="field_aspect.Aspects">
      <FieldAspect t="field_aspect.Toolbar">
        <Operations t="operation.Operation" Title="clear filter" CssClass="clean_filter clean_filter_%$Field/ID%" ID="clear filter">
          <Action t="operation.RunXtmlAction">
           <Var name="BaseField" value="%$Field%"/>
           <Action t="xtml.UseParam" Param="CleanFilterAction" />
          </Action>
        </Operations>
      </FieldAspect>
      <FieldAspect t="field_aspect.ModifyControl">
       <Action t="ui.ToggleClassByCondition" Class="cleanable_filter" Element="%$Cell%">
         <ClassCondition t="xtml.UseParam" Param="ShowCondition" />
       </Action>
      </FieldAspect>
      <FieldAspect t="field_aspect.OnUpdate">
       <Action t="ui.ToggleClassByCondition" Class="cleanable_filter">
          <ClassCondition t="xtml.UseParam" Param="ShowCondition" />
          <Element t="xml.Parent" Data="%$ControlElement%" />
       </Action>
      </FieldAspect>
    </xtml>
  </Component>

  <Component id="Field1" type="field.Fields" execution="native" deprecated="true">
    <Param name="ID" essential="true"/>
    <Param name="Title" essential="true" autoaspects="false" titleField="true" />
    <Param name="FieldData" script="true">
      <Default value="%%" />
    </Param>
    <Param name="Control" type="ui.Control" script="true" />
    <Param name="FieldAspect" type="field.FieldAspect[]" script="true" essential="true"/>
    <Param name="Multiple" type="field_aspect.Multiple" script="true" />
  </Component>

  <Component id="OptionsFilter" type="field.FieldAspect" execution="native" category="filter" light="false">
    <NativeHelper name="Control" t="field.ShowFieldControl" Item="%%" Class="aa_filter_input">
      <Var name="_OriginalField" value="%$_Field%"/>
      <Var name="_OriginalCntr" value="%$_Cntr%"/>
      <Field t="field.Field1" ID="%$_OriginalField/ID%_filter">
        <FieldAspect t="object.SetBooleanProperty" Object="%$_Field%" Property="IsFilter" Value="true"/>
        <FieldAspect t="field_aspect.DescriptionForEmptyText">
          <Description t="text.MultiLang" Pattern="Filter By %$_OriginalField/Title%"/>
        </FieldAspect>
        <FieldAspect t="picklist.ShowOccurrences"/>
        <FieldAspect t="object.RunMethod" Object="%$_OriginalField/FilterAspects%" Method="GetContent" />
        <FieldAspect t="field_aspect.Picklist" Multiple="true" Options="%$_OriginalField/Options%" AllowEmptyValue="false" AllowValueNotInOptions="false"/>
        <FieldAspect t="field_aspect.OnUpdate">
          <Action t="field.RefreshFilteredItems" >
            <Var name="_Field" value="%$_OriginalField%"/>
          </Action>
        </FieldAspect>
        <FieldAspect t="field_aspect.Resizer"/>
        <FieldAspect t="field.CleanFilterButton" Field="%$_OriginalField%"/>
      </Field>
    </NativeHelper>
  </Component>

  <Component id="RefreshFilteredItems" type="action.Action" execution="native" light="false" />
      

</xtml>
  
  <xtml ns="operation" deprecated="true">

  <Component id="Open" type="action.Action" light="false">
    <Aspect t="operation.GenerateOperationFullXtml">
      <OperationXtml t="xml.Xml" >
        <Operation t="operation.Operation" ID="edit" Icon="%$_Images%/edit1616.gif" Target="item">
          <Title t="operation.TextOfOpen" />
          <Action t="operation.Open" />
        </Operation>
      </OperationXtml>
    </Aspect>
    <Param name="Item" advanced="true"><Default value="%$_ItemsOfOperation%"/></Param>>
    <xtml t="object.RunMethod" Object="%$_Cntr%" Method="OpenItemDetails">
      <Var name="IsNewItem" value="false"/>
      <Var name="_OperationID" value="OpenItemDetails" />
      <Var name="_InnerItem" value="%$Item%" />
    </xtml>
  </Component>

  <Component id="TextOfOpen" type="data.Data">
    <Param name="TextForReadOnly"><Default value="Open" /></Param>
    <Param name="TextForEdit"><Default value="Edit" /></Param>
    <Param name="TextForInplaceClose"><Default value="Close" /></Param>
    <xtml t="data.FirstSucceeding">
      <Item value="%$TextForInplaceClose%">
        <Condition t="ui.HasClass" Data="%$_ElemsOfOperation%" Cls="aa_details_open" />
      </Item>
      <Item value="%$TextForReadOnly%" Condition="%$_Cntr/ReadOnly%" />
      <Item value="%$TextForEdit%" />
    </xtml>
  </Component>
  

  </xtml>

<xtml ns="uiaspect" >

  <Component id="DeleteOnHover" type="uiaspect.Aspect" execution="native" category="table" >
    <Param name="DeleteImage"><Default value="%$_Images%/delete1616.gif"/></Param>
    <Param name="TopMargin"><Default value="4"/></Param>
    <Param name="RightMargin" Default="10" />
    <Param name="DoAfterDelete" type="action.Action" script="true"/>
    <Param name="ConfirmationText" script="true"/>
    <NativeHelper name="Delete" t="operation.Delete">
      <ConfirmationText t="xtml.UseParam" Param="ConfirmationText" />
      <DoAfter t="xtml.UseParam" Param="DoAfterDelete" />
    </NativeHelper> 
  </Component>
  <Component id="DragAndDropMover" type="uiaspect.Aspect" execution="native" category="table" description="drag and drop table lines">
    <Param name="OnDrop" type="action.Action" script="true"></Param>
  </Component>
  <Component id="DragAndDropItems" type="uiaspect.Aspect" execution="native" category="table" description="drag and drop items on itemlists and grids">
    <Param name="OnDrop" type="action.Action" script="true"></Param>
  </Component>
  <Component id="TreeDragAndDrop" type="uiaspect.Aspect" execution="native" category="structure">
    <Param name="OnDrop" type="action.Action" script="true"></Param>
  </Component>

  <Component id="SeparatorControl" type="uiaspect.Aspect" category="Horizontal" jbart="false" execution="native">
    <Param name="Control" type="ui.Control" script="true" />
  </Component>
  
 <Component id="StretchToBottomRight" type="uiaspect.Aspect" execution="native" jbart="false">
   <Param name="StretchToBottom" type="data.Boolean"><Default value="true"/></Param>
   <Param name="MarginFromBrowserBottom"><Default value="5"/></Param>
   <Param name="StretchToRight" type="data.Boolean"><Default value="true"/></Param>
   <Param name="MarginFromBrowserRight"><Default value="5"/></Param>
 </Component>

 <Component id="RunAction" type="uiaspect.Aspect" execution="native" category="other">
   <Param name="RunBeforeControl" type="action.Action" description="can change the data"/>
   <Param name="RunAfterControl" type="action.Action" description="can run ui actions (clicking on buttons, setting text in textboxes etc.)"/>
   <Param name="OnAttach" type="action.Action" description="can activate UI events"/>
   <Param name="ShowWhileWaiting"><Default value="Loading..." /></Param>
 </Component>

  <Component id="DetailsInDialog" type="uiaspect.OpenIn">
      <Param name="RunOnOK" type="action.Action" script="true"/>
      <Param name="CloseOnEnter" type="data.Boolean"><Default value="true"/></Param>
      <Param name="DialogTitle"/>
      <Param name="OKLabel" advanced="true"><Default value="OK" /></Param>
      <Param name="Height" advanced="true"/>
      <Param name="Width" advanced="true"/>
      <xtml t="dialog.OpenDialog">
        <Dialog t="dialog.Dialog" DialogData="%$_InnerItems/Items%" CloseOnEnter="%$CloseOnEnter%" OKLabel="%$OKLabel%" Height="%$Height%" Width="%$Width%">
          <Buttons t="data.IfThenElse" Then="OK,Cancel" Else="Close">
            <If t="yesno.OR">
              <Item value="%$_Transactional%" />
              <Item value="%$IsNewItem%" />
            </If>
          </Buttons>
          <Title t="text.FirstSucceeding">
            <Item value="%$DialogTitle%"/>
            <Item t="data.IfThenElse" If="%$IsNewItem%">
              <Then t="text.TranslatePattern" Pattern="New %$Title1%"/>
              <Else t="text.TranslatePattern" Pattern="Edit %$Title1%"/>
              <Var name="Title1" t="text.Translate" Text="%$_Items/ItemTypeName%"/>
            </Item>
          </Title>
          <Content value="%$DetailsControl%" />
          <BeforeClose t="object.RunMethod" Object="%$_ItemDetailsObject%" Method="Save" />
          <RunOnOK t="action_async.RunAsync">
            <Action t="action_async.RunActions">
              <Action t="xtml.UseParam" Param="RunOnOK"/>
            </Action>
          </RunOnOK>
          <RunOnCancel t="object.RunMethod" Object="%$_ItemDetailsObject%" Method="Cancel" />
        </Dialog>
      </xtml>
    </Component>

</xtml>

<xtml ns="uiaspect" jbart="true">

  <Type id="Aspect">
    <ComponentAspect t="component_aspect.Image" Image="%$_Images%/studio/ball1616.gif" />
  </Type>
  <Type id="Container" />
  <Type id="DocumentPresentation" />
  <Type id="ItemListPresentation" />
    
  <Component id="Table" type="uiaspect.ItemListPresentation" execution="native" light="false">
    <Param name="Columns" light="false" />
    <NativeHelper name="FieldMenu" t="menu.OpenContextMenu" FromMenu="hmenu">
      <Menu t="menu.ContextMenu">
        <Item t="menu.MenuItem" Image="%$_Images%/butterfly1616.png" Text="Hide">
          <Action t="object.RunMethod" Object="%$_Cntr%" Method="GroupBy" Input="%%" />
        </Item>
        <Item t="menu.MenuItem" Image="%$_Images%/groupby.gif">
          <Text t="data.IfThenElse" If="%$_Cntr/IsGrouped%" >
            <Then t="text.Translate" Text="Ungroup" /> 
            <Else t="text.MultiLang" Pattern="Group by %Title%"/>
            </Text>
          <Action t="object.RunMethod" Object="%$_Cntr%" Method="GroupBy" Input="%%" />
        </Item>
      </Menu>
    </NativeHelper>
    <Param name="Css" css="true" advanced="true">
      <Default><![CDATA[#this {
  border:1px solid #CCCCCC;
  padding: 0;
  margin: 0px;
  border-collapse: collapse;
  font-family: "Tahoma","Bitstream Vera Sans",Verdana,Helvetica,sans-serif;
  font-size: 12px;
  font-style: normal;
  line-height2: 1.5;
  text-align2: left;
}

#this .fieldtitle {
  background: #eee;
  color: #666666;
  padding: 4px 5px;
  border-left: 1px solid #CCCCCC;
}

#this .aa_inner_header .fieldtitle:first-child { border-left: 0px; }
.right2left #this .aa_inner_header .fieldtitle:first-child { border-left: 1px solid #CCCCCC; }
.right2left #this .aa_inner_header .fieldtitle:last-child { border-left: 0px; }
        
#this .aatable_tbody { color: #666666; } 
#this .content {
  padding: 5px 10px;
  border: 1px solid #CCCCCC;
  white-space: normal;
}

#this .fieldtitle_title { padding-right: 5px; white-space: normal; cursor:default; }
#this .fieldtitle_sort { padding-right: 3px; cursor:default; }
#this .fieldtitle_info {  background: url('%$_Images%/information.png') no-repeat 0 5px; padding: 6px 12px 0 0; margin-left: 7px;}
#this .sort_ascending .fieldtitle_sort { background: url(%$_Images%/css/sort2.gif) no-repeat 0 5px; }
#this .sort_descending .fieldtitle_sort { background: url(%$_Images%/css/sort1.gif) no-repeat 0 5px; }
#this .td_nocontent {color: #666666; padding: 5px 10px; border: 1px solid #CCCCCC;}
#this .selected { background: #D9E8FB; }
#this .content select { width:100px; }
#this thead.hidden_header { display: none; }
]]></Default>
    </Param>
  </Component>

  <Component id="Custom" type="uiaspect.ItemListPresentation" >
    <xtml t="uiaspect.Aspects"/>
  </Component>

  <Component id="RichTable" type="uiaspect.ItemListPresentation" >
    <Param name="Sort" type="data.Boolean" advanced="true"><Default value="true"/></Param>
    <Param name="ColumnsResizer" type="data.Boolean" advanced="true"><Default value="true"/></Param>
    <Param name="DragAndDropColumns" type="data.Boolean" advanced="true"><Default value="true"/></Param>
    <Param name="DragAndDropRows" type="data.Boolean" advanced="true"><Default value="true"/></Param>
    <Param name="HideEmptyTable" type="data.Boolean" advanced="true"/>
    <Param name="Columns" light="false" />
    <xtml t="uiaspect.Aspects">
      <Condition t="yesno.Not" Of="%$_Cntr/HasRichTable%" />
      <Aspect t="uiaspect.AspectByXtml"> 
        <InitializeContainer t="object.SetBooleanProperty" Object="%$_Cntr%" Property="HasRichTable" Value="true" Comment="should be removed. only to support twice putting RichTable" />
      </Aspect>
      <Aspect t="uiaspect.Table" Columns="%$Columns%" />
      <Aspect t="uiaspect.Sort" Condition="%$Sort%"/>
      <Aspect t="uiaspect.TableColumnsDragAndDrop" Condition="%$DragAndDropColumns%"/>
      <Aspect t="uiaspect.TableColumnsResizer" Condition="%$ColumnsResizer%" />
      <Aspect t="uiaspect.DragAndDropMover" Condition="%$DragAndDropRows%" />
      <Aspect t="uiaspect.TableNoItems" HideTable="%$HideEmptyTable%"/>
    </xtml>
  </Component>

  <Component id="TableNoHeader" type="uiaspect.Aspect" execution="native" category="table" description="Removes the header line of the table"/>
  <Component id="TableNoItems" type="uiaspect.Aspect" execution="native" category="table" description="Table with no items shows a 'no items' indication">
      <Param name="HideTable" type="data.Boolean" description=""/>
      <Param name="DescriptionWhenNoItems" Default="No items available" />
  </Component>
  <Component id="ShowTextWhenNoItems" type="uiaspect.Aspect" execution="native" description="Text to show when no items present">
      <Param name="TextWhenNoItems" Default="No items available" />
      <Param name="Style" type="uitext.Style">
        <Default t="uitext.PlainText" />
      </Param>
  </Component>
  <Component id="TableColumnsDragAndDrop" type="uiaspect.Aspect" execution="native" category="table" light="false"/>
  <Component id="TableColumnsResizer" type="uiaspect.Aspect" execution="native" category="table" light="false"/>
  <Component id="TableScroll" type="uiaspect.Aspect" execution="native" category="table" description="Scrolling the table body">
      <Param name="Height" description="Table Height"/>
  </Component>
  
  <Component id="ScrollItems" type="uiaspect.Aspect" description="Scrolls the items" execution="native">
    <Param name="Style" type="itemlist_scroll.Style">
      <Default t="itemlist_scroll.BrowserScroll" />
    </Param>
    <Param name="Height" type="scroll_size.Height"><Default t="scroll_size.FixedHeight" /></Param>
    <Param name="Width" type="scroll_size.Width" />
  </Component>
  
  <Component id="HiddenFields" type="uiaspect.Aspect" execution="native" category="table" light="false">
    <Param name="FieldIds" type="dynamic_enum_multi" essential="true" >
      <Options t="data.Pipeline">
        <Item value="%$PreviewCntr/Fields%"/>
        <Item value="%ID%"/>
      </Options>
    </Param>
  </Component>

  <Component id="CellPresentation" type="uiaspect.Aspect" execution="native" category="table,document" description="Force specific presentation (text, control, or expandable text), can be overridden at the field level.">
      <Param name="Content" type="enum" description="">
        <Default value="text"/>
      <value>text</value>
      <value>expandable text</value>
      <value>control</value>
    </Param>
  </Component>

  <Component id="Sort" type="uiaspect.Aspect" execution="native" category="table" light="false"/>

  <Component id="ItemText" type="uiaspect.Aspect" execution="native" category="list" light="false">
    <Param name="ItemText" type="data.Data" script="true" essential="true" />
    <Param name="ID"><Default value="item_text"/></Param>
    <Param name="Secondary" type="data.Boolean"/>
    <Param name="Class"/>
    <Param name="UsingHtmlElement" type="data.Boolean" />
    <Param name="EncodeHtml" type="data.Boolean" />
  </Component>

  <Component id="ItemSelection" type="uiaspect.Aspect" execution="native" category="selection,master details">
    <Param name="KeyboardSupport" type="data.Boolean"><Default value="true" /></Param>
    <Param name="AutoSelectFirstItem" type="enum">
      <Default value="true" />
      <value>false</value>
      <value>true</value>
      <value>select and focus</value>
    </Param>
    <Param name="MouseSupport" type="enum" Options="mouse down,mouse click,none"><Default value="mouse down" /></Param>
    <Param name="IncludeSubContainers" type="data.Boolean"><Default value="true" /></Param>
    <Param name="PropagateSelection" type="data.Boolean"/>
    <Param name="OnSelect" type="action.Action" script="true" />
    <Param name="FilterOnFirstSelected" type="data.Boolean" script="true" />
    <Param name="Css" codemirror="true" Default="#this.aa_selected_item { background: #D9E8FB;}" />
  </Component>

  <Component id="BindSelectedItem" type="uiaspect.Aspect" description="bind selected item to data" execution="native" category="selection,master details">
    <Param name="ItemIdentifier" script="true" />
    <Param name="SelectedIdentifier" script="true" />
  </Component>
  
  <Component id="DisableSelection" type="uiaspect.Aspect" execution="native" category="selection" light="false">
    <Aspect t="component_aspect.Description" Description="disables selection of direct items, and creates selection island for child containers"/>
    <Param name="Disable" type="data.Boolean"><Default value="true"/></Param>
  </Component>
  <Component id="InheritSelection" type="uiaspect.Aspect" execution="native" category="selection" light="false">
    <Description value="unify selection behavior with parent"/>
    <Param name="Inherit" type="data.Boolean"/>
  </Component>
  <Component id="HighlightSelectionOnHover" type="uiaspect.Aspect" execution="native" category="selection" jbart="false" >
    <Param name="Action" type="action.Action"/>
  </Component>

  <Component id="ItemImage" type="uiaspect.Aspect" execution="native" category="list" light="false">
    <Param name="ItemImage" type="data.Data" script="true" essential="true" />
    <Param name="ImageForLeafs" type="data.Data" Remark="'none' means no image" />
    <Param name="Css" Default="vertical-align:bottom; padding-bottom: 2px; padding-right: 4px;" />
  </Component>

  <Component id="CheckBox" type="uiaspect.Aspect" execution="native"  category="selection" light="false">
    <Param name="Selector" type="data.MultiSelector" />
    <Param name="OnSelect" type="action.Action" script="true" />
    <Param name="SelectOnCheck" type="data.Boolean"/>
    <Param name="IncludeIntermediateNodes" type="data.Boolean" Description="Relevant for tree. Use checkbox for leaf nodes only" />
    <Param name="SelectWithEnter" type="data.Boolean" Description="Can also close the popup. If within popup should be used only with single selection" />
  </Component>

  <Component id="Shortcuts" type="uiaspect.Aspect" execution="native" category="keyboard" light="false"/>

  <Component id="OnDoubleClick" type="uiaspect.Aspect" execution="native" category="events">
    <Param name="Action" type="action.Action" script="true" essential="true" >
       <Default t="operation.Open"/>
    </Param>
  </Component>

  <Component id="HeaderFooterTitle" type="uiaspect.Aspect" light="false">
    <Param name="Text" script="true" />
    <Param name="Location" type="enum">
      <Default value="header" />
      <value>header</value>
      <value>footer</value>
      <value>header and footer</value>
      <value>footer, header only for many items</value>
    </Param>
      <Param name="RefreshStrategy" type="enum" Options="none,container change,item selection">
        <Default value="none" />
      </Param>
    <xtml t="uiaspect.HeaderFooter" Location="%$Location%" RefreshStrategy="%$RefreshStrategy%">
      <Identifier t="data.UniqueNumber" />
      <Control t="ui.Text">
        <Text t="xtml.UseParam" Param="Text" />
      </Control>
    </xtml>
  </Component>

  <Component1 id="HeaderFooterFromFields" type="uiaspect.Aspect" execution="native" light="false">
    <NativeHelper name="HeaderFooterItem" t="uiaspect.HeaderFooterFromFieldsImp" Field="%$Field%" Cntr="%$_Cntr%" Object="%$_HeaderFooterObject%"/>
  </Component1>
  
  <Component1 id="HeaderFooterFromFieldsImp">
    <Param name="Field" />
    <Param name="Cntr" />
    <Param name="Object" />
    <xtml t="uiaspect.HeaderFooter" Identifier="%$Field/ID%" Location="%$Field/HeaderFooterLocation%" RefreshStrategy="%$Field/HeaderFooterRefreshStrategy%">
      <Control t="object.RunMethod" Object="%$Object%" Method="Control" />
    </xtml>
  </Component1>
  
  <Component id="HeaderFooter" type="uiaspect.Aspect" execution="native" light="false">
    <Param name="Control" type="headerfooter.HeaderFooterControl" script="true" essential="true" />
    <Param name="Identifier" type="data.Data">
      <Default value="0" />
    </Param>
    <Param name="Location" type="enum">
      <Default value="header" />
      <value>header</value>
      <value>footer</value>
      <value>header and footer</value>
      <value>footer, header only for many items</value>
    </Param>
      <Param name="RefreshStrategy" type="enum" Options="none,container change,item selection">
        <Default value="none" />
      </Param>
      <Param name="Phase"><Default value="0"/></Param>
  </Component>

  <Component id="NextLevelsLight" type="uiaspect.Aspect" execution="native" category="structure" light="false">
    <Param name="ExpandLevel" type="enum">
      <Default value="all" />
      <value>root level</value>
      <value>first level</value>
      <value>all</value>
    </Param>
    <Param name="NextLevel" type="data_items.Items" script="true" advanced="true">
      <Default t="object.RunMethod" Object="%$_DataItems%" Method="NextLevel" />
    </Param>
  </Component>

  <Component id="NextLevels" type="uiaspect.Aspect" execution="native" category="structure" light="false">
    <Param name="NextLevelAspect" type="uiaspect.Aspect[]" script="true" />
    <Param name="NextLevel" type="data_items.Items" script="true">
      <Default t="xtml.RunXtml" Xtml="%$_Cntr/Items/NextLevel%" />
    </Param>
    <Param name="Operations" type="operation.Operations" script="true" />
    <Param name="Fields" type="field.Fields" script="true" />

    <NativeHelper name="InnerContainer" t="ui.ItemList" Items="%$_NextLevelItems%">
      <Var name="_NextLevelItems" t="xtml.UseParam" Param="NextLevel" />
      <Condition t="yesno.NotEmpty" Value="%$_NextLevelItems%" />
      <Operations t="xtml.UseParam" Param="Operations" />
      <Fields t="xtml.UseParam" Param="Fields" />
      <Aspect t="xtml.UseParamArray" Param="NextLevelAspect" />
      <Aspect value="%$_This%" />
    </NativeHelper>
  </Component>

  <Component id="ItemClass" type="uiaspect.Aspect" execution="native" category="table" description="style per item. assign a specific css class for each item">
    <Param name="Class" script="true" essential="true" />
  </Component>
  
  <Component id="NextLevelsByFields" type="uiaspect.Aspect" execution="native" category="structure" light="false">
    <Param name="FieldIds" />
  </Component>
  <Component id="TreeNode" type="uiaspect.Aspect" execution="native" category="tree" light="false"/>

  <Component id="Indent" type="uiaspect.Aspect" execution="native" category="tree" light="false" >
    <Param name="Lines" type="data.Boolean" />
    <Param name="Css" css="true">
      <Default>
      <![CDATA[#this,#this ul {  padding: 0;  margin: 0;  list-style: none; } 
      #this li { margin: 0;  padding: 3px 0pt 3px 16px;  background: none; white-space: nowrap; } 
      .aa_lined #this li { background: url(%$_Images%/css/treeview-default-line.gif) 0 0 no-repeat; } 
      .right2left #this li { padding: 3px 16px 3px 0pt !important } 
      .right2left #this .aa_text {  padding: 3px;} 
      .aa_lined #this li.non_leaf { background-position: 0 -176px;} 
      .aa_lined #this li.last { background-position: 0 -1763px; } 
      .aa_lined #this .hitarea.collapsable { background-position: -64px -25px; } 
      .aa_lined #this .hitarea.expandable { background-position: -80px -3px; } 
      .aa_lined #this .hitarea.collapsable.last { background-position: -16px -89px; } 
      .aa_lined #this .hitarea.expandable.last { background-position: -48px -45px; }
      ]]></Default>
    </Param>
  </Component>

  <Component id="ExpandCollapse" type="uiaspect.Aspect" execution="native" category="tree" light="false">
    <Param name="CollapseLevel" type="enum" Options="root,first,expand all">
      <Default value="expand all"/>
    </Param>
    <Param name="TextInHitArea" type="data.Boolean" />
    <Param name="Css">
      <Default t="ui.CustomStyle">
      <Css><![CDATA[
#this.aa_selected_item .aa_selected_itemtext { background: #D9E8FB; }
]]></Css>
      </Default>
    </Param>
    <Param name="HitAreaCss" css="true">
      <Default><![CDATA[
#this {  background:  url(%$_Images%/css/treeview-default.gif) -64px -25px no-repeat; height: 16px; width: 16px; margin: 2px 0 0 -16px; float: left; cursor: pointer;}
#this.collapsable { background-position: -16px -92px; }
#this.expandable { background-position: -48px -48px; }
.right2left #this {  margin-right: -16px;float: right; background-image:  url(%$_Images%/css/treeview-default-rtl.gif); }
      ]]></Default>
    </Param>
  </Component>

  <Component id="Tree" type="uiaspect.ItemListPresentation" jbart="false">
    <Param name="ItemText" script="true" />
    <Param name="ItemImage" script="true">
      <Default value="%$_Images%/default1616.gif" />
    </Param>
    <Param name="CollapseLevel" type="enum" Options="root,first,expand all"><Default value="first"/></Param>
    <Param name="NextLevel" type="data_items.Items" script="true" advanced="true">
      <Default t="object.RunMethod" Object="%$_DataItems%" Method="NextLevel" />
    </Param>
    <Param name="ExpandLevel" type="enum" Options="root level,first level,all" >
      <Default value="first level" />
    </Param>
    <Param name="DragAndDrop" type="data.Boolean"/>
    <Param name="SelectedInUrl" type="data.Boolean" advanced="true"><Default value="true"/></Param>
    <Param name="TextInHitArea" type="data.Boolean" advanced="true" />
    <Param name="Css" Default="font-family: Times;" advanced="true"/>
    <Param name="Lines" type="data.Boolean" advanced="true"/>
    <Param name="ItemTextAsHtml" type="data.Boolean" Default="true" advanced="true"/>
    <xtml t="uiaspect.Aspects">
      <Aspect t="uiaspect.ItemImage">
        <ItemImage t="xtml.UseParam" Param="ItemImage" />
      </Aspect>
      <Aspect t="uiaspect.ItemText" UsingHtmlElement="%$ItemTextAsHtml%">
        <ItemText t="xtml.UseParam" Param="ItemText" />
      </Aspect>
      <Aspect t="uiaspect.NextLevelsLight" ExpandLevel1="%$ExpandLevel%">
        <NextLevel t="xtml.UseParam" Param="NextLevel" />
      </Aspect>
      <Aspect t="uiaspect.Css" OnElement="container" Inline="%$Css%" />  
      <Aspect t="uiaspect.ExpandCollapse" CollapseLevel="%$CollapseLevel%" TextInHitArea="%$TextInHitArea%"/>
      <Aspect t="uiaspect.Indent" Lines="%$Lines%" />
      <Aspect t="uiaspect.TreeDragAndDrop" Condition="%$DragAndDrop%" />
      <Aspect t="uiaspect.TreeSelectedInUrl" Condition="%$SelectedInUrl%" />
    </xtml>
  </Component>

  <Component id="TreeInitialSelection" type="uiaspect.Aspect" execution="native">
    <Param name="Path" />
  </Component>

  <Component id="TreeSelectedInUrl" type="uiaspect.Aspect" execution="native" />

  <Component id="CheckBoxButtons" type="uiaspect.Aspect" category="selection" light="false">
    <xtml t="uiaspect.HeaderFooter" Identifier="CheckBoxButtons" Location="header">
      <Control t="ui.List" Class="checkboxbuttons">
        <Control t="ui.ButtonOld">
          <Text t="text.MultiLang" Pattern="Select All" />
          <OnClick t="uiaction.CheckAll" Select="true" />
          <Style t="ui.ButtonAsHyperlink" />
        </Control>
        <Control t="ui.ButtonOld">
          <Text t="text.MultiLang" Pattern="Clear All" />
          <OnClick t="uiaction.CheckAll" Select="false" RunOn="up(.aa_container)" />
          <Style t="ui.ButtonAsHyperlink" />
        </Control>
        <ItemsLayout t="ui.SpanList" />
        <Layout t="ui.ButtonsLayout" />
      </Control>
    </xtml>
  </Component>

  <Component id="ContextMenu" type="uiaspect.Aspect" execution="native" category="menu" >
    <Param1 name="Operations" Description="operations ids. If empty, show all operations"/>
    <Param name="MenuAspect" type="operation.MenuAspect[]" script="true" essential="true" />
    <NativeHelper name="ContextMenuImp" t="menu.OpenContextMenu" FromMenu="hmenu">
      <Var name="ContextMenu" t="operation.ContextMenu">
        <MenuAspect t="operation.ContainerOperations"/>
        <MenuAspect t="xtml.UseParamArray" Param="MenuAspect"/>
        <MenuAspect t="operation.RemoveDisabled"/>
      </Var>
      <Menu t="menu.ContextMenu">
        <Item t="menu.DynamicMenuItems" Items="%$ContextMenu/Items%">
          <Image t="object.RunMethod" Object="%%" Method="Icon" Input="%$_ItemsOfOperation%"/>
          <aa t="xtml.RunXtml" Xtml="%Icon%" Input="%$_ItemsOfOperation%"/>
          <Text t="xtml.RunXtml" Xtml="%Title%" Input="%$_ItemsOfOperation%"/>
          <Action t="action.RunActions">
            <Action t="xtml.RunXtml" Xtml="%Action%" Input="%$_ItemsOfOperation%"/>
          </Action>
        </Item>
      </Menu>
    </NativeHelper>
  </Component>

  <Component id="Toolbar" type="uiaspect.Aspect" category="menu">
    <Param name="Location" type="enum">
      <Default value="header" />
      <value>header</value>
      <value>footer</value>
      <value>header and footer</value>
      <value>footer, header only for many items</value>
    </Param>
      <Param name="RefreshStrategy" type="enum" Options="none,container change,item selection">
        <Default value="item selection" />
      </Param>
    <Param name="MenuAspect" type="operation.MenuAspect[]" script="true" />
    <xtml t="uiaspect.HeaderFooter" Identifier="toolbar" Location="%$Location%" RefreshStrategy="%$RefreshStrategy%">
      <Control t="ui.List">
        <Var name="Menu" t="operation.Menu">
            <MenuAspect t="operation.ContainerOperations"/>
            <MenuAspect t="xtml.UseParamArray" Param="MenuAspect" />
            <MenuAspect t="operation.RemoveDisabled" />
        </Var>
        <Control value="%$Menu/Ctrl%"/>
      </Control>
    </xtml>
  </Component>

  <Component id="SelectedElement" type="data.Data" execution="native" light="false"/>
  <Component id="SelectedItem" type="data.Data" execution="native" dtsupport="false" light="false"/>

  <Component id="ContainerElementByItemFilter" type="data.Data" execution="native" light="false">
    <Param name="Container" type="uiaspect.Container"><Default value="%$_Cntr%" /></Param>
    <Param name="ItemFilter" type="data.Boolean" script="true" />
  </Component>

  <Component id="ContainerItems" type="data.Data" execution="native" light="false">
    <Param name="Container" type="uiaspect.Container"><Default value="%$_Cntr%" /></Param>
  </Component>

  <Component id="ContainerElements" type="data.Data" execution="native" light="false">
    <Param name="Container" type="uiaspect.Container">
      <Default value="%$_Cntr%" />
    </Param>
  </Component>

  <Component id="SubContainers" type="uiaspect.Container" execution="native" light="false">
    <Param name="FieldIds" />
  </Component>

  <Component id="Aspects" type="uiaspect.Aspect" dtsupport="false" light="false">
    <Param name="Aspect" type="uiaspect.Aspect[]" script="true" essential="true" />
    <xtml t="xtml.UseParamArray" Param="Aspect" />
  </Component>

  <Component id="DefaultAspects" type="uiaspect.Aspect" description="Default features: selection, toolbar, etc" hidden="true" deprecated="true">
    <Param name="ItemSelection" type="data.Boolean" description="">
      <Default value="true"/></Param>
    <Param name="Toolbar" type="data.Boolean"><Default value="true" /></Param>
    <Param name="AutoDoubleClick" type="data.Boolean"><Default value="false" /></Param>
    <Param name="MenuAspect" type="operation.MenuAspect[]" script="true" />
    <xtml t="uiaspect.Aspects">
      <Aspect t="uiaspect.ItemSelection" Condition="%$ItemSelection%" />
      <Aspect t="uiaspect.ItemDetails" />
      <Aspect t="uiaspect.Toolbar" Location="header" ID="default" Condition="%$Toolbar%">
        <MenuAspect t="xtml.UseParamArray" Param="MenuAspect" />
      </Aspect>
      <Aspect t="uiaspect.OnDoubleClick" Condition="%$AutoDoubleClick%"/>
    </xtml>
  </Component>

  <Component id="DefaultFeatures" type="uiaspect.Aspect" description="Default features: selection, toolbar, etc">
    <Param name="ItemSelection" type="data.Boolean" description="">
      <Default value="true"/></Param>
    <Param name="Toolbar" type="data.Boolean"><Default value="true" /></Param>
    <Param name="ItemDetails" type="data.Boolean"><Default value="true" /></Param>
    <Param name="AutoDoubleClick" type="data.Boolean"><Default value="false" /></Param>
    <Param name="MenuAspect" type="operation.MenuAspect[]" script="true" />
    <xtml t="uiaspect.Aspects">
      <Aspect t="uiaspect.ItemSelection" Condition="%$ItemSelection%" />
      <Aspect t="uiaspect.ItemDetails" Condition="%$ItemDetails%" />
      <Aspect t="uiaspect.Toolbar" Location="header" ID="default" Condition="%$Toolbar%">
        <MenuAspect t="xtml.UseParamArray" Param="MenuAspect" />
      </Aspect>
      <Aspect t="uiaspect.OnDoubleClick" Condition="%$AutoDoubleClick%"/>
    </xtml>
  </Component>

  <Component id="PropertySheet" type="uiaspect.DocumentPresentation" execution="native" >
    <Param name="PropertiesWidth" advanced="true"><Default value="80"/></Param>
    <Param name="Space" advanced="true"><Default value="5px"/></Param>
    <Param name="HeaderSpace" advanced="true"><Default value="0"/></Param>
    <Param name="FooterSpace" advanced="true"><Default value="0"/></Param>
  </Component>
  
  <Component id="Group" type="uiaspect.DocumentPresentation" execution="native" jbart="false">
    <Param name="Style" type="group.Style">
      <Default t="group.PropertySheet" />
    </Param>
  </Component>
  
  <Component id="Vertical" type="uiaspect.DocumentPresentation" execution="native" gallery="Vertical" >
    <Param name="Align" type="enum">
      <value>left</value>
      <value>center</value>
      <value>right</value>
    </Param>
    <Param name="Space" advanced="true"><Default value="5px"/></Param>
    <Param name="HeaderSpace" advanced="true"><Default value=""/></Param>
    <Param name="FooterSpace" advanced="true"><Default value=""/></Param>
  </Component>
  
  <Component id="TabControl" type="uiaspect.DocumentPresentation" execution="native" gallery="TabControl" hidden="true">
    <Param name="Style" type="tabcontrol.Style" script="true">
      <Default t="tabcontrol.BlueTabs" />
    </Param>
    <Param name="KeepSelectedTab" type="uiaspect_config.ConfigurationStorage" advanced="true">
      <Default t="uiaspect_config.InUrlFragment" />
    </Param>
  </Component>
  
  <Component id="Horizontal" type="uiaspect.DocumentPresentation" execution="native">
    <Param name="Spacing" description="e.g. 5px or 5px,20px,3px for different spacings"><Default value="5px"/></Param>
    <Param name="HideInnerTitles" type="data.Boolean" />
    <Param name="EnforceSpacing" type="data.Boolean" advanced="true" ><Default value="true" /></Param>
    <Param name="Widths" description="e.g. 50px,100px,30px" advanced="true" />
    <Param name="MinWidths" description="e.g. 30px,80px,30px" advanced="true" />
    <Param name="MaxWidths" description="e.g. 50px,100px,30px" advanced="true" />
    <Param name="AlighLastToRight" type="data.Boolean" advanced="true" />
    <Param name="FullWidth" type="data.Boolean" advanced="true"><Default value="false"/></Param>
    <Param name="Css" css="true" Default="">
      <Default><![CDATA[
.aahoriz_td { vertical-align: top; }
.aa_float_right { float: right }
.aa_float_left { float: left }
.right2left .aa_float_right { float: left }
.right2left .aa_float_left { float: right }
      ]]></Default>
    </Param>
  </Component>

  <Component id="BoxLayout" type="uiaspect.DocumentPresentation,uiaspect.ItemListPresentation" execution="native" description="required css3. display: box">
    <Param name="Orient" type="enum" Options="horizontal,vertical,by orientation" description="box-orient"><Default value="horizontal"/></Param>
  </Component>

  <Component id="AlignRight" type="uiaspect.Aspect" execution="native" category="layout"/>

  <Component id="MultipleColumns" type="uiaspect.DocumentPresentation" execution="native">
    <Param name="Columns">
      <Default value="2" />
    </Param>
    <Param name="Gap" advanced="true"><Default value="80px"/></Param>
    <Param name="PropertiesWidth" advanced="true"><Default value="80"/></Param>
    <Param name="Space" advanced="true"><Default value="5px"/></Param>
    <Param name="HeaderSpace" advanced="true"><Default value="0"/></Param>
    <Param name="FooterSpace" advanced="true"><Default value="0"/></Param>
  </Component>

  <Component id="ExpandCollapseSections" type="uiaspect.Aspect" execution="native" category="sections" light="false"/>

  <Component id="ItemHighlight" type="uiaspect.Aspect" execution="native" category="table,list" hidden="true">
      <Param name="CssClass" script="true"/>
      <Param name="BackgroundColor" script="true"/>
      <Param name="FontColor" script="true"/>
      <Param name="FontWeight" script="true"/>
    </Component>

  <Component id="DoSave" type="action.Action" light="false">
    <xtml t="action_async.RunAsync">
      <Action t="object.RunMethod" Object="%$_Items%" Method="Save" />
    </xtml>
  </Component>

  <Component id="FirstSubContainer" execution="native" light="false">
    <Param name="Element"><Default value="%$_Cntr/Ctrl%" /></Param>
  </Component>

  <Component id="Teasers" type="uiaspect.Aspect" execution="native" category="list" description="Show image and text">
      <Param name="OpenOnClick" type="data.Boolean" description=""/>
    <Param name="Presentation" type="uiaspect.DocumentPresentation" script="true" >
      <Default t="uiaspect.PropertySheet" />
    </Param>
    <NativeHelper name="Control" t="ui.Document" >
      <Item t="data_items.Items" Items="%%" />
      <Fields value="%$_ParentCntr/Fields%"/>
      <Presentation t="xtml.UseParam" Param="Presentation" />
    </NativeHelper>
  </Component>
  
  <Component id="ContainerControl" type="ui.Control" dtsupport="false" hidden="true" execution="native" >
    <Param name="Container"><Default value="%$_Cntr%" /></Param>
  </Component>
  
  <Component id="ContainerFromControl" type="ui.Control" dtsupport="false" hidden="true" execution="native">
    <Param name="Control" />
  </Component>
  
   <!-- Filters --> 
  <Component id="ExposedFiltersSection" type="uiaspect.Aspect" category="filters" execution="native" description="Interactive Filters" promoted="true">
    <Param name="FieldIds" />
    <Param name="Phase"/>
  </Component>

  <Component id="OccurrencesFollowup" type="uiaspect.Aspect" category="filters" execution="native" jbart="false">
    <Param name="OccurrencesFollowup" type="action.Action">
      <Default t="ui.OpenPage" />
    </Param>
  </Component>
  
  <Component id="FilterSection" gallery="FilterPage" type="uiaspect.Aspect" description="Define filters inside this section" >
      <Param name="DelayedFiltering" type="data.Boolean" description="filter done only when the filter button is pressed"/>
    <Param name="QueryExpression" script="true" description="E.g. %$Exp% AND age &gt; '%@from%' AND age &lt; '%@to%' ">
      <Default value="%$Exp%"/>
    </Param>
    <xtml t="action.RunActions">
      <Action t="object.SetBooleanProperty" Object="%$HeaderFooterCntr%" Property="DelayedFiltering" Value="%$DelayedFiltering%"/>
      <Action t="object.SetMethod" Object="%$HeaderFooterCntr%" Method="ExtraQueryExpression">
        <Xtml t="xtml.UseParam" Param="QueryExpression"/>
      </Action>
    </xtml>
  </Component>
  
  <Component id="FilteredItemsCount" type="data.Data" category="filters" execution="native" jbart="false"/>
  <Component id="UnFilter" type="action.Action" category="filters" execution="native" light="false"/>

  <Component id="FastFindInHtmlTree" type="uiaspect.Aspect" execution="native" category="filters" light="false">
    <NativeHelper name="Control" t="field.ShowFieldControl" Item="%%" Class="aa_filter_input">
      <Var name="_OriginalField" value="%$_Field%"/>
      <Var name="_OriginalCntr" value="%$_Cntr%"/>
      <Field t="field.Field1" ID="%$_OriginalField/ID%_filter">
        <FieldAspect t="field_aspect.SimpleInput"/>
        <FieldAspect t="field_aspect.DescriptionForEmptyText" Description="%$DescriptionForEmptyText%"/>
        <FieldAspect t="field_aspect.OnUpdate">
          <Action t="uiaction.DoFind">
            <Var name="_Cntr" value="%$_OriginalCntr%"/>
          </Action>
        </FieldAspect>
        <FieldAspect t="field_aspect.PopupImage" ID="options" />
      </Field>
    </NativeHelper>
  </Component>

  
  <Compenent id="MaxItemsToShow" type="uiaspect.Aspect" category="table,list" light="false">
    <Param name="MaxItemsToShow"/>
    <xtml t="uiaspect.AspectByXtml"> 
      <InitializeContainer t="object.SetNumericProperty" Object="%$_Cntr%" Property="MaxItemsToShow" Value="%$MaxItemsToShow%"/>
    </xtml>
  </Compenent>
  
  <Component id="CustomItemControl" type="uiaspect.Aspect" category="advanced" execution="native" light="false">
    <Param name="Control" type="ui.Control" script="true"/>
    <Param1 name="Page" type="ui.SinglePage" script="true"/>
  </Component>

  <Component id="PieChart" type="uiaspect.Aspect" category="menu" light="false">
      <Param name="Location" type="enum">
        <Default value="footer"/>
        <value>header</value>
        <value>footer</value>
        <value>header and footer</value>
        <value>footer, header only for many items</value>
      </Param>
      <Param name="Type" type="enum" Options="p,p3"><Default value="p3"/></Param>
      <Param name="Size"><Default value="400x200"/></Param>
      <Param name="ItemText" script="true"/>
      <Param name="ItemValue" script="true"/>
      <Param name="ChartType" type="enum" Options="static,interactive"><Default value="interactive"/></Param>
      <xtml t="uiaspect.HeaderFooter" Identifier="chart" Location="%$Location%" RefreshStrategy="container change">
        <Control t="ui.IfThenElse" If="%$ChartType%=='interactive'">
          <Then t="gchart.PieChart" Size="%$Size%" Items="%$_Cntr/Items/Items%">
            <ItemText t="xtml.UseParam" Param="ItemText"/>
            <ItemAmount t="xtml.UseParam" Param="ItemValue"/>
            <OnItemClick t="operation.Open">
              <Var name="_ItemsOfOperation" value="%%" />
            </OnItemClick>
          </Then>
          <Else t="ui.Image" Source="http://chart.apis.google.com/chart?cht=%$Type%&amp;chs=%$Size%&amp;chd=t:%$chd%&amp;chl=%$chl%">
            <Var name="chd" t="data.Pipeline">
              <Item value="%$_Cntr/Items/Items%"/>
              <Item t="xtml.UseParam" Param="ItemValue"/>
              <Aggregator t="text.Concat" Separator=","/>
            </Var>
            <Var name="chl" t="data.Pipeline">
              <Item value="%$_Cntr/Items/Items%"/>
              <Item t="xtml.UseParam" Param="ItemText"/>
              <Aggregator t="text.Concat" Separator="|"/>
            </Var>
          </Else>
        </Control>
      </xtml>
    </Component>

  <Component id="Chart" type="uiaspect.Aspect" category="graph" execution="native" light="false">
    <Param name="Type" type="enum" Options="pie,bar" />
    <Param name="ItemText" script="true"/>
    <Param name="ItemValue" script="true"/>
  </Component>
  
  <Component id="Tiles" type="uiaspect.ItemListPresentation" execution="native" gallery="TeasersTiles" hidden="true">
      <Param name="ImageOrVideo" script="true"/>
      <Param name="DefaultImage" description="when tile item has no image" />
      <Param name="Title"><Default value="%@Title%"/></Param>
      <Param name="Text"/>
      <Param name="ImageSize" description="width,height"><Default value="120,120"/></Param>
      <Param name="TileExtraSize" description="For the text and spacing. format: width,height"><Default value="80,60"/></Param>
      <Param name="MaxTextLength" advanced="true">
        <Default value="200"/>
      </Param>
      <Param name="KeepImageProportion" type="data.Boolean" advanced="true"><Default value="true"/></Param>
      <Param name="Clickable" type="enum" advanced="true">
        <Default value="tile"/>
        <value>tile</value>
        <value>title</value>
        <value>none</value>
      </Param>
      <Param name="MoreFields" type="dynamic_enum_multi" recalc_options="true" advanced="true">
        <Options value="%$DataHolderCntr/Fields/Id%">
          <Var name="Preview" t="dataview.DataViewPreview"/>
          <Var name="DataHolderCntr" t="xtml.VariableValueFromContext" Variable="DataHolderCntr" ScriptAndContext="%$Preview%"/>
        </Options>
      </Param>
      <Param name="Action" type="action.Action" script="true" advanced="true">
        <Default t="operation.Open"/>
      </Param>
    </Component>
  
  <Component id="CustomListPresentation" type="uiaspect.ItemListPresentation" execution="native" jbart="false">
    <Param name="List" type="ui.Control" script="true"/>
  </Component>

  <Component id="None" type="uiaspect.ItemListPresentation">
    <xtml t="uiaspect.CustomListPresentation"/>
  </Component>
  <Component id="Empty" type="uiaspect.ItemListPresentation" hidden="true">
    <xtml t="uiaspect.CustomListPresentation"/>
  </Component>

  <Component id="Css" type="uiaspect.Aspect" execution="native" gallery="Css" description="Set the html style by condition" promoted="true">
      <Param name="OnElement" type="enum" description="">
        <value>container</value>
        <value>container body</value>
        <value>table</value>
        <value>items</value>
        <value>cells</value>
        <value>title row</value>
        <value>title cell (th)</value>
        <value>title text</value>
        <value>tree item text</value>
        <Default value="container"/>
      </Param>
      <Param name="Inline" script="true">
        <FieldAspect t="field_dt.CodeMirrorFieldEditor" CompId="uiaspect.Css" ParamName="Inline" />
      </Param>
      <Param name="Class" script="true"/>
      <Param name="OnCondition" script="true" type="data.Boolean" description="e.g. %@age% &gt; 20"/>
    </Component>

  <Component id="CssClass" type="uiaspect.Aspect" execution="native" hidden="true">
    <Param name="CssClass" />
  </Component>

 <Component id="PathOfElement" type="data.Data" execution="native" light="false">
   <Param name="Element" />
 </Component>

 <Component id="IsElemOpen" type="data.Boolean">
   <Param name="Item" />
   <xtml t="object.BooleanHtmlAttachment" ID=""/>
 </Component>
 
 <Component id="Permissions" type="uiaspect.Aspect" execution="native" category="model" jbart="false">
   <Param name="VisibleIf" type="data.Boolean" script="true"><Default value="true"/></Param>
   <Param name="WritableIf" type="data.Boolean" script="true" />
   <Param name="ControlIfNotVisible" type="ui.Control" script="true"><Default t="ui.Text" Text="Access denied" Class="aa_access_denied"/></Param>
 </Component>
 
 <Component id="AspectByXtml" type="uiaspect.Aspect" light="false" execution="native">
   <Param name="InitializeContainer" type="action.Action" script="true" />
 </Component>
 
 <Component id="IncrementalBuilder" type="uiaspect.Aspect" description="Advanced settings of the incremental items presenter">
   <Param name="ShowAll" type="data.Boolean" description="Do not use the incremental builder"/>
   <Param name="PageLimitMSec" description="Time limit of building the whole table"><Default value="2000"/></Param>
   <Param name="ShowIncrementalBuild" description="Show Items as they are built" type="data.Boolean"><Default value="true"/></Param>
   <Param name="ChunkLimitMSec" description="Time limit of CPU stuck in building tables and lists"><Default value="200"/></Param>
   <Param name="WaitBetweenChunksMSec" description="Time limit of CPU stuck in building tables and lists"><Default value="1"/></Param>
   <Param name="SyncMode" type="data.Boolean" advanced="true" description="May freeze the browser, use only for performance monitoring" />
   <xtml t="uiaspect.AspectByXtml"> 
      <InitializeContainer t="action.RunActions">
        <Action t="object.SetBooleanProperty" Object="%$_Cntr%" Property="DoNotUseIncrementalBuilder" Value="true" />
        <Action t="object.SetNumericProperty" Object="%$_Cntr%" Property="PageLimitMSec" Value="%$PageLimitMSec%" />
        <Action t="object.SetBooleanProperty" Object="%$_Cntr%" Property="ShowIncrementalBuild" Value="%$ShowIncrementalBuild%" />
        <Action t="object.SetNumericProperty" Object="%$_Cntr%" Property="ChunkLimitMSec" Value="%$ChunkLimitMSec%" />
        <Action t="object.SetBooleanProperty" Object="%$_Cntr%" Property="ShowItemsInSyncMode" Value="%$SyncMode%" />
      </InitializeContainer>
   </xtml>
 </Component>
 
  <Component id="XtmlControl" type="uiaspect.Control" light="false">
      <Param name="Control" script="true" type="ui.Control" essential="true"/>
      <xtml t="xtml.UseParam" Param="Control"/>
    </Component>
  
  <Component id="ElementItemData" type="data.Data" execution="native" light="false">
    <Param name="Element" essential="true"/>
  </Component>
  
  <Component id="MaxTreeDepth" type="data.Data" execution="native" light="false">
    <Param name="Depth" essential="true" ><Default value="50" /></Param>
  </Component>

  <Component id="ReadOnly" type="uiaspect.Aspect">
    <xtml t="uiaspect.AspectByXtml"> 
      <InitializeContainer t="object.SetBooleanProperty" Object="%$_Cntr%" Property="ReadOnly" Value="true" />
    </xtml>
  </Component>
  <Component id="WrappersAsItems" type="uiaspect.Aspect" light="false">
    <xtml t="uiaspect.AspectByXtml"> 
      <InitializeContainer t="object.SetBooleanProperty" Object="%$_Cntr%" Property="WrappersAsItems" Value="true" />
    </xtml>
  </Component>

  <Component id="ClickableRows" type="uiaspect.Aspect" execution="native" jbart="true" gallery="ClickableRows" description="Assign action on row click">
      <Param name="Action" type="action.Action" script="true" RunningInput="%$_Items/Items%" description="">
        <Default t="operation.Open"/>
     </Param>
    <Param name="DisableSelection" advanced="true" type="data.Boolean" Default="true" />
    <Param name="Css" css="true" Default="#this { cursor:pointer; } #this:hover { background: rgb(243,249,254); }" />
  </Component>

  <Component id="MultiSelect" type="uiaspect.Aspect" execution="native" category="table" gallery="MultiSelect" description="Allows multiple item selection with checkbox">
      <Param1 name="Type" type="enum" Options="checkbox,multi-select">
        <Default value="checkbox"/>
      </Param1>
      <Param name="SelectionFieldTitle"/>
    </Component>
    
  <Component id="InheritsItems" type="uiaspect.Aspect" advanced="true" light="false">
    <xtml t="uiaspect.AspectByXtml"> 
      <InitializeContainer t="object.SetBooleanProperty" Object="%$_Cntr%" Property="InheritsItems" Value="true" />
    </xtml>
  </Component>
  
  <Component id="HoverCss" type="uiaspect.Aspect" execution="native" gallery="HoverCss" description="">
      <Param name="Css" description="">
        <Default value="background: rgb(243,249,254);"/>
      </Param>
    </Component>
  
  <Component id="ItemClickable" type="uiaspect.Aspect" execution="native">
    <Param name="ClickAction" type="action.Action" script="true">
      <Default t="operation.Open"/>
    </Param>
    <Param name="PointerCursor" type="data.Boolean" Default="true" />
  </Component>
  
  <Component id="List" type="uiaspect.ItemListPresentation" execution="native" gallery="List">
      <Param name="EachItemInLine" type="data.Boolean"/>
      <Param name="ItemSize" description="width,height"><Default value="200,150"/></Param>
      <Param name="ItemCss">
        <Default value="overflow:hidden; padding:10px;"/>
        <FieldAspect t="field_dt.CodeMirrorFieldEditor" CompId="uiaspect.List" ParamName="ItemCss" />
      </Param>
      <Param1 name="FieldsLayout" type="uiaspect.DocumentPresentation" script="true" advanced="true">
        <Default t="uiaspect.Vertical" />
      </Param1>
      <Param name="ItemClickable" type="data.Boolean">
        <Default value="true"/>
      </Param>
      <Param name="ClickAction" type="action.Action" script="true" advanced="true">
        <Default t="operation.Open"/>
      </Param>
      <Param name="SpacingBetweenFields" advanced="true">
        <Default value="5px" />
      </Param>
    </Component>

  <Component id="ItemList" type="uiaspect.ItemListPresentation" jbart="true" execution="native" autoexpand="true">
    <Param name="Style" type="itemlist.Style"><Default t="itemlist.Tiles"/></Param>
    <Param name="ItemName" script="true" light="false" />
    <Param name="ItemImage" type="image.Image" light="false"/>
  </Component>
    
    
  <Component id="PickList" type="uiaspect.ItemListPresentation" light="false">
    <Param name="Title"/>
    <Param name="ItemText" script="true"/>
    <Param name="AutoSelectFirst" type="data.Boolean"/>
    <Param name="FieldAspect" type="field.FieldAspect[]" script="true" />
    <xtml t="uiaspect.CustomListPresentation">
        <List t="ui.List" customxtml="true">
          <Var name="PickItems" value="%$Items%" />
          <Layout t="ui.Horizontal" VerticalAlign="middle"/>
          <Control t="ui.Text" Text="%$Title1%:" MultiLang="true">
            <Condition t="yesno.NotEmpty" Value="%$Title%" />
            <Var name="Title1" t="text.Translate" Text="%$Title%"/>
          </Control>
          <Control t="ui.ControlWithAction">
            <Control t="field.ShowFieldControl" Item="%$_Index%">
              <Var name="_Index" t="data.WritableText">
                <DefaultValue value="0" Condition="%$AutoSelectFirst%"/>
              </Var>
            <Field t="field.Field1" ID="cntr_picklist">
              <FieldAspect t="field_aspect.Picklist">
                <Options t="picklist.DynamicOptions" Options="%$Items%" OptionCodeByIndex="true">
                  <OptionLabel t="xtml.UseParam" Param="ItemText"/>
                </Options>
              </FieldAspect>
              <FieldAspect t="field_aspect.OnUpdate">
                <Action t="operation.Open">
                    <Data t="data.Pipeline">
                      <Item value="%$PickItems%" />
                      <Aggregator t="data.Subset" Count="1">
                        <From t="data.Math" Expression="%$_Index%+1" />
                      </Aggregator>
                    </Data>
                    <Var name="_ItemsOfOperation" value="%%" />
                </Action>
              </FieldAspect>
              <FieldAspect t="field_aspect.Writable" />
              <FieldAspect t="xtml.UseParamArray" Param="FieldAspect" />
            </Field>
            </Control>
            <RunAfterControl t="operation.Open" Condition="%$AutoSelectFirst%">
              <Data t="data.Pipeline">
                <Item value="%$PickItems%"/>
                <Aggregator t="data.First" />
              </Data>
              <Var name="_ItemsOfOperation" value="%%" />
            </RunAfterControl>
          </Control>
        </List>
    </xtml>
  </Component>
  
</xtml>

<xtml ns="uiaspect_config">
  <Type id="ConfigurationStorage" />
  
  <Component id="InUrlFragment" type="uiaspect_config.ConfigurationStorage" execution="native" />
  
  <Component id="None" type="uiaspect_config.ConfigurationStorage">
    <xtml t="data.Empty" />
  </Component>
  
</xtml>


<xtml ns="operation" deprecated="true">

    <Component id="ContainerOperations" type="operation.MenuAspect" execution="native">
        <Param name="Target" type="enum">
          <Default value="all"/>
          <value>new</value>
          <value>items</value>
          <value>all</value>
        </Param>
        <Param name="IncludeInnerContainers" type="data.Boolean"><Default value="true"/></Param>
    </Component>

  <Component id="Menu" type="Operation.Menu" execution="native">
    <Param name="MenuAspect" type="operation.MenuAspect[]" script="true"/>
    <Param name="Operations" type="operation.Operations"/>
    <NativeHelper name="Control" t="ui.List">
      <Class t="data.IfThenElse" If="%=Count($_Menu/Items)% == 0" Then="" Else="aa_toolbar"/>
      <Control t="ui.DynamicList" Items="%$_Menu/Items%">
        <Control t="ui.ButtonOld" Class="aa_operation %Id%">
          <Image t="object.RunMethod" Method="Icon" Input="%$_ItemsOfOperation%"/>
          <Text t="object.RunMethod" Method="Title" Input="%$_ItemsOfOperation%" />
          <OnClick t="object.RunMethod" Method="Action" Input="%$_ItemsOfOperation%"/>
          <Style t="object.RunMethod" Object="%$_Menu%" Method="Presentation"/>
        </Control>
        <Layout t="ui.ButtonsLayout"/>
      </Control>
    </NativeHelper>
  </Component>

  <Component id="Operation" type="operation.Operations" execution="native">
    <Param name="ID" advanced="always" essential="true"/>
    <Param name="Title" summary="false" script="true" essential="true" />
    <Param name="CssClass" summary="false" advanced="true" script="true"/>
    <Param name="Icon" summary="false" script="true" />
    <Param name="Disabled" type="data.Boolean" script="true" />
    <Param name="Action" type="action.Action" script="true" essential="true" RunningInput="%$_Items/Items%" />
    <Param name="Aspect" type="operation_aspect.Aspect" script="true" advanced="true"/>
    <Param name="Shortcut" summary="false" advanced="true"/>
    <Param name="WritableOnly" type="data.Boolean" advanced="true" />
    <Param name="Target" summary="false" type="enum" Options="item,items,new"><Default value="item"/></Param>
  </Component>

  <Component id="Operations" type="operation.Operations" execution="native" light="false" dtsupport="false">
    <Param name="Operation" type="operation.Operations[]" script="true" essential="true" />
  </Component>

  <Component id="RemoveDisabled" type="operation.MenuAspect" execution="native"/>

  <Component id="OpenDialog" type="action.Action">
      <Param name="Style" type="dialog_style.Style">
        <Default t="dialog_style.DefaultDialog" />
      </Param>
      <Param name="Title" essential="true"/>
      <Param name="Contents" type="ui.Page"/>
      <Param name="Feature" type="dlg.DialogFeature[]" script="true"/>
      <Param name="RunOnOK" type="action.Action" script="true" />
      <Param name="DialogData" type="data.Data" advanced="true">
        <Default value="%%"/>
      </Param>
      <Param name="LauncherElement" advanced="true" Default="%$ControlElement%"/>
      <Param name="UsePageData" type="data.Boolean" advanced="true"><Default value="true"/></Param>
      <xtml t="dlg.OpenDialog" Title="%$Title%" DialogData="%$DialogData%" Style="%$Style%" LauncherElement="%$LauncherElement%">
        <Contents t="ui.ShowPage" Page="%$Contents%">
          <PageParams t="ui.PageParams">
            <Condition t="yesno.Not" Of="%$UsePageData%" />
            <DataItems t="data_items.Items" Items="%%" />
          </PageParams>
        </Contents>
        <RunOnOK t="xtml.UseParam" Param="RunOnOK"/>
        <Feature t="xtml.UseParamArray" Param="Feature"/>
      </xtml>
    </Component>

</xtml>

<xtml ns="ui">

 <Component id="IfThenElse" type="ui.Control" execution="native">
      <Param name="If" type="data.Boolean" script="true" essential="true"/>
      <Param name="Then" type="ui.Control" essential="true"/>
      <Param name="Else" type="ui.Control" essential="true"/>
 </Component>

  <Component id="Text" type="ui.Control" databind="true" execution="native">
   <Param name="Text" essential="true"/>
   <Param name="Style"/>
   <Param name="FixNewLines" type="data.Boolean"/>
   <Param name="MultiLang" type="data.Boolean"/>
   <Param name="HtmlContents" type="data.Boolean" />
   <Param name="Hint" />
  </Component>

  <Component id="ButtonOld" type="ui.Control" databind="true">
    <Description>A button can be a simple html button, an hyperlink or an image</Description>
    <Default value="false"/>
    <Param name="Text" essential="true"/>
    <Param name="OnClick" essential="true" type="action.Action" script="true" paramVars="ControlElement"/>
    <Param name="Style" type="ui.ButtonStyle" script="true">
      <Default t="ui.StandardButton"/>
    </Param>
    <Param name="Image"/>
    <Param name="Tooltip"/>
    <Param name="OnHover" type="action.Action" script="true"/>
    <Param name="IsSelected" type="data.Boolean" script="true" advanced="true"/>

    <xtml t="xtml.UseParam" Param="Style">
      <Var name="ButtonContext" t="xtml.Params">
        <Param name="Text" t="text.MultiLang" Pattern="%$Text%" Dynamic="true"/>
        <Param name="Image" value="%$Image%"/>
        <Param name="Tooltip" value="%$Tooltip%"/>
        <ScriptParam name="OnClick" t="xtml.UseParam" Param="OnClick" paramVars="ControlElement">
          <Condition t="yesno.And">
            <Item t="yesno.Not">
              <Of t="ui.HasClass" Cls="aa_loading" Data="%$ControlElement%"/>
            </Item>
          </Condition>
        </ScriptParam>
        <ScriptParam name="OnHover" t="xtml.UseParam" Param="OnHover"/>
      </Var>
      <Class value="aa_selected_btn">
        <Condition t="xtml.UseParam" Param="IsSelected"/>
      </Class>
    </xtml>
  </Component>

     <Component id="ButtonAsHyperlink" type="ui.ButtonStyle" image="%$_Images%/styles/button_hyperlink.png" execution="native">
       <Param name="TextInlineCss" advanced="true" />
       <Param name="ImageInlineCss" advanced="true" />
     </Component>
     
       <Component id="ButtonsLayout" type="ui.ListLayout" execution="xtml">
       <xtml t="xml.WithChanges" >
        <Var name="Controls" />
        <Xml t="ui.ControlWithCss">
          <Control t="ui.Html" Css="">
            <table cellspacing="0" cellpadding="0" width="none" class="aa_ButtonsLayout">
              <tr><td class="buttons_layout_td"/></tr>
            </table>
          </Control>
          <Css><![CDATA[#this>*>*>*.buttons_layout_td { vertical-align:middle; padding-right:10px; }
.right2left #this>*>*>*.buttons_layout_td { padding-right:0px !important; padding-left:10px; }
]]></Css>
        </Xml>
        <Change t="xml.Duplicate" Items="%$Controls%">
         <Element t="ui.ElementOfClass" Cls="buttons_layout_td" />
         <ChangeOnElement t="xml.AddChildren"  CloneChildren="false" Children="%%" />
        </Change>
       </xtml>
      </Component>

    <Component id="DataBind" type="xml.Change" execution="native">
       <Param name="Script"/>
       <Param name="InputForChanges"/>
     </Component>

      <Component id="DynamicList" type="ui.Control" execution="xtml" databind="true">
      <Param name="Items" />
      <Param name="Control" script="true" type="ui.Control"/>
      <Param name="Layout" script="true" type="ui.ListLayout"><Default t="ui.LineBreak"/></Param>
      <Param name="ControlForEmpty" type="ui.Control" script="true"/> 
      <xtml t="data.FirstSucceeding">
        <Item t="data.Pipeline" >
         <Item t="xtml.UseParam" Param="Items" />
         <Item t="xtml.UseParam" Param="Control" />
         <Aggregator t="xtml.UseParam" Param="Layout" />
        </Item>
        <Item t="xtml.UseParam" Param="ControlForEmpty" />
      </xtml>
     </Component>

     <Component id="ElementOfClass" type="data.Data" execution="native">
       <Param name="Cls" essential="true"/>
       <Param name="OnlyFirst" type="data.Boolean"><Default value="true"/></Param>
       <Param name="Direction" type="enum">
         <Default value="down"/>
         <value>up</value>
         <value>down</value>     
       </Param>
     </Component>

     <Component id="HasClass" type="data.Boolean" execution="native">
       <Param name="Cls"/>
     </Component>

     <Component id="Html" type="ui.Control" visibility="hidden" execution="native">
      <Param name="Html" />
      <Param name="Tag" />
      <Param name="DynamicContent" type="data.Boolean" ><Default value="false" /></Param>
     </Component>

     <Component id="ControlWithCss" type="ui.Control" execution="native">
       <Param name="Control" type="ui.Control" />
       <Param name="Css" codemirror="true" />
     </Component>
     <Component id="ItemList" type="ui.Control" databind="true" execution="native">
      <Param name="ID" ><Default value="ItemList"/></Param>
      <Param name="Items" type="data_items.Items" essential="true"/>
      <Param name="Field" type="field.Fields[]" script="true" essential="true"/>
      <Param name="Presentation" type="uiaspect.ItemListPresentation" script="true" essential="true"/>
      <Param name="Operations" type="operation.Operations"/>
      <Param name="Aspect" type="uiaspect.Aspect[]" script="true" />
      <Param name="DataHolder" type="dataview.DataHolder"/>
      <Param name="DataHolderCntr" type="data.Boolean"/>
      <Param name="Fields" type="field.Fields" description="deprecated. use Field instead" deprecated="true"/>
     </Component>

     <Component id="UseGroupAsPage" type="ui.SinglePage" execution="native">
       <Param name="Group" />
     </Component>
          
     <Component id="ItemPage" type="ui.SinglePage">
        <Param name="FieldsFromList" description="field ids to inherit. * for all fields"/>
        <Param name="Field" type="field.Fields[]" script="true" advanced="true"/>
        <Param name="Operations" type="operation.Operations" advanced="true" script="true"/>
        <Param name="Aspect" type="uiaspect.Aspect[]" advanced="true" script="true"/>
        <Param name="Presentation" type="uiaspect.DocumentPresentation" advanced="true" script="true" >
          <Default t="uiaspect.PropertySheet" />
        </Param>
        <xtml t="object.Object">
          <Property name="Fields" t="data.List">
            <Item t="data.ItemsByIDs" List="%$_Cntr/Fields%" IDs="%$FieldsFromList%" />
            <Item t="xtml.UseParamArray" Param="Field" />
          </Property>
          <Property name="ID" value="%$_Cntr/ID%_Details" />
          <Method name="Control" t="ui.Document" Item="%$_PageParams/DataItems%" ID="%$_This/ID%" >
            <Fields value="%$_This/Fields%" />
            <Operations t="xtml.UseParam" Param="Operations" />
            <Presentation t="xtml.UseParam" Param="Presentation" />
            <Aspect t="uiaspect.Permissions" WritableIf="false" Condition="%$_PageParams/ReadOnly%" />
            <Aspect t="xtml.UseParamArray" Param="Aspect" />
          </Method>
        </xtml>
      </Component>

      <Component id="LineBreak" type="ui.ListLayout">
       <Param name="Separator" type="ui.Control" />
       <Param name="IncludeSpacing" type="data.Boolean"><Default value="true"/></Param>
       
       <xtml t="data.Pipeline" >
        <Var name="Controls" />
        <Item t="data.Pipeline">
          <Item value="%$Controls%" />
          <Aggregator t="data.AddSeparator" Separator="%$Separator%" />
        </Item>
        <Item t="xml.Wrap" >
         <Head t="ui.Html">
          <DIV class="aa_linebreak"/>
         </Head>
        </Item>
       <Aggregator t="xml.Wrap">
        <Head t="ui.Html">
         <DIV/>
        </Head>
       </Aggregator>
       </xtml>
      </Component>

      <Component id="PageParams" type="ui.PageParams">
        <Param name="DataItems" type="data_items.Items"/>
        <Param name="ReadOnly" type="enum" Options="false,true,inherit"><Default value="inherit"/></Param>
        <Param name="UiPrefs" advanced="true" description="can set default filters, sorts, etc."/>
        <Param name="PageID" />
        <Param name="Aspect" type="uiaspect.Aspect[]" advanced="true" script="true"/>
        <xtml t="object.ObjectFromParams">
          <Property name="ReadOnly" t="data.IfThenElse" If="%$ReadOnly%=='inherit'" Then="%$_Cntr/ReadOnly%" Else="%$ReadOnly%" /> 
          <Method name="Aspect" t="xtml.UseParamArray" Param="Aspect"/>
        </xtml>
      </Component>

      <Component id="ToggleClassByCondition" type="action.Action" execution="native" light="false">
        <Param name="Element" />
        <Param name="ClassCondition" type="data.Boolean" script="true"><Default value="true"/></Param>
        <Param name="Class" />
      </Component>

     <Component id="Document" type="ui.Control" databind="true" execution="native">
      <Param name="ID" ><Default value="Document"/></Param>
      <Param name="Item" type="data_items.Items">
        <Default t="data_items.Items" Items="%%" />
      </Param>
      <Param name="Field" type="field.Fields[]" script="true" essential="true"/>
      <Param name="Operations" type="operation.Operations"/>
      <Param name="Aspect" type="uiaspect.Aspect[]" script="true"/>
      <Param name="SectionAspect" type="uiaspect.SectionAspect[]" script="true"/>
      <Param name="Presentation" type="uiaspect.DocumentPresentation" script="true" >
        <Default t="uiaspect.PropertySheet" />
      </Param>
      <Param name="Fields" type="field.Fields" description="deprecated. use Field instead" deprecated="true"/>
     </Component>

  <Component id="Horizontal" type="ui.ListLayout" execution="xtml">
   <Param name="Padding"><Default value="10px"/></Param>
   <Param name="ColumnCssClass" />
    <Param name="VerticalAlign" type="enum"><Default value="none" />
      <value>top</value>
      <value>middle</value>
      <value>bottom</value>
      <value>none</value>
    </Param>
   <xtml t="xml.WithChanges" >
    <Var name="Controls" />
    <Xml t="ui.Html" DynamicContent="true">
      <table style="font-size:100\%" class="horizontal_layout" cellspacing="0" cellpadding="0">
        <tr><td style="vertical-align:top;" class="horizontal_td %$ColumnCssClass%" /></tr>
      </table>
    </Xml>
    <Change t="xml.Duplicate" Items="%$Controls%" >
     <Element t="ui.ElementOfClass" Cls="horizontal_td" />
     <ChangeOnElement t="xml.AddChildren"  CloneChildren="false">
       <Children t="data.Same"/>
     </ChangeOnElement>
     <ChangeOnElement t="uiaction.RunUiActions">
      <Action t="uiaction.SetCssProperty" Property="vertical-align" Value="%$VerticalAlign%" />
      <Condition t="yesno.ItemsNotEqual" Item1="%$VerticalAlign%" Item2="none"/>
     </ChangeOnElement>
     <ChangeOnElement t="uiaction.AddClass" RunOn="%%" Cls="item_%$DuplicateIndex%" />
     <Separator t="data.Pipeline">
      <Var name="Width" t="text.Text" Text="width:%$Padding%;" >
        <Condition t="yesno.NotEmpty" Data="%$Padding%" />
      </Var>
      <Item t="ui.Html" DynamicContent="true">
          <td style="%$Width%" class="horizontal_Separator"><div></div></td>
        </Item>
     </Separator>
    </Change>
   </xtml>
  </Component>

   <Component id="ControlToRunOn" type="ui.Control">
     <xtml value="%$ControlElement%"/>
   </Component>

 <Component id="HtmlControl" type="ui.Control" execution="native" databind="true">
      <Param name="Html" essential="true"/>
      <Param name="Css"/>
      <Param name="WordWrap" type="data.Boolean">
        <Default value="true"/>
      </Param>
    </Component>

 <Component id="Image" type="ui.Control" databind="true" execution="native" >
  <Param name="Source" essential="true"/>
  <Param name="OnClick" type="action.Action" script="true"/>
  <Param name="Title" />
  <Param name="Width" />
  <Param name="Height" />
 </Component>


</xtml>

<xtml ns="uiaction">

  <Component id="DoFind" type="action.Action" execution="native" light="false"/>

     <Component id="RunUiActions" type="xml.Change" execution="native">
      <Param name="Action" type="action.Action[]" essential="true" />
     </Component>
     

</xtml>

<xtml ns="xmlui">

 <Component id="ShowXmlDialogOld" type="action.Action" deprecated="true">
      <Param name="Xml">
        <Default value="%%"/>
      </Param>
      <Param name="Title" essential="true"/>
      <Param name="Height">
        <Default t="ui.ScreenSize" Axis="height" Margin="200" AsHtmlString="true"/>
      </Param>
      <Param name="AutoWrite" type="data.Boolean"/>
      <Param name="AutoWriteAllowTagChange" type="data.Boolean"/>
      <Param name="OnChangeXml" type="action.Action" script="true"/>
      <Param name="OnUpdate" type="action.Action" script="true"/>
      <Param name="OnCancel" type="action.Action" script="true"/>
      <xtml t="dialog.OpenDialog">
        <Dialog t="dialog.Dialog" AlwaysLTR="true" Title="%$Title%" NoTransaction="true">
          <Var name="AsText" t="data.WritableText">
            <DefaultValue t="xml.XmlToText" PrettyPrint="true" Data="%$Xml%"/>
          </Var>
          <Content t="xmlui.CodeMirrorTextarea" Data="%$AsText%" AutoFocus="true" Type="xml" Height="%$Height%" Class="xmltextarea">
            <Width t="ui.ScreenSize" Axis="width" Margin="300" AsHtmlString="true"/>
            <OnUpdate t="uiaction.Hide" RunOn="updown(.ajaxart,.message_bar.validation)"/>
          </Content>
          <RunOnOK t="action.RunActions" Data="%$OriginalInput%">
            <Var name="AsXml" t="xml.TextToXml" Data="%$AsText%"/>
            <Action t="xml.ChangeXml" Xml="%$Xml%" Condition="%$AutoWrite%">
              <Change t="xml.ReplaceElement" Data="%$Xml%" NewElement="%$AsXml%">
                <Mode t="data.IfThenElse" If="%$AutoWriteAllowTagChange%" Then="replace tag" Else="keep original tag"/>
              </Change>
            </Action>
            <Action t="xtml.UseParam" Param="OnChangeXml" Input="%$AsXml%" />
            <Action t="xtml.UseParam" Param="OnUpdate" Input="%$AsText%"/>
          </RunOnOK>
          <RunOnCancel t="xtml.UseParam" Param="OnCancel"/>
          <Validations t="ui.ValidationList">
            <Validation t="ui.Validation" Message="invalid xml: %$Error%">
              <Var name="Error" t="xml.XmlParsingError" XmlAsText="%$AsText%"/>
              <SuccessCondition t="yesno.IsEmpty" Value="%$Error%"/>
            </Validation>
            <Validation t="xmlui.CallUpdateOfCodeMirror" RunOn="updown(.dialog_box,.xmltextarea)"/>
          </Validations>
        </Dialog>
      </xtml>
    </Component>

</xtml>
</xtml>